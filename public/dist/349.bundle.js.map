{"version":3,"file":"349.bundle.js","mappings":";gGAMA,SAASA,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,C,64BACA,MAAMC,EAAM,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,EAAIP,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,EAAIV,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMW,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAgCvC,MAAMS,EAAS,+GACf,SAASC,EAAS1B,EAAG2B,EAAG5B,GACtB,MAAMgB,EAAIY,EAAI1B,KAAKE,IAAIJ,EAAG,EAAIA,GACxBqB,EAAI,CAACQ,EAAGC,GAAKD,EAAI5B,EAAI,IAAM,KAAOD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAI0B,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACT,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASU,EAAS9B,EAAG2B,EAAG9B,GACtB,MAAMuB,EAAI,CAACQ,EAAGC,GAAKD,EAAI5B,EAAI,IAAM,IAAMH,EAAIA,EAAI8B,EAAI1B,KAAKC,IAAID,KAAKE,IAAI0B,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACT,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASW,EAAS/B,EAAGgC,EAAGhB,GACtB,MAAMiB,EAAMP,EAAS1B,EAAG,EAAG,IAC3B,IAAIkC,EAMJ,IALIF,EAAIhB,EAAI,IACVkB,EAAI,GAAKF,EAAIhB,GACbgB,GAAKE,EACLlB,GAAKkB,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAIhB,EAClBiB,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CAUA,SAASE,EAAQtC,GACf,MACMuC,EAAIvC,EAAEuC,EADE,IAERC,EAAIxC,EAAEwC,EAFE,IAGRrB,EAAInB,EAAEmB,EAHE,IAIRd,EAAMD,KAAKC,IAAIkC,EAAGC,EAAGrB,GACrBb,EAAMF,KAAKE,IAAIiC,EAAGC,EAAGrB,GACrBjB,GAAKG,EAAMC,GAAO,EACxB,IAAIH,EAAG2B,EAAGT,EAOV,OANIhB,IAAQC,IACVe,EAAIhB,EAAMC,EACVwB,EAAI5B,EAAI,GAAMmB,GAAK,EAAIhB,EAAMC,GAAOe,GAAKhB,EAAMC,GAC/CH,EArBJ,SAAkBoC,EAAGC,EAAGrB,EAAGE,EAAGhB,GAC5B,OAAIkC,IAAMlC,GACCmC,EAAIrB,GAAKE,GAAMmB,EAAIrB,EAAI,EAAI,GAElCqB,IAAMnC,GACAc,EAAIoB,GAAKlB,EAAI,GAEfkB,EAAIC,GAAKnB,EAAI,CACvB,CAaQoB,CAASF,EAAGC,EAAGrB,EAAGE,EAAGhB,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO2B,GAAK,EAAG5B,EACzB,CACA,SAASwC,EAAMnB,EAAGL,EAAGC,EAAGC,GACtB,OACEuB,MAAMC,QAAQ1B,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZyB,IAAIrC,EACR,CACA,SAASsC,EAAQ3C,EAAG2B,EAAG5B,GACrB,OAAOwC,EAAMb,EAAU1B,EAAG2B,EAAG5B,EAC/B,CAOA,SAAS6C,EAAI5C,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CAiDA,MAAM0C,EAAM,CACXG,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH1C,EAAG,KACH2C,EAAG,KACHC,EAAG,KACH3C,EAAG,KACHC,EAAG,QACHC,EAAG,QACH0C,EAAG,KACHC,EAAG,WACH1C,EAAG,KACH2C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH9C,EAAG,KACH+C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAEEC,EAAU,CACfC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBR,IAAIC,EAeJ,MAAMC,EAAS,uGAiCTC,EAAK5N,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBI,KAAKyN,IAAI7N,EAAG,EAAM,KAAe,KACxE8N,EAAO9N,GAAKA,GAAK,OAAUA,EAAI,MAAQI,KAAKyN,KAAK7N,EAAI,MAAS,MAAO,KAa3E,SAAS+N,EAAO/N,EAAGqC,EAAG2L,GACpB,GAAIhO,EAAG,CACL,IAAIiO,EAAM3L,EAAQtC,GAClBiO,EAAI5L,GAAKjC,KAAKC,IAAI,EAAGD,KAAKE,IAAI2N,EAAI5L,GAAK4L,EAAI5L,GAAK2L,EAAa,IAAN3L,EAAU,IAAM,IACvE4L,EAAMnL,EAAQmL,GACdjO,EAAEuC,EAAI0L,EAAI,GACVjO,EAAEwC,EAAIyL,EAAI,GACVjO,EAAEmB,EAAI8M,EAAI,EACZ,CACF,CACA,SAASC,EAAMlO,EAAGmO,GAChB,OAAOnO,EAAIoO,OAAOC,OAAOF,GAAS,CAAC,EAAGnO,GAAKA,CAC7C,CACA,SAASsO,EAAWC,GAClB,IAAIvO,EAAI,CAACuC,EAAG,EAAGC,EAAG,EAAGrB,EAAG,EAAGD,EAAG,KAY9B,OAXIyB,MAAMC,QAAQ2L,GACZA,EAAMC,QAAU,IAClBxO,EAAI,CAACuC,EAAGgM,EAAM,GAAI/L,EAAG+L,EAAM,GAAIpN,EAAGoN,EAAM,GAAIrN,EAAG,KAC3CqN,EAAMC,OAAS,IACjBxO,EAAEkB,EAAIV,EAAI+N,EAAM,OAIpBvO,EAAIkO,EAAMK,EAAO,CAAChM,EAAG,EAAGC,EAAG,EAAGrB,EAAG,EAAGD,EAAG,KACrCA,EAAIV,EAAIR,EAAEkB,GAEPlB,CACT,CACA,SAASyO,EAAcC,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GA3EjB,SAAkBD,GAChB,MAAME,EAAIjB,EAAOkB,KAAKH,GACtB,IACInM,EAAGC,EAAGrB,EADND,EAAI,IAER,GAAK0N,EAAL,CAGA,GAAIA,EAAE,KAAOrM,EAAG,CACd,MAAMvC,GAAK4O,EAAE,GACb1N,EAAI0N,EAAE,GAAKrO,EAAIP,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANAuC,GAAKqM,EAAE,GACPpM,GAAKoM,EAAE,GACPzN,GAAKyN,EAAE,GACPrM,EAAI,KAAOqM,EAAE,GAAKrO,EAAIgC,GAAKtC,EAAIsC,EAAG,EAAG,MACrCC,EAAI,KAAOoM,EAAE,GAAKrO,EAAIiC,GAAKvC,EAAIuC,EAAG,EAAG,MACrCrB,EAAI,KAAOyN,EAAE,GAAKrO,EAAIY,GAAKlB,EAAIkB,EAAG,EAAG,MAC9B,CACLoB,EAAGA,EACHC,EAAGA,EACHrB,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CAqDW4N,CAASJ,GAhVpB,SAAkBA,GAChB,MAAME,EAAIhN,EAAOiN,KAAKH,GACtB,IACI1O,EADAkB,EAAI,IAER,IAAK0N,EACH,OAEEA,EAAE,KAAO5O,IACXkB,EAAI0N,EAAE,GAAKrO,GAAKqO,EAAE,IAAMpO,GAAKoO,EAAE,KAEjC,MAAMzO,EAAI4C,GAAK6L,EAAE,IACXG,GAAMH,EAAE,GAAK,IACbI,GAAMJ,EAAE,GAAK,IAQnB,OANE5O,EADW,QAAT4O,EAAE,GAtBR,SAAiBzO,EAAGgC,EAAGhB,GACrB,OAAOuB,EAAMR,EAAU/B,EAAGgC,EAAGhB,EAC/B,CAqBQ8N,CAAQ9O,EAAG4O,EAAIC,GACD,QAATJ,EAAE,GArBf,SAAiBzO,EAAG2B,EAAG9B,GACrB,OAAO0C,EAAMT,EAAU9B,EAAG2B,EAAG9B,EAC/B,CAoBQkP,CAAQ/O,EAAG4O,EAAIC,GAEflM,EAAQ3C,EAAG4O,EAAIC,GAEd,CACLzM,EAAGvC,EAAE,GACLwC,EAAGxC,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,EAAGA,EAEP,CAwTSiO,CAAST,EAClB,CACA,MAAMU,EACJ,WAAAC,CAAYd,GACV,GAAIA,aAAiBa,EACnB,OAAOb,EAET,MAAMe,SAAcf,EACpB,IAAIvO,EA7bR,IAAkB0O,EAEZa,EADAC,EA6bW,WAATF,EACFtP,EAAIsO,EAAWC,GACG,WAATe,IA/bTE,GADYd,EAicCH,GAhcHC,OAEC,MAAXE,EAAI,KACM,IAARc,GAAqB,IAARA,EACfD,EAAM,CACJhN,EAAG,IAAsB,GAAhB5B,EAAM+N,EAAI,IACnBlM,EAAG,IAAsB,GAAhB7B,EAAM+N,EAAI,IACnBvN,EAAG,IAAsB,GAAhBR,EAAM+N,EAAI,IACnBxN,EAAW,IAARsO,EAA4B,GAAhB7O,EAAM+N,EAAI,IAAW,KAErB,IAARc,GAAqB,IAARA,IACtBD,EAAM,CACJhN,EAAG5B,EAAM+N,EAAI,KAAO,EAAI/N,EAAM+N,EAAI,IAClClM,EAAG7B,EAAM+N,EAAI,KAAO,EAAI/N,EAAM+N,EAAI,IAClCvN,EAAGR,EAAM+N,EAAI,KAAO,EAAI/N,EAAM+N,EAAI,IAClCxN,EAAW,IAARsO,EAAa7O,EAAM+N,EAAI,KAAO,EAAI/N,EAAM+N,EAAI,IAAO,OAibxD1O,EA7aGuP,GAoUT,SAAmBb,GACZhB,IACHA,EApBJ,WACE,MAAM+B,EAAW,CAAC,EACZC,EAAOtB,OAAOsB,KAAKrL,GACnBsL,EAAQvB,OAAOsB,KAAK7M,GAC1B,IAAIR,EAAGuN,EAAG5N,EAAG6N,EAAIC,EACjB,IAAKzN,EAAI,EAAGA,EAAIqN,EAAKlB,OAAQnM,IAAK,CAEhC,IADAwN,EAAKC,EAAKJ,EAAKrN,GACVuN,EAAI,EAAGA,EAAID,EAAMnB,OAAQoB,IAC5B5N,EAAI2N,EAAMC,GACVE,EAAKA,EAAGC,QAAQ/N,EAAGa,EAAIb,IAEzBA,EAAIgO,SAAS3L,EAAQwL,GAAK,IAC1BJ,EAASK,GAAM,CAAC9N,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOyN,CACT,CAKYQ,GACRvC,EAAMwC,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMhP,EAAIwM,EAAMgB,EAAIyB,eACpB,OAAOjP,GAAK,CACVqB,EAAGrB,EAAE,GACLsB,EAAGtB,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEsN,OAAetN,EAAE,GAAK,IAE/B,CA6F6BkP,CAAU7B,IAAUE,EAAcF,IAE3D8B,KAAKC,KAAOtQ,EACZqQ,KAAKE,SAAWvQ,CAClB,CACA,SAAIwQ,GACF,OAAOH,KAAKE,MACd,CACA,OAAInO,GACF,IAAIpC,EAAIkO,EAAMmC,KAAKC,MAInB,OAHItQ,IACFA,EAAEkB,EAAIT,EAAIT,EAAEkB,IAEPlB,CACT,CACA,OAAIoC,CAAIqO,GACNJ,KAAKC,KAAOhC,EAAWmC,EACzB,CACA,SAAAC,GACE,OAAOL,KAAKE,QArFGvQ,EAqFgBqQ,KAAKC,QAnFpCtQ,EAAEkB,EAAI,IACF,QAAQlB,EAAEuC,MAAMvC,EAAEwC,MAAMxC,EAAEmB,MAAMV,EAAIT,EAAEkB,MACtC,OAAOlB,EAAEuC,MAAMvC,EAAEwC,MAAMxC,EAAEmB,WAiFewP,EArFhD,IAAmB3Q,CAsFjB,CACA,SAAA4Q,GACE,OAAOP,KAAKE,QAhcGvQ,EAgcgBqQ,KAAKC,KA/blC/O,EAzBUvB,IAAK2B,EAAG3B,EAAEuC,IAAMZ,EAAG3B,EAAEwC,IAAMb,EAAG3B,EAAEmB,IAAMQ,EAAG3B,EAAEkB,GAyBjD2P,CAAQ7Q,GAAKyB,EAAKC,EACnB1B,EACH,IAAMuB,EAAEvB,EAAEuC,GAAKhB,EAAEvB,EAAEwC,GAAKjB,EAAEvB,EAAEmB,GAJpB,EAACD,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GAIF4P,CAAM9Q,EAAEkB,EAAGK,QAC5CoP,QA4b0CA,EAhchD,IAAmB3Q,EACbuB,CAgcJ,CACA,SAAAwP,GACE,OAAOV,KAAKE,OApVhB,SAAmBvQ,GACjB,IAAKA,EACH,OAEF,MAAMkB,EAAIoB,EAAQtC,GACZG,EAAIe,EAAE,GACNY,EAAIpB,EAAIQ,EAAE,IACVhB,EAAIQ,EAAIQ,EAAE,IAChB,OAAOlB,EAAEkB,EAAI,IACT,QAAQf,MAAM2B,OAAO5B,OAAOO,EAAIT,EAAEkB,MAClC,OAAOf,MAAM2B,OAAO5B,KAC1B,CAyUyB6Q,CAAUV,KAAKC,WAAQK,CAC9C,CACA,GAAAK,CAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKd,KAAKjO,IACVgP,EAAKH,EAAM7O,IACjB,IAAIiP,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1B/O,EAAI,EAAImP,EAAI,EACZpQ,EAAIiQ,EAAGjQ,EAAIkQ,EAAGlQ,EACdqQ,IAAOpP,EAAIjB,KAAO,EAAIiB,GAAKA,EAAIjB,IAAM,EAAIiB,EAAIjB,IAAM,GAAK,EAC9DmQ,EAAK,EAAIE,EACTJ,EAAG5O,EAAI,IAAOgP,EAAKJ,EAAG5O,EAAI8O,EAAKD,EAAG7O,EAAI,GACtC4O,EAAG3O,EAAI,IAAO+O,EAAKJ,EAAG3O,EAAI6O,EAAKD,EAAG5O,EAAI,GACtC2O,EAAGhQ,EAAI,IAAOoQ,EAAKJ,EAAGhQ,EAAIkQ,EAAKD,EAAGjQ,EAAI,GACtCgQ,EAAGjQ,EAAIoQ,EAAIH,EAAGjQ,GAAK,EAAIoQ,GAAKF,EAAGlQ,EAC/BmP,KAAKjO,IAAM+O,CACb,CACA,OAAOd,IACT,CACA,WAAAmB,CAAYP,EAAOQ,GAIjB,OAHIR,IACFZ,KAAKC,KAvGX,SAAqBoB,EAAMC,EAAMF,GAC/B,MAAMlP,EAAIuL,EAAKrN,EAAIiR,EAAKnP,IAClBC,EAAIsL,EAAKrN,EAAIiR,EAAKlP,IAClBrB,EAAI2M,EAAKrN,EAAIiR,EAAKvQ,IACxB,MAAO,CACLoB,EAAG/B,EAAIoN,EAAGrL,EAAIkP,GAAK3D,EAAKrN,EAAIkR,EAAKpP,IAAMA,KACvCC,EAAGhC,EAAIoN,EAAGpL,EAAIiP,GAAK3D,EAAKrN,EAAIkR,EAAKnP,IAAMA,KACvCrB,EAAGX,EAAIoN,EAAGzM,EAAIsQ,GAAK3D,EAAKrN,EAAIkR,EAAKxQ,IAAMA,KACvCD,EAAGwQ,EAAKxQ,EAAIuQ,GAAKE,EAAKzQ,EAAIwQ,EAAKxQ,GAEnC,CA6FkBsQ,CAAYnB,KAAKC,KAAMW,EAAMX,KAAMmB,IAE1CpB,IACT,CACA,KAAAnC,GACE,OAAO,IAAIkB,EAAMiB,KAAKjO,IACxB,CACA,KAAA0O,CAAM5P,GAEJ,OADAmP,KAAKC,KAAKpP,EAAIV,EAAIU,GACXmP,IACT,CACA,OAAAuB,CAAQ5D,GAGN,OAFYqC,KAAKC,KACbpP,GAAK,EAAI8M,EACNqC,IACT,CACA,SAAAwB,GACE,MAAMzP,EAAMiO,KAAKC,KACXwB,EAAM/R,EAAc,GAARqC,EAAIG,EAAkB,IAARH,EAAII,EAAmB,IAARJ,EAAIjB,GAEnD,OADAiB,EAAIG,EAAIH,EAAII,EAAIJ,EAAIjB,EAAI2Q,EACjBzB,IACT,CACA,OAAA0B,CAAQ/D,GAGN,OAFYqC,KAAKC,KACbpP,GAAK,EAAI8M,EACNqC,IACT,CACA,MAAA2B,GACE,MAAMhS,EAAIqQ,KAAKC,KAIf,OAHAtQ,EAAEuC,EAAI,IAAMvC,EAAEuC,EACdvC,EAAEwC,EAAI,IAAMxC,EAAEwC,EACdxC,EAAEmB,EAAI,IAAMnB,EAAEmB,EACPkP,IACT,CACA,OAAA4B,CAAQjE,GAEN,OADAD,EAAOsC,KAAKC,KAAM,EAAGtC,GACdqC,IACT,CACA,MAAA6B,CAAOlE,GAEL,OADAD,EAAOsC,KAAKC,KAAM,GAAItC,GACfqC,IACT,CACA,QAAA8B,CAASnE,GAEP,OADAD,EAAOsC,KAAKC,KAAM,EAAGtC,GACdqC,IACT,CACA,UAAA+B,CAAWpE,GAET,OADAD,EAAOsC,KAAKC,KAAM,GAAItC,GACfqC,IACT,CACA,MAAAgC,CAAOC,GAEL,OAtaJ,SAAgBtS,EAAGsS,GACjB,IAAInS,EAAImC,EAAQtC,GAChBG,EAAE,GAAK4C,EAAI5C,EAAE,GAAKmS,GAClBnS,EAAI2C,EAAQ3C,GACZH,EAAEuC,EAAIpC,EAAE,GACRH,EAAEwC,EAAIrC,EAAE,GACRH,EAAEmB,EAAIhB,EAAE,EACV,CA8ZIkS,CAAOhC,KAAKC,KAAMgC,GACXjC,IACT,ECzjBE,SAASkC,IACF,CAGP,MAAMC,EAAM,MACZ,IAAIC,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAASC,EAAcC,GACvB,OAAOA,OACX,CAKI,SAAS/P,EAAQ+P,GACjB,GAAIhQ,MAAMC,SAAWD,MAAMC,QAAQ+P,GAC/B,OAAO,EAEX,MAAMrD,EAAOlB,OAAOwE,UAAUC,SAASC,KAAKH,GAC5C,MAAyB,YAArBrD,EAAKyD,MAAM,EAAG,IAAuC,WAAnBzD,EAAKyD,OAAO,EAItD,CAKI,SAASC,EAASL,GAClB,OAAiB,OAAVA,GAA4D,oBAA1CvE,OAAOwE,UAAUC,SAASC,KAAKH,EAC5D,CAII,SAASM,EAAeN,GACxB,OAAyB,iBAAVA,GAAsBA,aAAiBO,SAAWC,UAAUR,EAC/E,CAKI,SAASS,EAAgBT,EAAOU,GAChC,OAAOJ,EAAeN,GAASA,EAAQU,CAC3C,CAKI,SAASC,EAAeX,EAAOU,GAC/B,YAAwB,IAAVV,EAAwBU,EAAeV,CACzD,CACA,MACMY,EAAc,CAACZ,EAAOa,IAA6B,iBAAVb,GAAsBA,EAAMc,SAAS,KAAOC,WAAWf,GAAS,IAAMa,GAAab,EAO9H,SAASgB,EAASC,EAAIC,EAAMC,GAC5B,GAAIF,GAAyB,mBAAZA,EAAGd,KAChB,OAAOc,EAAGG,MAAMD,EAASD,EAEjC,CACA,SAASG,EAAKC,EAAUL,EAAIE,EAASI,GACjC,IAAI7R,EAAGmN,EAAKE,EACZ,GAAI9M,EAAQqR,GAER,GADAzE,EAAMyE,EAASzF,OACX0F,EACA,IAAI7R,EAAImN,EAAM,EAAGnN,GAAK,EAAGA,IACrBuR,EAAGd,KAAKgB,EAASG,EAAS5R,GAAIA,QAGlC,IAAIA,EAAI,EAAGA,EAAImN,EAAKnN,IAChBuR,EAAGd,KAAKgB,EAASG,EAAS5R,GAAIA,QAGnC,GAAI2Q,EAASiB,GAGhB,IAFAvE,EAAOtB,OAAOsB,KAAKuE,GACnBzE,EAAME,EAAKlB,OACPnM,EAAI,EAAGA,EAAImN,EAAKnN,IAChBuR,EAAGd,KAAKgB,EAASG,EAASvE,EAAKrN,IAAKqN,EAAKrN,GAGrD,CAMI,SAAS8R,EAAeC,EAAIC,GAC5B,IAAIhS,EAAGiS,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAG5F,SAAW6F,EAAG7F,OAC/B,OAAO,EAEX,IAAInM,EAAI,EAAGiS,EAAOF,EAAG5F,OAAQnM,EAAIiS,IAAQjS,EAGrC,GAFAkS,EAAKH,EAAG/R,GACRmS,EAAKH,EAAGhS,GACJkS,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACvD,OAAO,EAGf,OAAO,CACX,CAII,SAAS,EAAMC,GACf,GAAI/R,EAAQ+R,GACR,OAAOA,EAAO9R,IAAI,GAEtB,GAAImQ,EAAS2B,GAAS,CAClB,MAAMC,EAASxG,OAAOyG,OAAO,MACvBnF,EAAOtB,OAAOsB,KAAKiF,GACnBG,EAAOpF,EAAKlB,OAClB,IAAIxM,EAAI,EACR,KAAMA,EAAI8S,IAAQ9S,EACd4S,EAAOlF,EAAK1N,IAAM,EAAM2S,EAAOjF,EAAK1N,KAExC,OAAO4S,CACX,CACA,OAAOD,CACX,CACA,SAASI,EAAWC,GAChB,OAIoB,IAJb,CACH,YACA,YACA,eACFC,QAAQD,EACd,CAKI,SAASE,EAAQF,EAAKJ,EAAQD,EAAQQ,GACtC,IAAKJ,EAAWC,GACZ,OAEJ,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAChBhC,EAASoC,IAASpC,EAASqC,GAE3BC,EAAMF,EAAMC,EAAMF,GAElBP,EAAOI,GAAO,EAAMK,EAE5B,CACA,SAASC,EAAMV,EAAQD,EAAQQ,GAC3B,MAAMI,EAAU3S,EAAQ+R,GAAUA,EAAS,CACvCA,GAEEL,EAAOiB,EAAQ/G,OACrB,IAAKwE,EAAS4B,GACV,OAAOA,EAGX,MAAMY,GADNL,EAAUA,GAAW,CAAC,GACCK,QAAUN,EACjC,IAAIO,EACJ,IAAI,IAAIpT,EAAI,EAAGA,EAAIiS,IAAQjS,EAAE,CAEzB,GADAoT,EAAUF,EAAQlT,IACb2Q,EAASyC,GACV,SAEJ,MAAM/F,EAAOtB,OAAOsB,KAAK+F,GACzB,IAAI,IAAIzT,EAAI,EAAG8S,EAAOpF,EAAKlB,OAAQxM,EAAI8S,IAAQ9S,EAC3CwT,EAAO9F,EAAK1N,GAAI4S,EAAQa,EAASN,EAEzC,CACA,OAAOP,CACX,CACA,SAASc,EAAQd,EAAQD,GAErB,OAAOW,EAAMV,EAAQD,EAAQ,CACzBa,OAAQG,GAEhB,CAII,SAASA,EAAUX,EAAKJ,EAAQD,GAChC,IAAKI,EAAWC,GACZ,OAEJ,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAChBhC,EAASoC,IAASpC,EAASqC,GAC3BK,EAAQN,EAAMC,GACNjH,OAAOwE,UAAUgD,eAAe9C,KAAK8B,EAAQI,KACrDJ,EAAOI,GAAO,EAAMK,GAE5B,CASA,MAAMQ,EAAe,CAEjB,GAAK7V,GAAIA,EAETgD,EAAI8S,GAAIA,EAAE9S,EACV+S,EAAID,GAAIA,EAAEC,GA+Bd,SAASC,EAAiBvF,EAAKuE,GAC3B,MAAMiB,EAAWJ,EAAab,KAASa,EAAab,GAbxD,SAAyBA,GACrB,MAAMtF,EAhBN,SAAmBsF,GACnB,MAAMkB,EAAQlB,EAAImB,MAAM,KAClBzG,EAAO,GACb,IAAIzB,EAAM,GACV,IAAK,MAAMmI,KAAQF,EACfjI,GAAOmI,EACHnI,EAAIwF,SAAS,MACbxF,EAAMA,EAAI8E,MAAM,GAAI,GAAK,KAEzBrD,EAAK2G,KAAKpI,GACVA,EAAM,IAGd,OAAOyB,CACX,CAEiB4G,CAAUtB,GACvB,OAAQvE,IACJ,IAAK,MAAMzO,KAAK0N,EAAK,CACjB,GAAU,KAAN1N,EACA,MAEJyO,EAAMA,GAAOA,EAAIzO,EACrB,CACA,OAAOyO,EAEf,CAE+D8F,CAAgBvB,IAC3E,OAAOiB,EAASxF,EACpB,CAGI,SAAS+F,EAAY9H,GACrB,OAAOA,EAAIC,OAAO,GAAG8H,cAAgB/H,EAAIqE,MAAM,EACnD,CACA,MAAM2D,GAAW/D,QAAyB,IAAVA,EAC1BgE,GAAchE,GAAyB,mBAAVA,EAE7BiE,GAAY,CAAC1V,EAAGC,KAClB,GAAID,EAAE2V,OAAS1V,EAAE0V,KACb,OAAO,EAEX,IAAK,MAAMC,KAAQ5V,EACf,IAAKC,EAAE4V,IAAID,GACP,OAAO,EAGf,OAAO,GAYDE,GAAK5W,KAAK4W,GACdC,GAAM,EAAID,GACVE,GAAQD,GAAMD,GACdG,GAAWjE,OAAOkE,kBAClBC,GAAcL,GAAK,IACnBM,GAAUN,GAAK,EACfO,GAAaP,GAAK,EAClBQ,GAAqB,EAALR,GAAS,EACzBS,GAAQrX,KAAKqX,MACbC,GAAOtX,KAAKsX,KAClB,SAASC,GAAa3U,EAAG+S,EAAG6B,GACxB,OAAOxX,KAAKyX,IAAI7U,EAAI+S,GAAK6B,CAC7B,CAGI,SAASE,GAAQC,GACjB,MAAMC,EAAe5X,KAAKL,MAAMgY,GAChCA,EAAQJ,GAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAME,EAAY7X,KAAKyN,IAAI,GAAIzN,KAAK8X,MAAMT,GAAMM,KAC1CI,EAAWJ,EAAQE,EAEzB,OADqBE,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DF,CAC1B,CAyBA,SAASG,GAASrW,GACd,OAJA,SAAwBA,GACxB,MAAoB,iBAANA,GAA+B,iBAANA,GAAwB,OAANA,KAAgBsW,OAAOC,eAAevW,GAAK,aAAcA,GAAK,YAAaA,EACxI,CAEYwW,CAAexW,KAAOyW,MAAM9E,WAAW3R,KAAOoR,SAASpR,EACnE,CAOI,SAAS0W,GAAmBC,EAAO9D,EAAQ+D,GAC3C,IAAItW,EAAGiS,EAAM3B,EACb,IAAItQ,EAAI,EAAGiS,EAAOoE,EAAMlK,OAAQnM,EAAIiS,EAAMjS,IACtCsQ,EAAQ+F,EAAMrW,GAAGsW,GACZH,MAAM7F,KACPiC,EAAOtU,IAAMF,KAAKE,IAAIsU,EAAOtU,IAAKqS,GAClCiC,EAAOvU,IAAMD,KAAKC,IAAIuU,EAAOvU,IAAKsS,GAG9C,CACA,SAASiG,GAAUC,GACf,OAAOA,GAAW7B,GAAK,IAC3B,CACA,SAAS8B,GAAUC,GACf,OAAOA,GAAW,IAAM/B,GAC5B,CAOI,SAASgC,GAAehW,GACxB,IAAKiQ,EAAejQ,GAChB,OAEJ,IAAI1B,EAAI,EACJgQ,EAAI,EACR,KAAMlR,KAAKL,MAAMiD,EAAI1B,GAAKA,IAAM0B,GAC5B1B,GAAK,GACLgQ,IAEJ,OAAOA,CACX,CAEA,SAAS2H,GAAkBC,EAAaC,GACpC,MAAMC,EAAsBD,EAAWnW,EAAIkW,EAAYlW,EACjDqW,EAAsBF,EAAWpD,EAAImD,EAAYnD,EACjDuD,EAA2BlZ,KAAKmZ,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIG,EAAQpZ,KAAKqZ,MAAMJ,EAAqBD,GAI5C,OAHII,GAAS,GAAMxC,KACfwC,GAASvC,IAEN,CACHuC,QACAE,SAAUJ,EAElB,CACA,SAASK,GAAsBC,EAAKC,GAChC,OAAOzZ,KAAKmZ,KAAKnZ,KAAKyN,IAAIgM,EAAI7W,EAAI4W,EAAI5W,EAAG,GAAK5C,KAAKyN,IAAIgM,EAAI9D,EAAI6D,EAAI7D,EAAG,GAC1E,CAII,SAAS+D,GAAW5Y,EAAGC,GACvB,OAAQD,EAAIC,EAAI+V,IAASD,GAAMD,EACnC,CAII,SAAS+C,GAAgB7Y,GACzB,OAAQA,EAAI+V,GAAMA,IAAOA,EAC7B,CAGI,SAAS+C,GAAcR,EAAOS,EAAOC,EAAKC,GAC1C,MAAMjZ,EAAI6Y,GAAgBP,GACpB1X,EAAIiY,GAAgBE,GACpB3Y,EAAIyY,GAAgBG,GACpBE,EAAeL,GAAgBjY,EAAIZ,GACnCmZ,EAAaN,GAAgBzY,EAAIJ,GACjCoZ,EAAeP,GAAgB7Y,EAAIY,GACnCyY,EAAaR,GAAgB7Y,EAAII,GACvC,OAAOJ,IAAMY,GAAKZ,IAAMI,GAAK6Y,GAAyBrY,IAAMR,GAAK8Y,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,GAAY7H,EAAOrS,EAAKD,GACjC,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKsS,GACvC,CAaI,SAAS8H,GAAW9H,EAAOsH,EAAOC,EAAKtC,EAAU,MACjD,OAAOjF,GAASvS,KAAKE,IAAI2Z,EAAOC,GAAOtC,GAAWjF,GAASvS,KAAKC,IAAI4Z,EAAOC,GAAOtC,CACtF,CAEA,SAAS8C,GAAQC,EAAOhI,EAAOiI,GAC3BA,EAAMA,GAAO,CAAElG,GAAQiG,EAAMjG,GAAS/B,GACtC,IAEIkI,EAFAC,EAAKH,EAAMnM,OAAS,EACpBuM,EAAK,EAET,KAAMD,EAAKC,EAAK,GACZF,EAAME,EAAKD,GAAM,EACbF,EAAIC,GACJE,EAAKF,EAELC,EAAKD,EAGb,MAAO,CACHE,KACAD,KAER,CAQI,MAAME,GAAe,CAACL,EAAO3F,EAAKrC,EAAOsI,IAAOP,GAAQC,EAAOhI,EAAOsI,EAAQvG,IAC1E,MAAMwG,EAAKP,EAAMjG,GAAOM,GACxB,OAAOkG,EAAKvI,GAASuI,IAAOvI,GAASgI,EAAMjG,EAAQ,GAAGM,KAASrC,GAC9D+B,GAAQiG,EAAMjG,GAAOM,GAAOrC,GAO3BwI,GAAgB,CAACR,EAAO3F,EAAKrC,IAAQ+H,GAAQC,EAAOhI,EAAQ+B,GAAQiG,EAAMjG,GAAOM,IAAQrC,GAkB7FyI,GAAc,CAChB,OACA,MACA,QACA,SACA,WAkCJ,SAASC,GAAoB3C,EAAO4C,GAChC,MAAMC,EAAO7C,EAAM8C,SACnB,IAAKD,EACD,OAEJ,MAAME,EAAYF,EAAKE,UACjB/G,EAAQ+G,EAAUxG,QAAQqG,IACjB,IAAX5G,GACA+G,EAAUC,OAAOhH,EAAO,GAExB+G,EAAUjN,OAAS,IAGvB4M,GAAYO,QAAS3G,WACV0D,EAAM1D,YAEV0D,EAAM8C,SACjB,CAGI,SAASI,GAAaC,GACtB,MAAMC,EAAM,IAAIC,IAAIF,GACpB,OAAIC,EAAIjF,OAASgF,EAAMrN,OACZqN,EAEJlZ,MAAMmL,KAAKgO,EACtB,CAOG,MAAME,GACiB,oBAAXC,OACA,SAAStI,GACZ,OAAOA,GACX,EAEGsI,OAAOC,sBAKd,SAASC,GAAUvI,EAAIE,GACvB,IAAIsI,EAAY,GACZC,GAAU,EACd,OAAO,YAAYxI,GAEfuI,EAAYvI,EACPwI,IACDA,GAAU,EACVL,GAAiBlJ,KAAKmJ,OAAQ,KAC1BI,GAAU,EACVzI,EAAGG,MAAMD,EAASsI,KAG9B,CACJ,CAkBI,MAAME,GAAsBC,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAIvFC,GAAiB,CAACD,EAAOtC,EAAOC,IAAgB,UAAVqC,EAAoBtC,EAAkB,QAAVsC,EAAkBrC,GAAOD,EAAQC,GAAO,EAWhH,SAASuC,GAAiCC,EAAMC,EAAQC,GACxD,MAAMC,EAAaF,EAAOnO,OAC1B,IAAIyL,EAAQ,EACR6C,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CACd,MAAM,OAAEC,EAAO,OAAEC,EAAO,QAAEC,GAAaR,EACjCS,EAAWT,EAAKU,SAAUV,EAAKU,QAAQjI,QAAUuH,EAAKU,QAAQjI,QAAQgI,SAAkB,KACxFE,EAAOL,EAAOK,MACd,IAAE/c,EAAI,IAAED,EAAI,WAAEid,EAAW,WAAEC,GAAgBP,EAAOQ,gBACxD,GAAIF,EAAY,CAIZ,GAHArD,EAAQ7Z,KAAKE,IACb0a,GAAakC,EAASG,EAAM/c,GAAKya,GACjC6B,EAAqBC,EAAa7B,GAAa2B,EAAQU,EAAML,EAAOS,iBAAiBnd,IAAMya,IACvFoC,EAAU,CACV,MAAMO,EAAsBR,EAAQnK,MAAM,EAAGkH,EAAQ,GAAG/F,UAAUyJ,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACjHpD,GAAS7Z,KAAKC,IAAI,EAAGqd,EACzB,CACAzD,EAAQO,GAAYP,EAAO,EAAG4C,EAAa,EAC/C,CACA,GAAIU,EAAY,CACZ,IAAIrD,EAAM9Z,KAAKC,IACf2a,GAAakC,EAASF,EAAOK,KAAMhd,GAAK,GAAMya,GAAK,EACnD8B,EAAqB,EAAI5B,GAAa2B,EAAQU,EAAML,EAAOS,iBAAiBpd,IAAM,GAAMya,GAAK,GAC7F,GAAIqC,EAAU,CACV,MAAMU,EAAsBX,EAAQnK,MAAMmH,EAAM,GAAGyD,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QAClGnD,GAAO9Z,KAAKC,IAAI,EAAGwd,EACvB,CACAf,EAAQtC,GAAYN,EAAKD,EAAO4C,GAAc5C,CAClD,MACI6C,EAAQD,EAAa5C,CAE7B,CACA,MAAO,CACHA,QACA6C,QAER,CAMI,SAASgB,GAAoBpB,GAC7B,MAAM,OAAEqB,EAAO,OAAEC,EAAO,aAAEC,GAAkBvB,EACtCwB,EAAY,CACdC,KAAMJ,EAAOzd,IACb8d,KAAML,EAAO1d,IACbge,KAAML,EAAO1d,IACbge,KAAMN,EAAO3d,KAEjB,IAAK4d,EAED,OADAvB,EAAKuB,aAAeC,GACb,EAEX,MAAMK,EAAUN,EAAaE,OAASJ,EAAOzd,KAAO2d,EAAaG,OAASL,EAAO1d,KAAO4d,EAAaI,OAASL,EAAO1d,KAAO2d,EAAaK,OAASN,EAAO3d,IAEzJ,OADA+N,OAAOC,OAAO4P,EAAcC,GACrBK,CACX,CAEA,MAAMC,GAAU/M,GAAU,IAANA,GAAiB,IAANA,EACzBgN,GAAY,CAAChN,EAAG3P,EAAGwP,KAAMlR,KAAKyN,IAAI,EAAG,IAAM4D,GAAK,IAAMrR,KAAKse,KAAKjN,EAAI3P,GAAKmV,GAAM3F,GAC/EqN,GAAa,CAAClN,EAAG3P,EAAGwP,IAAIlR,KAAKyN,IAAI,GAAI,GAAK4D,GAAKrR,KAAKse,KAAKjN,EAAI3P,GAAKmV,GAAM3F,GAAK,EAKzEsN,GAAU,CAChBC,OAASpN,GAAIA,EACbqN,WAAarN,GAAIA,EAAIA,EACrBsN,YAActN,IAAKA,GAAKA,EAAI,GAC5BuN,cAAgBvN,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAK,MAASA,GAAKA,EAAI,GAAK,GAC3EwN,YAAcxN,GAAIA,EAAIA,EAAIA,EAC1ByN,aAAezN,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtC0N,eAAiB1N,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClF2N,YAAc3N,GAAIA,EAAIA,EAAIA,EAAIA,EAC9B4N,aAAe5N,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5C6N,eAAiB7N,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAK,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F8N,YAAc9N,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClC+N,aAAe/N,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CgO,eAAiBhO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClGiO,WAAajO,GAA6B,EAAxBrR,KAAKuf,IAAIlO,EAAI6F,IAC/BsI,YAAcnO,GAAIrR,KAAKse,IAAIjN,EAAI6F,IAC/BuI,cAAgBpO,IAAK,IAAOrR,KAAKuf,IAAI3I,GAAKvF,GAAK,GAC/CqO,WAAarO,GAAU,IAANA,EAAU,EAAIrR,KAAKyN,IAAI,EAAG,IAAM4D,EAAI,IACrDsO,YAActO,GAAU,IAANA,EAAU,EAA4B,EAAvBrR,KAAKyN,IAAI,GAAI,GAAK4D,GACnDuO,cAAgBvO,GAAI+M,GAAO/M,GAAKA,EAAIA,EAAI,GAAM,GAAMrR,KAAKyN,IAAI,EAAG,IAAU,EAAJ4D,EAAQ,IAAM,IAAyC,EAAjCrR,KAAKyN,IAAI,GAAI,IAAU,EAAJ4D,EAAQ,KACvHwO,WAAaxO,GAAIA,GAAK,EAAIA,IAAMrR,KAAKmZ,KAAK,EAAI9H,EAAIA,GAAK,GACvDyO,YAAczO,GAAIrR,KAAKmZ,KAAK,GAAK9H,GAAK,GAAKA,GAC3C0O,cAAgB1O,IAAKA,GAAK,IAAO,GAAK,IAAOrR,KAAKmZ,KAAK,EAAI9H,EAAIA,GAAK,GAAK,IAAOrR,KAAKmZ,KAAK,GAAK9H,GAAK,GAAKA,GAAK,GAC9G2O,cAAgB3O,GAAI+M,GAAO/M,GAAKA,EAAIgN,GAAUhN,EAAG,KAAO,IACxD4O,eAAiB5O,GAAI+M,GAAO/M,GAAKA,EAAIkN,GAAWlN,EAAG,KAAO,IAC1D,gBAAA6O,CAAkB7O,GACd,MAAM3P,EAAI,MAEV,OAAO0c,GAAO/M,GAAKA,EAAIA,EAAI,GAAM,GAAMgN,GAAc,EAAJhN,EAAO3P,EAD9C,KACsD,GAAM,GAAM6c,GAAe,EAAJlN,EAAQ,EAAG3P,EADxF,IAEd,EACA,UAAAye,CAAY9O,GACR,MAAM3P,EAAI,QACV,OAAO2P,EAAIA,IAAM3P,EAAI,GAAK2P,EAAI3P,EAClC,EACA,WAAA0e,CAAa/O,GACT,MAAM3P,EAAI,QACV,OAAQ2P,GAAK,GAAKA,IAAM3P,EAAI,GAAK2P,EAAI3P,GAAK,CAC9C,EACA,aAAA2e,CAAehP,GACX,IAAI3P,EAAI,QACR,OAAK2P,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAd3P,GAAK,QAAc2P,EAAI3P,GAAzC,GAEJ,KAAQ2P,GAAK,GAAKA,IAAqB,GAAd3P,GAAK,QAAc2P,EAAI3P,GAAK,EAChE,EACA4e,aAAejP,GAAI,EAAImN,GAAQ+B,cAAc,EAAIlP,GACjD,aAAAkP,CAAelP,GACX,MAAM7C,EAAI,OACJvN,EAAI,KACV,OAAIoQ,EAAI,EAAIpQ,EACDuN,EAAI6C,EAAIA,EAEfA,EAAI,EAAIpQ,EACDuN,GAAK6C,GAAK,IAAMpQ,GAAKoQ,EAAI,IAEhCA,EAAI,IAAMpQ,EACHuN,GAAK6C,GAAK,KAAOpQ,GAAKoQ,EAAI,MAE9B7C,GAAK6C,GAAK,MAAQpQ,GAAKoQ,EAAI,OACtC,EACAmP,gBAAkBnP,GAAIA,EAAI,GAAoC,GAA9BmN,GAAQ8B,aAAiB,EAAJjP,GAAkD,GAAnCmN,GAAQ+B,cAAkB,EAAJlP,EAAQ,GAAW,IAGjH,SAASoP,GAAoBlO,GACzB,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAMrD,EAAOqD,EAAME,WACnB,MAAgB,2BAATvD,GAA8C,4BAATA,CAChD,CACA,OAAO,CACX,CACA,SAAS2B,GAAM0B,GACX,OAAOkO,GAAoBlO,GAASA,EAAQ,IAAIvD,EAAMuD,EAC1D,CACA,SAASmO,GAAcnO,GACnB,OAAOkO,GAAoBlO,GAASA,EAAQ,IAAIvD,EAAMuD,GAAOR,SAAS,IAAKD,OAAO,IAAKtB,WAC3F,CAEA,MAAMmQ,GAAU,CACZ,IACA,IACA,cACA,SACA,WAEEC,GAAS,CACX,QACA,cACA,mBAgFEC,GAAY,IAAIC,IAWtB,SAASC,GAAaC,EAAKC,EAAQlM,GAC/B,OAXJ,SAAyBkM,EAAQlM,GAC7BA,EAAUA,GAAW,CAAC,EACtB,MAAMmM,EAAWD,EAASE,KAAKC,UAAUrM,GACzC,IAAIsM,EAAYR,GAAUS,IAAIJ,GAK9B,OAJKG,IACDA,EAAY,IAAIE,KAAKC,aAAaP,EAAQlM,GAC1C8L,GAAUnF,IAAIwF,EAAUG,IAErBA,CACX,CAEWI,CAAgBR,EAAQlM,GAAS2M,OAAOV,EACnD,CAEA,MAAMW,GAAa,CAClBC,OAAQrP,GACM/P,EAAQ+P,GAAUA,EAAQ,GAAKA,EAE7C,OAAAsP,CAASC,EAAWxN,EAAOyN,GACpB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMb,EAAShR,KAAK+R,MAAMjN,QAAQkM,OAClC,IAAIgB,EACAC,EAAQJ,EACZ,GAAIC,EAAM3T,OAAS,EAAG,CAClB,MAAM+T,EAAUniB,KAAKC,IAAID,KAAKyX,IAAIsK,EAAM,GAAGxP,OAAQvS,KAAKyX,IAAIsK,EAAMA,EAAM3T,OAAS,GAAGmE,SAChF4P,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EA8BZ,SAAwBJ,EAAWC,GAC/B,IAAIG,EAAQH,EAAM3T,OAAS,EAAI2T,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAAQwP,EAAM,GAAGxP,MAI3F,OAHIvS,KAAKyX,IAAIyK,IAAU,GAAKJ,IAAc9hB,KAAK8X,MAAMgK,KACjDI,EAAQJ,EAAY9hB,KAAK8X,MAAMgK,IAE5BI,CACX,CApCoBE,CAAeN,EAAWC,EACtC,CACA,MAAMM,EAAWhL,GAAMrX,KAAKyX,IAAIyK,IAC1BI,EAAalK,MAAMiK,GAAY,EAAIriB,KAAKC,IAAID,KAAKE,KAAK,EAAIF,KAAK8X,MAAMuK,GAAW,IAAK,GACrFtN,EAAU,CACZkN,WACAM,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADAtU,OAAOC,OAAO8G,EAAS9E,KAAK8E,QAAQgN,MAAML,QACnCX,GAAae,EAAWb,EAAQlM,EAC3C,EACH,WAAA0N,CAAaX,EAAWxN,EAAOyN,GACxB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMY,EAASX,EAAMzN,GAAOqO,aAAeb,EAAY9hB,KAAKyN,IAAI,GAAIzN,KAAK8X,MAAMT,GAAMyK,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFc,SAASF,IAAWpO,EAAQ,GAAMyN,EAAM3T,OAC/BuT,GAAWE,QAAQnP,KAAKzC,KAAM6R,EAAWxN,EAAOyN,GAEpD,EACX,GASH,IAAIc,GAAQ,CACTlB,eA2EJ,MAAMmB,GAAY9U,OAAOyG,OAAO,MAC1BsO,GAAc/U,OAAOyG,OAAO,MACjC,SAASuO,GAAWC,EAAMrO,GACvB,IAAKA,EACD,OAAOqO,EAEX,MAAM3T,EAAOsF,EAAImB,MAAM,KACvB,IAAI,IAAI9T,EAAI,EAAGN,EAAI2N,EAAKlB,OAAQnM,EAAIN,IAAKM,EAAE,CACvC,MAAML,EAAI0N,EAAKrN,GACfghB,EAAOA,EAAKrhB,KAAOqhB,EAAKrhB,GAAKoM,OAAOyG,OAAO,MAC/C,CACA,OAAOwO,CACX,CACA,SAASvH,GAAIwH,EAAMC,EAAOvB,GACtB,MAAqB,iBAAVuB,EACAjO,EAAM8N,GAAWE,EAAMC,GAAQvB,GAEnC1M,EAAM8N,GAAWE,EAAM,IAAKC,EACvC,CACC,MAAMC,GACH,WAAAnU,CAAYoU,EAAcC,GACtBrT,KAAKsT,eAAYhT,EACjBN,KAAKuT,gBAAkB,kBACvBvT,KAAKwT,YAAc,kBACnBxT,KAAKY,MAAQ,OACbZ,KAAKyT,SAAW,CAAC,EACjBzT,KAAK0T,iBAAoBC,GAAUA,EAAQ5B,MAAM6B,SAASC,sBAC1D7T,KAAK8T,SAAW,CAAC,EACjB9T,KAAK+T,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJ/T,KAAKgU,KAAO,CACRC,OAAQ,qDACRzN,KAAM,GACN0N,MAAO,SACPC,WAAY,IACZtT,OAAQ,MAEZb,KAAKoU,MAAQ,CAAC,EACdpU,KAAKqU,qBAAuB,CAACC,EAAKxP,IAAU2L,GAAc3L,EAAQyO,iBAClEvT,KAAKuU,iBAAmB,CAACD,EAAKxP,IAAU2L,GAAc3L,EAAQ0O,aAC9DxT,KAAKwU,WAAa,CAACF,EAAKxP,IAAU2L,GAAc3L,EAAQlE,OACxDZ,KAAKyU,UAAY,IACjBzU,KAAK0U,YAAc,CACfC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEtB7U,KAAK8U,qBAAsB,EAC3B9U,KAAK+U,QAAU,KACf/U,KAAKgV,QAAU,KACfhV,KAAKiV,SAAU,EACfjV,KAAKkV,QAAU,CAAC,EAChBlV,KAAKmV,YAAa,EAClBnV,KAAKoV,WAAQ9U,EACbN,KAAKqV,OAAS,CAAC,EACfrV,KAAKsV,UAAW,EAChBtV,KAAKuV,yBAA0B,EAC/BvV,KAAKwV,SAASpC,GACdpT,KAAK0D,MAAM2P,EACf,CACH,GAAA5H,CAAIyH,EAAOvB,GACJ,OAAOlG,GAAIzL,KAAMkT,EAAOvB,EAC5B,CACH,GAAAN,CAAI6B,GACG,OAAOH,GAAW/S,KAAMkT,EAC5B,CACH,QAAAsC,CAAStC,EAAOvB,GACT,OAAOlG,GAAIqH,GAAaI,EAAOvB,EACnC,CACA,QAAA8D,CAASvC,EAAOvB,GACZ,OAAOlG,GAAIoH,GAAWK,EAAOvB,EACjC,CACH,KAAA+D,CAAMxC,EAAOyC,EAAMC,EAAaC,GACzB,MAAMC,EAAc/C,GAAW/S,KAAMkT,GAC/B6C,EAAoBhD,GAAW/S,KAAM4V,GACrCI,EAAc,IAAML,EAC1B5X,OAAOkY,iBAAiBH,EAAa,CACjC,CAACE,GAAc,CACX1T,MAAOwT,EAAYH,GACnBO,UAAU,GAEd,CAACP,GAAO,CACJQ,YAAY,EACZ,GAAA9E,GACI,MAAM+E,EAAQpW,KAAKgW,GACbzR,EAASwR,EAAkBF,GACjC,OAAIlT,EAASyT,GACFrY,OAAOC,OAAO,CAAC,EAAGuG,EAAQ6R,GAE9BnT,EAAemT,EAAO7R,EACjC,EACA,GAAAkH,CAAKnJ,GACDtC,KAAKgW,GAAe1T,CACxB,IAGZ,CACA,KAAAoB,CAAM2S,GACFA,EAAS/K,QAAS5H,GAAQA,EAAM1D,MACpC,EAEJ,IAAIsW,GAA2B,IAAInD,GAAS,CACxCoD,YAAcZ,IAAQA,EAAKa,WAAW,MACtCC,WAAad,GAAgB,WAATA,EACpBvB,MAAO,CACHsC,UAAW,eAEfhC,YAAa,CACT6B,aAAa,EACbE,YAAY,IAEjB,CAlVH,SAAiCH,GAC7BA,EAAS7K,IAAI,YAAa,CACtBkL,WAAOrW,EACPsW,SAAU,IACVC,OAAQ,eACRtT,QAAIjD,EACJ7C,UAAM6C,EACNwW,UAAMxW,EACN/C,QAAI+C,EACJrB,UAAMqB,IAEVgW,EAASd,SAAS,YAAa,CAC3BkB,WAAW,EACXD,YAAY,EACZF,YAAcZ,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EW,EAAS7K,IAAI,aAAc,CACvBkF,OAAQ,CACJ1R,KAAM,QACN8X,WAAYpG,IAEhBD,QAAS,CACLzR,KAAM,SACN8X,WAAYrG,MAGpB4F,EAASd,SAAS,aAAc,CAC5BkB,UAAW,cAEfJ,EAAS7K,IAAI,cAAe,CACxBuL,OAAQ,CACJ1D,UAAW,CACPsD,SAAU,MAGlBK,OAAQ,CACJ3D,UAAW,CACPsD,SAAU,IAGlBM,KAAM,CACFC,WAAY,CACRxG,OAAQ,CACJlT,KAAM,eAEV2Z,QAAS,CACLnY,KAAM,UACN2X,SAAU,KAItBS,KAAM,CACFF,WAAY,CACRxG,OAAQ,CACJpT,GAAI,eAER6Z,QAAS,CACLnY,KAAM,UACN4X,OAAQ,SACRtT,GAAK5T,GAAQ,EAAJA,MAK7B,EAEA,SAA8B2mB,GAC1BA,EAAS7K,IAAI,SAAU,CACnB6L,aAAa,EACbC,QAAS,CACLC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGlB,EA0EA,SAA4BrB,GACxBA,EAAS7K,IAAI,QAAS,CAClBmM,SAAS,EACTC,QAAQ,EACRhU,SAAS,EACTiU,aAAa,EACpBC,OAAQ,QACDC,MAAM,EACbC,MAAO,EACAC,KAAM,CACFN,SAAS,EACTO,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAW,CAACC,EAAM1T,IAAUA,EAAQqT,UACpCM,UAAW,CAACD,EAAM1T,IAAUA,EAAQlE,MACpCiX,QAAQ,GAEZa,OAAQ,CACJd,SAAS,EACTe,KAAM,GACNC,WAAY,EACZC,MAAO,GAEXC,MAAO,CACHlB,SAAS,EACTmB,KAAM,GACNxB,QAAS,CACLC,IAAK,EACLE,OAAQ,IAGhB5F,MAAO,CACHkH,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB7B,QAAS,EACTK,SAAS,EACTyB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbjW,SAAUsP,GAAMlB,WAAWC,OAC3B6H,MAAO,CAAC,EACRC,MAAO,CAAC,EACRvN,MAAO,SACPwN,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGzBvD,EAASZ,MAAM,cAAe,QAAS,GAAI,SAC3CY,EAASZ,MAAM,aAAc,QAAS,GAAI,eAC1CY,EAASZ,MAAM,eAAgB,QAAS,GAAI,eAC5CY,EAASZ,MAAM,cAAe,QAAS,GAAI,SAC3CY,EAASd,SAAS,QAAS,CACvBkB,WAAW,EACXH,YAAcZ,IAAQA,EAAKa,WAAW,YAAcb,EAAKa,WAAW,UAAqB,aAATb,GAAgC,WAATA,EACvGc,WAAad,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9EW,EAASd,SAAS,SAAU,CACxBkB,UAAW,UAEfJ,EAASd,SAAS,cAAe,CAC7Be,YAAcZ,GAAgB,oBAATA,GAAuC,aAATA,EACnDc,WAAad,GAAgB,oBAATA,GAE5B,IAyII,SAASmE,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASC,GAC9C,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACDA,EAAYJ,EAAKG,GAAU5F,EAAI8F,YAAYF,GAAQrB,MACnDmB,EAAGhU,KAAKkU,IAERC,EAAYF,IACZA,EAAUE,GAEPF,CACX,CAIA,SAASI,GAAa/F,EAAKN,EAAMsG,EAAeC,GAE5C,IAAIR,GADJQ,EAAQA,GAAS,CAAC,GACDR,KAAOQ,EAAMR,MAAQ,CAAC,EACnCC,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAMvG,OAASA,IACf+F,EAAOQ,EAAMR,KAAO,CAAC,EACrBC,EAAKO,EAAMC,eAAiB,GAC5BD,EAAMvG,KAAOA,GAEjBM,EAAImG,OACJnG,EAAIN,KAAOA,EACX,IAAIiG,EAAU,EACd,MAAMhW,EAAOqW,EAAcnc,OAC3B,IAAInM,EAAGuN,EAAGmb,EAAMC,EAAOC,EACvB,IAAI5oB,EAAI,EAAGA,EAAIiS,EAAMjS,IAGjB,GAFA2oB,EAAQL,EAActoB,GAElB2oB,SAA0CpoB,EAAQooB,IAE/C,GAAIpoB,EAAQooB,GAGf,IAAIpb,EAAI,EAAGmb,EAAOC,EAAMxc,OAAQoB,EAAImb,EAAMnb,IACtCqb,EAAcD,EAAMpb,GAEhBqb,SAAsDroB,EAAQqoB,KAC9DX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASW,SARvDX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASU,GAavDrG,EAAIuG,UACJ,MAAMC,EAAQd,EAAG7b,OAAS,EAC1B,GAAI2c,EAAQR,EAAcnc,OAAQ,CAC9B,IAAInM,EAAI,EAAGA,EAAI8oB,EAAO9oB,WACX+nB,EAAKC,EAAGhoB,IAEnBgoB,EAAG3O,OAAO,EAAGyP,EACjB,CACA,OAAOb,CACX,CAQI,SAASc,GAAYhJ,EAAOiJ,EAAOnC,GACnC,MAAMnF,EAAmB3B,EAAMkJ,wBACzBC,EAAsB,IAAVrC,EAAc9oB,KAAKC,IAAI6oB,EAAQ,EAAG,IAAO,EAC3D,OAAO9oB,KAAKL,OAAOsrB,EAAQE,GAAaxH,GAAoBA,EAAmBwH,CACnF,CAGI,SAASC,GAAYC,EAAQ9G,IACxBA,GAAQ8G,MAGb9G,EAAMA,GAAO8G,EAAOC,WAAW,OAC3BZ,OAGJnG,EAAIgH,iBACJhH,EAAIiH,UAAU,EAAG,EAAGH,EAAOvC,MAAOuC,EAAOI,QACzClH,EAAIuG,UACR,CACA,SAASY,GAAUnH,EAAKxP,EAASnS,EAAG+S,GAEhCgW,GAAgBpH,EAAKxP,EAASnS,EAAG+S,EAAG,KACxC,CAEA,SAASgW,GAAgBpH,EAAKxP,EAASnS,EAAG+S,EAAG5T,GACzC,IAAImN,EAAM0c,EAASC,EAASpV,EAAMqV,EAAchD,EAAOiD,EAAUC,EACjE,MAAM7H,EAAQpP,EAAQkX,WAChBC,EAAWnX,EAAQmX,SACnBC,EAASpX,EAAQoX,OACvB,IAAIC,GAAOF,GAAY,GAAKjV,GAC5B,GAAIkN,GAA0B,iBAAVA,IAChBjV,EAAOiV,EAAM1R,WACA,8BAATvD,GAAiD,+BAATA,GAMxC,OALAqV,EAAImG,OACJnG,EAAI8H,UAAUzpB,EAAG+S,GACjB4O,EAAItS,OAAOma,GACX7H,EAAI+H,UAAUnI,GAAQA,EAAM2E,MAAQ,GAAI3E,EAAMsH,OAAS,EAAGtH,EAAM2E,MAAO3E,EAAMsH,aAC7ElH,EAAIuG,UAIZ,KAAI1S,MAAM+T,IAAWA,GAAU,GAA/B,CAIA,OADA5H,EAAIgI,YACGpI,GAEH,QACQpiB,EACAwiB,EAAIiI,QAAQ5pB,EAAG+S,EAAG5T,EAAI,EAAGoqB,EAAQ,EAAG,EAAGtV,IAEvC0N,EAAIkI,IAAI7pB,EAAG+S,EAAGwW,EAAQ,EAAGtV,IAE7B0N,EAAImI,YACJ,MACJ,IAAK,WACD5D,EAAQ/mB,EAAIA,EAAI,EAAIoqB,EACpB5H,EAAIoI,OAAO/pB,EAAI5C,KAAKse,IAAI8N,GAAOtD,EAAOnT,EAAI3V,KAAKuf,IAAI6M,GAAOD,GAC1DC,GAAOhV,GACPmN,EAAIqI,OAAOhqB,EAAI5C,KAAKse,IAAI8N,GAAOtD,EAAOnT,EAAI3V,KAAKuf,IAAI6M,GAAOD,GAC1DC,GAAOhV,GACPmN,EAAIqI,OAAOhqB,EAAI5C,KAAKse,IAAI8N,GAAOtD,EAAOnT,EAAI3V,KAAKuf,IAAI6M,GAAOD,GAC1D5H,EAAImI,YACJ,MACJ,IAAK,cAQDZ,EAAwB,KAATK,EACf1V,EAAO0V,EAASL,EAChBF,EAAU5rB,KAAKuf,IAAI6M,EAAMjV,IAAcV,EACvCsV,EAAW/rB,KAAKuf,IAAI6M,EAAMjV,KAAepV,EAAIA,EAAI,EAAI+pB,EAAerV,GACpEoV,EAAU7rB,KAAKse,IAAI8N,EAAMjV,IAAcV,EACvCuV,EAAWhsB,KAAKse,IAAI8N,EAAMjV,KAAepV,EAAIA,EAAI,EAAI+pB,EAAerV,GACpE8N,EAAIkI,IAAI7pB,EAAImpB,EAAUpW,EAAIkW,EAASC,EAAcM,EAAMxV,GAAIwV,EAAMlV,IACjEqN,EAAIkI,IAAI7pB,EAAIopB,EAAUrW,EAAIiW,EAASE,EAAcM,EAAMlV,GAASkV,GAChE7H,EAAIkI,IAAI7pB,EAAImpB,EAAUpW,EAAIkW,EAASC,EAAcM,EAAKA,EAAMlV,IAC5DqN,EAAIkI,IAAI7pB,EAAIopB,EAAUrW,EAAIiW,EAASE,EAAcM,EAAMlV,GAASkV,EAAMxV,IACtE2N,EAAImI,YACJ,MACJ,IAAK,OACD,IAAKR,EAAU,CACXzV,EAAOzW,KAAK6sB,QAAUV,EACtBrD,EAAQ/mB,EAAIA,EAAI,EAAI0U,EACpB8N,EAAIuI,KAAKlqB,EAAIkmB,EAAOnT,EAAIc,EAAM,EAAIqS,EAAO,EAAIrS,GAC7C,KACJ,CACA2V,GAAOjV,GACS,IAAK,UACrB4U,EAAW/rB,KAAKuf,IAAI6M,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxCP,EAAU5rB,KAAKuf,IAAI6M,GAAOD,EAC1BN,EAAU7rB,KAAKse,IAAI8N,GAAOD,EAC1BH,EAAWhsB,KAAKse,IAAI8N,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxC5H,EAAIoI,OAAO/pB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIqI,OAAOhqB,EAAIopB,EAAUrW,EAAIiW,GAC7BrH,EAAIqI,OAAOhqB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIqI,OAAOhqB,EAAIopB,EAAUrW,EAAIiW,GAC7BrH,EAAImI,YACJ,MACJ,IAAK,WACDN,GAAOjV,GACS,IAAK,QACrB4U,EAAW/rB,KAAKuf,IAAI6M,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxCP,EAAU5rB,KAAKuf,IAAI6M,GAAOD,EAC1BN,EAAU7rB,KAAKse,IAAI8N,GAAOD,EAC1BH,EAAWhsB,KAAKse,IAAI8N,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxC5H,EAAIoI,OAAO/pB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIqI,OAAOhqB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIoI,OAAO/pB,EAAIopB,EAAUrW,EAAIiW,GAC7BrH,EAAIqI,OAAOhqB,EAAIopB,EAAUrW,EAAIiW,GAC7B,MACJ,IAAK,OACDG,EAAW/rB,KAAKuf,IAAI6M,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxCP,EAAU5rB,KAAKuf,IAAI6M,GAAOD,EAC1BN,EAAU7rB,KAAKse,IAAI8N,GAAOD,EAC1BH,EAAWhsB,KAAKse,IAAI8N,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxC5H,EAAIoI,OAAO/pB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIqI,OAAOhqB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIoI,OAAO/pB,EAAIopB,EAAUrW,EAAIiW,GAC7BrH,EAAIqI,OAAOhqB,EAAIopB,EAAUrW,EAAIiW,GAC7BQ,GAAOjV,GACP4U,EAAW/rB,KAAKuf,IAAI6M,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxCP,EAAU5rB,KAAKuf,IAAI6M,GAAOD,EAC1BN,EAAU7rB,KAAKse,IAAI8N,GAAOD,EAC1BH,EAAWhsB,KAAKse,IAAI8N,IAAQrqB,EAAIA,EAAI,EAAIoqB,GACxC5H,EAAIoI,OAAO/pB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIqI,OAAOhqB,EAAImpB,EAAUpW,EAAIkW,GAC7BtH,EAAIoI,OAAO/pB,EAAIopB,EAAUrW,EAAIiW,GAC7BrH,EAAIqI,OAAOhqB,EAAIopB,EAAUrW,EAAIiW,GAC7B,MACJ,IAAK,OACDA,EAAU7pB,EAAIA,EAAI,EAAI/B,KAAKuf,IAAI6M,GAAOD,EACtCN,EAAU7rB,KAAKse,IAAI8N,GAAOD,EAC1B5H,EAAIoI,OAAO/pB,EAAIgpB,EAASjW,EAAIkW,GAC5BtH,EAAIqI,OAAOhqB,EAAIgpB,EAASjW,EAAIkW,GAC5B,MACJ,IAAK,OACDtH,EAAIoI,OAAO/pB,EAAG+S,GACd4O,EAAIqI,OAAOhqB,EAAI5C,KAAKuf,IAAI6M,IAAQrqB,EAAIA,EAAI,EAAIoqB,GAASxW,EAAI3V,KAAKse,IAAI8N,GAAOD,GACzE,MACJ,KAAK,EACD5H,EAAImI,YAGZnI,EAAIwI,OACAhY,EAAQiY,YAAc,GACtBzI,EAAI0I,QA3GR,CA6GJ,CAOI,SAASC,GAAe1P,EAAO2P,EAAMC,GAErC,OADAA,EAASA,GAAU,IACXD,GAAQ3P,GAASA,EAAM5a,EAAIuqB,EAAKvF,KAAOwF,GAAU5P,EAAM5a,EAAIuqB,EAAKzF,MAAQ0F,GAAU5P,EAAM7H,EAAIwX,EAAK1F,IAAM2F,GAAU5P,EAAM7H,EAAIwX,EAAKxF,OAASyF,CACrJ,CACA,SAASC,GAAS9I,EAAK4I,GACnB5I,EAAImG,OACJnG,EAAIgI,YACJhI,EAAIuI,KAAKK,EAAKvF,KAAMuF,EAAK1F,IAAK0F,EAAKzF,MAAQyF,EAAKvF,KAAMuF,EAAKxF,OAASwF,EAAK1F,KACzElD,EAAI0D,MACR,CACA,SAASqF,GAAW/I,GAChBA,EAAIuG,SACR,CAGI,SAASyC,GAAehJ,EAAKiJ,EAAUhZ,EAAQiZ,EAAM7I,GACrD,IAAK4I,EACD,OAAOjJ,EAAIqI,OAAOpY,EAAO5R,EAAG4R,EAAOmB,GAEvC,GAAa,WAATiP,EAAmB,CACnB,MAAM8I,GAAYF,EAAS5qB,EAAI4R,EAAO5R,GAAK,EAC3C2hB,EAAIqI,OAAOc,EAAUF,EAAS7X,GAC9B4O,EAAIqI,OAAOc,EAAUlZ,EAAOmB,EAChC,KAAoB,UAATiP,KAAuB6I,EAC9BlJ,EAAIqI,OAAOY,EAAS5qB,EAAG4R,EAAOmB,GAE9B4O,EAAIqI,OAAOpY,EAAO5R,EAAG4qB,EAAS7X,GAElC4O,EAAIqI,OAAOpY,EAAO5R,EAAG4R,EAAOmB,EAChC,CAGI,SAASgY,GAAepJ,EAAKiJ,EAAUhZ,EAAQiZ,GAC/C,IAAKD,EACD,OAAOjJ,EAAIqI,OAAOpY,EAAO5R,EAAG4R,EAAOmB,GAEvC4O,EAAIqJ,cAAcH,EAAOD,EAASK,KAAOL,EAASM,KAAML,EAAOD,EAASO,KAAOP,EAASQ,KAAMP,EAAOjZ,EAAOsZ,KAAOtZ,EAAOqZ,KAAMJ,EAAOjZ,EAAOwZ,KAAOxZ,EAAOuZ,KAAMvZ,EAAO5R,EAAG4R,EAAOmB,EACvL,CAkBA,SAASsY,GAAa1J,EAAK3hB,EAAG+S,EAAGuY,EAAMC,GACnC,GAAIA,EAAKC,eAAiBD,EAAKE,UAAW,CAOtC,MAAMC,EAAU/J,EAAI8F,YAAY6D,GAC1BtG,EAAOhlB,EAAI0rB,EAAQC,sBACnB7G,EAAQ9kB,EAAI0rB,EAAQE,uBACpB/G,EAAM9R,EAAI2Y,EAAQG,wBAClB9G,EAAShS,EAAI2Y,EAAQI,yBACrBC,EAAcR,EAAKC,eAAiB3G,EAAME,GAAU,EAAIA,EAC9DpD,EAAIqK,YAAcrK,EAAIsK,UACtBtK,EAAIgI,YACJhI,EAAI6D,UAAY+F,EAAKW,iBAAmB,EACxCvK,EAAIoI,OAAO/E,EAAM+G,GACjBpK,EAAIqI,OAAOlF,EAAOiH,GAClBpK,EAAI0I,QACR,CACJ,CACA,SAAS8B,GAAaxK,EAAK4J,GACvB,MAAMa,EAAWzK,EAAIsK,UACrBtK,EAAIsK,UAAYV,EAAKtd,MACrB0T,EAAI0K,SAASd,EAAKvG,KAAMuG,EAAK1G,IAAK0G,EAAKrF,MAAOqF,EAAK1C,QACnDlH,EAAIsK,UAAYG,CACpB,CAGI,SAASE,GAAW3K,EAAKyE,EAAMpmB,EAAG+S,EAAGsO,EAAMkK,EAAO,CAAC,GACnD,MAAMgB,EAAQ3sB,EAAQwmB,GAAQA,EAAO,CACjCA,GAEEiE,EAASkB,EAAKiB,YAAc,GAA0B,KAArBjB,EAAKkB,YAC5C,IAAIptB,EAAGisB,EAIP,IAHA3J,EAAImG,OACJnG,EAAIN,KAAOA,EAAKkG,OAtDpB,SAAuB5F,EAAK4J,GACpBA,EAAKmB,aACL/K,EAAI8H,UAAU8B,EAAKmB,YAAY,GAAInB,EAAKmB,YAAY,IAEnDhd,EAAc6b,EAAKjC,WACpB3H,EAAItS,OAAOkc,EAAKjC,UAEhBiC,EAAKtd,QACL0T,EAAIsK,UAAYV,EAAKtd,OAErBsd,EAAKoB,YACLhL,EAAIgL,UAAYpB,EAAKoB,WAErBpB,EAAKqB,eACLjL,EAAIiL,aAAerB,EAAKqB,aAEhC,CAuCIC,CAAclL,EAAK4J,GACflsB,EAAI,EAAGA,EAAIktB,EAAM/gB,SAAUnM,EAC3BisB,EAAOiB,EAAMltB,GACTksB,EAAKuB,UACLX,GAAaxK,EAAK4J,EAAKuB,UAEvBzC,IACIkB,EAAKkB,cACL9K,EAAIqK,YAAcT,EAAKkB,aAEtB/c,EAAc6b,EAAKiB,eACpB7K,EAAI6D,UAAY+F,EAAKiB,aAEzB7K,EAAIoL,WAAWzB,EAAMtrB,EAAG+S,EAAGwY,EAAKyB,WAEpCrL,EAAIsL,SAAS3B,EAAMtrB,EAAG+S,EAAGwY,EAAKyB,UAC9B3B,GAAa1J,EAAK3hB,EAAG+S,EAAGuY,EAAMC,GAC9BxY,GAAK7C,OAAOmR,EAAKG,YAErBG,EAAIuG,SACR,CAKI,SAASgF,GAAmBvL,EAAKuI,GACjC,MAAM,EAAElqB,EAAE,EAAE+S,EAAE,EAAE5T,EAAE,EAAEhC,EAAE,OAAEosB,GAAYW,EAEpCvI,EAAIkI,IAAI7pB,EAAIupB,EAAO4D,QAASpa,EAAIwW,EAAO4D,QAAS5D,EAAO4D,QAAS,IAAMnZ,GAAIA,IAAI,GAE9E2N,EAAIqI,OAAOhqB,EAAG+S,EAAI5V,EAAIosB,EAAO6D,YAE7BzL,EAAIkI,IAAI7pB,EAAIupB,EAAO6D,WAAYra,EAAI5V,EAAIosB,EAAO6D,WAAY7D,EAAO6D,WAAYpZ,GAAIM,IAAS,GAE1FqN,EAAIqI,OAAOhqB,EAAIb,EAAIoqB,EAAO8D,YAAata,EAAI5V,GAE3CwkB,EAAIkI,IAAI7pB,EAAIb,EAAIoqB,EAAO8D,YAAata,EAAI5V,EAAIosB,EAAO8D,YAAa9D,EAAO8D,YAAa/Y,GAAS,GAAG,GAEhGqN,EAAIqI,OAAOhqB,EAAIb,EAAG4T,EAAIwW,EAAO+D,UAE7B3L,EAAIkI,IAAI7pB,EAAIb,EAAIoqB,EAAO+D,SAAUva,EAAIwW,EAAO+D,SAAU/D,EAAO+D,SAAU,GAAIhZ,IAAS,GAEpFqN,EAAIqI,OAAOhqB,EAAIupB,EAAO4D,QAASpa,EACnC,CAEA,MAAMwa,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAa9d,EAAOkE,GAC7B,MAAM6Z,GAAW,GAAK/d,GAAOge,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAP7Z,EAGX,OADAlE,GAAS+d,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAO/d,EACX,IAAK,IACDA,GAAS,IAGjB,OAAOkE,EAAOlE,CAClB,CACA,MAAMie,GAAgB5wB,IAAKA,GAAK,EAChC,SAAS6wB,GAAkBle,EAAOme,GAC9B,MAAMvhB,EAAM,CAAC,EACPwhB,EAAW/d,EAAS8d,GACpBphB,EAAOqhB,EAAW3iB,OAAOsB,KAAKohB,GAASA,EACvCE,EAAOhe,EAASL,GAASoe,EAAYE,GAAO3d,EAAeX,EAAMse,GAAOte,EAAMme,EAAMG,KAAWA,GAAOte,EAAMse,GAAQ,IAAIte,EAC9H,IAAK,MAAMse,KAAQvhB,EACfH,EAAI0hB,GAAQL,GAAaI,EAAKC,IAElC,OAAO1hB,CACX,CAQI,SAAS2hB,GAAOve,GAChB,OAAOke,GAAkBle,EAAO,CAC5BkV,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,KAAM,KAEd,CAOI,SAASmJ,GAAcxe,GACvB,OAAOke,GAAkBle,EAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAASye,GAAUze,GACnB,MAAMlC,EAAMygB,GAAOve,GAGnB,OAFAlC,EAAIyY,MAAQzY,EAAIuX,KAAOvX,EAAIqX,MAC3BrX,EAAIob,OAASpb,EAAIoX,IAAMpX,EAAIsX,OACpBtX,CACX,CAOI,SAAS4gB,GAAOlc,EAASmc,GACzBnc,EAAUA,GAAW,CAAC,EACtBmc,EAAWA,GAAY3K,GAAStC,KAChC,IAAIxN,EAAOvD,EAAe6B,EAAQ0B,KAAMya,EAASza,MAC7B,iBAATA,IACPA,EAAO7G,SAAS6G,EAAM,KAE1B,IAAI0N,EAAQjR,EAAe6B,EAAQoP,MAAO+M,EAAS/M,OAC/CA,KAAW,GAAKA,GAAOoM,MAAMH,MAC7Be,QAAQC,KAAK,kCAAoCjN,EAAQ,KACzDA,OAAQ5T,GAEZ,MAAM0T,EAAO,CACTC,OAAQhR,EAAe6B,EAAQmP,OAAQgN,EAAShN,QAChDE,WAAYiM,GAAand,EAAe6B,EAAQqP,WAAY8M,EAAS9M,YAAa3N,GAClFA,OACA0N,QACArT,OAAQoC,EAAe6B,EAAQjE,OAAQogB,EAASpgB,QAChDqZ,OAAQ,IAGZ,OADAlG,EAAKkG,OAzdL,SAAsBlG,GACtB,OAAKA,GAAQ3R,EAAc2R,EAAKxN,OAASnE,EAAc2R,EAAKC,QACjD,MAEHD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KAAOF,EAAKnT,OAASmT,EAAKnT,OAAS,IAAM,IAAMmT,EAAKxN,KAAO,MAAQwN,EAAKC,MACpH,CAodkBmN,CAAapN,GACpBA,CACX,CAWI,SAASqN,GAAQC,EAAQ3N,EAAStP,EAAOkd,GACzC,IACIvvB,EAAGiS,EAAM3B,EADTkf,GAAY,EAEhB,IAAIxvB,EAAI,EAAGiS,EAAOqd,EAAOnjB,OAAQnM,EAAIiS,IAAQjS,EAEzC,GADAsQ,EAAQgf,EAAOtvB,QACDsO,IAAVgC,SAGYhC,IAAZqT,GAA0C,mBAAVrR,IAChCA,EAAQA,EAAMqR,GACd6N,GAAY,QAEFlhB,IAAV+D,GAAuB9R,EAAQ+P,KAC/BA,EAAQA,EAAM+B,EAAQ/B,EAAMnE,QAC5BqjB,GAAY,QAEFlhB,IAAVgC,GAIA,OAHIif,IAASC,IACTD,EAAKC,WAAY,GAEdlf,CAGnB,CAeA,SAASmf,GAAcC,EAAe/N,GAClC,OAAO5V,OAAOC,OAAOD,OAAOyG,OAAOkd,GAAgB/N,EACvD,CAWI,SAASgO,GAAgBC,EAAQC,EAAW,CAC5C,IACDC,EAAYb,EAAUc,EAAY,IAAIH,EAAO,IAC5C,MAAMI,EAAkBF,GAAcF,OACd,IAAbX,IACPA,EAAWgB,GAAS,YAAaL,IAErC,MAAMrH,EAAQ,CACV,CAACvS,OAAOka,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaL,EACbtL,UAAWuK,EACXqB,WAAYP,EACZtM,SAAWvC,GAAQyO,GAAgB,CAC3BzO,KACG0O,GACJC,EAAUG,EAAiBf,IAEtC,OAAO,IAAIsB,MAAMhI,EAAO,CAGpBiI,eAAe,CAACje,EAAQqc,YACbrc,EAAOqc,UACPrc,EAAOke,aACPb,EAAO,GAAGhB,IACV,GAIXvP,IAAI,CAAC9M,EAAQqc,IACF8B,GAAQne,EAAQqc,EAAM,IAyOzC,SAA8BA,EAAMiB,EAAUD,EAAQe,GAClD,IAAIrgB,EACJ,IAAK,MAAMsgB,KAAUf,EAEjB,GADAvf,EAAQ2f,GAASY,GAAQD,EAAQhC,GAAOgB,QACnB,IAAVtf,EACP,OAAOwgB,GAAiBlC,EAAMte,GAASygB,GAAkBnB,EAAQe,EAAO/B,EAAMte,GAASA,CAGnG,CAjP6C0gB,CAAqBpC,EAAMiB,EAAUD,EAAQrd,IAKlF0e,yBAAyB,CAAC1e,EAAQqc,IACvBsC,QAAQD,yBAAyB1e,EAAO6d,QAAQ,GAAIxB,GAI/DuC,eAAe,IACJD,QAAQC,eAAevB,EAAO,IAIzClb,IAAI,CAACnC,EAAQqc,IACFwC,GAAqB7e,GAAQoO,SAASiO,GAIjDyC,QAAS9e,GACE6e,GAAqB7e,GAIhC,GAAAkH,CAAKlH,EAAQqc,EAAMte,GACf,MAAMghB,EAAU/e,EAAOgf,WAAahf,EAAOgf,SAAWxB,KAGtD,OAFAxd,EAAOqc,GAAQ0C,EAAQ1C,GAAQte,SACxBiC,EAAOke,OACP,CACX,GAER,CAQI,SAASe,GAAeb,EAAOhP,EAAS8P,EAAUC,GAClD,MAAMnJ,EAAQ,CACV4H,YAAY,EACZwB,OAAQhB,EACRiB,SAAUjQ,EACVkQ,UAAWJ,EACXK,OAAQ,IAAIpY,IACZ0H,aAAcA,GAAauP,EAAOe,GAClCK,WAAazP,GAAMkP,GAAeb,EAAOrO,EAAKmP,EAAUC,GACxDjO,SAAWvC,GAAQsQ,GAAeb,EAAMlN,SAASvC,GAAQS,EAAS8P,EAAUC,IAEhF,OAAO,IAAInB,MAAMhI,EAAO,CAGpBiI,eAAe,CAACje,EAAQqc,YACbrc,EAAOqc,UACP+B,EAAM/B,IACN,GAIXvP,IAAI,CAAC9M,EAAQqc,EAAMoD,IACRtB,GAAQne,EAAQqc,EAAM,IA6DzC,SAA6Brc,EAAQqc,EAAMoD,GACvC,MAAM,OAAEL,EAAO,SAAEC,EAAS,UAAEC,EAAYzQ,aAAcN,GAAiBvO,EACvE,IAAIjC,EAAQqhB,EAAO/C,GAYnB,OAVIta,GAAWhE,IAAUwQ,EAAYmR,aAAarD,KAC9Cte,EAWR,SAA4Bse,EAAMsD,EAAU3f,EAAQyf,GAChD,MAAM,OAAEL,EAAO,SAAEC,EAAS,UAAEC,EAAU,OAAEC,GAAYvf,EACpD,GAAIuf,EAAOpd,IAAIka,GACX,MAAM,IAAIuD,MAAM,uBAAyB7xB,MAAMmL,KAAKqmB,GAAQM,KAAK,MAAQ,KAAOxD,GAEpFkD,EAAOO,IAAIzD,GACX,IAAIte,EAAQ4hB,EAASN,EAAUC,GAAaG,GAM5C,OALAF,EAAOQ,OAAO1D,GACVkC,GAAiBlC,EAAMte,KAEvBA,EAAQygB,GAAkBY,EAAOvB,QAASuB,EAAQ/C,EAAMte,IAErDA,CACX,CAxBgBiiB,CAAmB3D,EAAMte,EAAOiC,EAAQyf,IAEhDzxB,EAAQ+P,IAAUA,EAAMnE,SACxBmE,EAsBR,SAAuBse,EAAMte,EAAOiC,EAAQigB,GACxC,MAAM,OAAEb,EAAO,SAAEC,EAAS,UAAEC,EAAYzQ,aAAcN,GAAiBvO,EACvE,QAA8B,IAAnBqf,EAASvf,OAAyBmgB,EAAY5D,GACrD,OAAOte,EAAMshB,EAASvf,MAAQ/B,EAAMnE,QACjC,GAAIwE,EAASL,EAAM,IAAK,CAE3B,MAAMmiB,EAAMniB,EACNsf,EAAS+B,EAAOvB,QAAQsC,OAAQjzB,GAAIA,IAAMgzB,GAChDniB,EAAQ,GACR,IAAK,MAAMmE,KAAQge,EAAI,CACnB,MAAM7e,EAAWmd,GAAkBnB,EAAQ+B,EAAQ/C,EAAMna,GACzDnE,EAAM0D,KAAKwd,GAAe5d,EAAUge,EAAUC,GAAaA,EAAUjD,GAAO9N,GAChF,CACJ,CACA,OAAOxQ,CACX,CArCgBqiB,CAAc/D,EAAMte,EAAOiC,EAAQuO,EAAY0R,cAEvD1B,GAAiBlC,EAAMte,KAEvBA,EAAQkhB,GAAelhB,EAAOshB,EAAUC,GAAaA,EAAUjD,GAAO9N,IAEnExQ,CACX,CA5E6CsiB,CAAoBrgB,EAAQqc,EAAMoD,IAKvEf,yBAAyB,CAAC1e,EAAQqc,IACvBrc,EAAO6O,aAAayR,QAAU3B,QAAQxc,IAAIic,EAAO/B,GAAQ,CAC5DzK,YAAY,EACZ2O,cAAc,QACdxkB,EAAY4iB,QAAQD,yBAAyBN,EAAO/B,GAI5DuC,eAAe,IACJD,QAAQC,eAAeR,GAIlCjc,IAAI,CAACnC,EAAQqc,IACFsC,QAAQxc,IAAIic,EAAO/B,GAI9ByC,QAAQ,IACGH,QAAQG,QAAQV,GAI3BlX,IAAI,CAAClH,EAAQqc,EAAMte,KACfqgB,EAAM/B,GAAQte,SACPiC,EAAOqc,IACP,IAGnB,CAGI,SAASxN,GAAauP,EAAOrM,EAAW,CACxCyO,YAAY,EACZC,WAAW,IAEX,MAAM,YAAEzO,EAAaD,EAASyO,WAAW,WAAEtO,EAAYH,EAAS0O,UAAU,SAAEC,EAAU3O,EAASuO,SAAalC,EAC5G,MAAO,CACHkC,QAASI,EACTF,WAAYxO,EACZyO,UAAWvO,EACXwN,aAAc3d,GAAWiQ,GAAeA,EAAc,IAAIA,EAC1DiO,YAAale,GAAWmQ,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAMoM,GAAU,CAACD,EAAQjN,IAAOiN,EAASA,EAASzc,EAAYwP,GAAQA,EAChEmN,GAAmB,CAAClC,EAAMte,IAAQK,EAASL,IAAmB,aAATse,IAAyD,OAAjC7iB,OAAOolB,eAAe7gB,IAAmBA,EAAMtD,cAAgBjB,QAClJ,SAAS2kB,GAAQne,EAAQqc,EAAMS,GAC3B,GAAItjB,OAAOwE,UAAUgD,eAAe9C,KAAK8B,EAAQqc,IAAkB,gBAATA,EACtD,OAAOrc,EAAOqc,GAElB,MAAMte,EAAQ+e,IAGd,OADA9c,EAAOqc,GAAQte,EACRA,CACX,CA+CA,SAAS4iB,GAAgBjE,EAAUL,EAAMte,GACrC,OAAOgE,GAAW2a,GAAYA,EAASL,EAAMte,GAAS2e,CAC1D,CACA,MAAMkE,GAAW,CAACxgB,EAAKygB,KAAiB,IAARzgB,EAAeygB,EAAwB,iBAARzgB,EAAmBgB,EAAiByf,EAAQzgB,QAAOrE,EAClH,SAAS+kB,GAAU5Z,EAAK6Z,EAAc3gB,EAAK4gB,EAAgBjjB,GACvD,IAAK,MAAM8iB,KAAUE,EAAa,CAC9B,MAAMpS,EAAQiS,GAASxgB,EAAKygB,GAC5B,GAAIlS,EAAO,CACPzH,EAAI4Y,IAAInR,GACR,MAAM+N,EAAWiE,GAAgBhS,EAAMwD,UAAW/R,EAAKrC,GACvD,QAAwB,IAAb2e,GAA4BA,IAAatc,GAAOsc,IAAasE,EAGpE,OAAOtE,CAEf,MAAO,IAAc,IAAV/N,QAA6C,IAAnBqS,GAAkC5gB,IAAQ4gB,EAG3E,OAAO,IAEf,CACA,OAAO,CACX,CACA,SAASxC,GAAkBuC,EAAc1f,EAAUgb,EAAMte,GACrD,MAAMwf,EAAalc,EAASyc,YACtBpB,EAAWiE,GAAgBtf,EAAS8Q,UAAWkK,EAAMte,GACrDkjB,EAAY,IACXF,KACAxD,GAEDrW,EAAM,IAAIC,IAChBD,EAAI4Y,IAAI/hB,GACR,IAAIqC,EAAM8gB,GAAiBha,EAAK+Z,EAAW5E,EAAMK,GAAYL,EAAMte,GACnE,OAAY,OAARqC,SAGoB,IAAbsc,GAA4BA,IAAaL,IAChDjc,EAAM8gB,GAAiBha,EAAK+Z,EAAWvE,EAAUtc,EAAKrC,GAC1C,OAARqC,KAIDgd,GAAgBrvB,MAAMmL,KAAKgO,GAAM,CACpC,IACDqW,EAAYb,EAAU,IAQ7B,SAAsBrb,EAAUgb,EAAMte,GAClC,MAAM8iB,EAASxf,EAAS0c,aAClB1B,KAAQwE,IACVA,EAAOxE,GAAQ,CAAC,GAEpB,MAAMrc,EAAS6gB,EAAOxE,GACtB,OAAIruB,EAAQgS,IAAW5B,EAASL,GAErBA,EAEJiC,GAAU,CAAC,CACtB,CAnBiCmhB,CAAa9f,EAAUgb,EAAMte,GAC9D,CACA,SAASmjB,GAAiBha,EAAK+Z,EAAW7gB,EAAKsc,EAAUxa,GACrD,KAAM9B,GACFA,EAAM0gB,GAAU5Z,EAAK+Z,EAAW7gB,EAAKsc,EAAUxa,GAEnD,OAAO9B,CACX,CAsBA,SAASsd,GAAStd,EAAKid,GACnB,IAAK,MAAM1O,KAAS0O,EAAO,CACvB,IAAK1O,EACD,SAEJ,MAAM5Q,EAAQ4Q,EAAMvO,GACpB,QAAqB,IAAVrC,EACP,OAAOA,CAEf,CACJ,CACA,SAAS8gB,GAAqB7e,GAC1B,IAAIlF,EAAOkF,EAAOke,MAIlB,OAHKpjB,IACDA,EAAOkF,EAAOke,MAItB,SAAkCb,GAC9B,MAAMnW,EAAM,IAAIC,IAChB,IAAK,MAAMwH,KAAS0O,EAChB,IAAK,MAAMjd,KAAO5G,OAAOsB,KAAK6T,GAAOwR,OAAQ/yB,IAAKA,EAAE6kB,WAAW,MAC3D/K,EAAI4Y,IAAI1f,GAGhB,OAAOrS,MAAMmL,KAAKgO,EACtB,CAZ8Bka,CAAyBphB,EAAO6d,UAEnD/iB,CACX,CAUA,SAASumB,GAA4BvZ,EAAM0N,EAAMnQ,EAAO6C,GACpD,MAAM,OAAEE,GAAYN,GACd,IAAE1H,EAAK,KAAS3E,KAAK6lB,SACrBC,EAAS,IAAIxzB,MAAMma,GACzB,IAAIza,EAAGiS,EAAMI,EAAOoC,EACpB,IAAIzU,EAAI,EAAGiS,EAAOwI,EAAOza,EAAIiS,IAAQjS,EACjCqS,EAAQrS,EAAI4X,EACZnD,EAAOsT,EAAK1V,GACZyhB,EAAO9zB,GAAK,CACRE,EAAGya,EAAOoZ,MAAMpgB,EAAiBc,EAAM9B,GAAMN,IAGrD,OAAOyhB,CACX,CAEA,MAAME,GAAUnjB,OAAOmjB,SAAW,MAC5BC,GAAW,CAAC3Z,EAAQta,IAAIA,EAAIsa,EAAOnO,SAAWmO,EAAOta,GAAGk0B,MAAQ5Z,EAAOta,GACvEm0B,GAAgB1R,GAA0B,MAAdA,EAAoB,IAAM,IAC5D,SAAS2R,GAAYC,EAAYC,EAAaC,EAAYnlB,GAItD,MAAMmc,EAAW8I,EAAWH,KAAOI,EAAcD,EAC3CjhB,EAAUkhB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMnd,GAAsBlE,EAASmY,GACrCmJ,EAAMpd,GAAsBkd,EAAMphB,GACxC,IAAIuhB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAMxe,MAAMwe,GAAO,EAAIA,EACvBC,EAAMze,MAAMye,GAAO,EAAIA,EACvB,MAAMC,EAAKzlB,EAAIulB,EACTG,EAAK1lB,EAAIwlB,EACf,MAAO,CACHrJ,SAAU,CACN5qB,EAAGyS,EAAQzS,EAAIk0B,GAAML,EAAK7zB,EAAI4qB,EAAS5qB,GACvC+S,EAAGN,EAAQM,EAAImhB,GAAML,EAAK9gB,EAAI6X,EAAS7X,IAE3C8gB,KAAM,CACF7zB,EAAGyS,EAAQzS,EAAIm0B,GAAMN,EAAK7zB,EAAI4qB,EAAS5qB,GACvC+S,EAAGN,EAAQM,EAAIohB,GAAMN,EAAK9gB,EAAI6X,EAAS7X,IAGnD,CAoFA,SAASqhB,GAAgBC,EAAI/2B,EAAKD,GAC9B,OAAOD,KAAKC,IAAID,KAAKE,IAAI+2B,EAAIh3B,GAAMC,EACvC,CAwBI,SAASg3B,GAA2B3a,EAAQxH,EAASoY,EAAMpG,EAAMrC,GACjE,IAAIziB,EAAGiS,EAAMsJ,EAAO2Z,EAKpB,GAHIpiB,EAAQgI,WACRR,EAASA,EAAOoY,OAAQsC,IAAMA,EAAGd,OAEE,aAAnCphB,EAAQqiB,wBAzDZ,SAA6B7a,EAAQmI,EAAY,KACjD,MAAM2S,EAAYjB,GAAa1R,GACzB4S,EAAY/a,EAAOnO,OACnBmpB,EAASh1B,MAAM+0B,GAAWvK,KAAK,GAC/ByK,EAAKj1B,MAAM+0B,GAEjB,IAAIr1B,EAAGw1B,EAAaC,EAChBC,EAAazB,GAAS3Z,EAAQ,GAClC,IAAIta,EAAI,EAAGA,EAAIq1B,IAAar1B,EAIxB,GAHAw1B,EAAcC,EACdA,EAAeC,EACfA,EAAazB,GAAS3Z,EAAQta,EAAI,GAC7By1B,EAAL,CAGA,GAAIC,EAAY,CACZ,MAAMC,EAAaD,EAAWjT,GAAagT,EAAahT,GAExD6S,EAAOt1B,GAAoB,IAAf21B,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACpG,CACAJ,EAAGv1B,GAAMw1B,EAA2BE,EAA6BrgB,GAAKigB,EAAOt1B,EAAI,MAAQqV,GAAKigB,EAAOt1B,IAAM,GAAKs1B,EAAOt1B,EAAI,GAAKs1B,EAAOt1B,IAAM,EAA5Fs1B,EAAOt1B,EAAI,GAArCs1B,EAAOt1B,EAN9B,EAtEJ,SAAwBsa,EAAQgb,EAAQC,GACxC,MAAMF,EAAY/a,EAAOnO,OACzB,IAAIypB,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAazB,GAAS3Z,EAAQ,GAClC,IAAI,IAAIta,EAAI,EAAGA,EAAIq1B,EAAY,IAAKr1B,EAChCy1B,EAAeC,EACfA,EAAazB,GAAS3Z,EAAQta,EAAI,GAC7By1B,GAAiBC,IAGlBpgB,GAAaggB,EAAOt1B,GAAI,EAAGg0B,IAC3BuB,EAAGv1B,GAAKu1B,EAAGv1B,EAAI,GAAK,GAGxB41B,EAASL,EAAGv1B,GAAKs1B,EAAOt1B,GACxB61B,EAAQN,EAAGv1B,EAAI,GAAKs1B,EAAOt1B,GAC3B+1B,EAAmBh4B,KAAKyN,IAAIoqB,EAAQ,GAAK73B,KAAKyN,IAAIqqB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI/3B,KAAKmZ,KAAK6e,GACrBR,EAAGv1B,GAAK41B,EAASE,EAAOR,EAAOt1B,GAC/Bu1B,EAAGv1B,EAAI,GAAK61B,EAAQC,EAAOR,EAAOt1B,KAE1C,CAsDIg2B,CAAe1b,EAAQgb,EAAQC,GArDnC,SAAyBjb,EAAQib,EAAI9S,EAAY,KAC7C,MAAM2S,EAAYjB,GAAa1R,GACzB4S,EAAY/a,EAAOnO,OACzB,IAAI8T,EAAOuV,EAAaC,EACpBC,EAAazB,GAAS3Z,EAAQ,GAClC,IAAI,IAAIta,EAAI,EAAGA,EAAIq1B,IAAar1B,EAAE,CAI9B,GAHAw1B,EAAcC,EACdA,EAAeC,EACfA,EAAazB,GAAS3Z,EAAQta,EAAI,IAC7By1B,EACD,SAEJ,MAAMQ,EAASR,EAAahT,GACtByT,EAAST,EAAaL,GACxBI,IACAvV,GAASgW,EAAST,EAAY/S,IAAc,EAC5CgT,EAAa,MAAMhT,KAAewT,EAAShW,EAC3CwV,EAAa,MAAML,KAAec,EAASjW,EAAQsV,EAAGv1B,IAEtD01B,IACAzV,GAASyV,EAAWjT,GAAawT,GAAU,EAC3CR,EAAa,MAAMhT,KAAewT,EAAShW,EAC3CwV,EAAa,MAAML,KAAec,EAASjW,EAAQsV,EAAGv1B,GAE9D,CACJ,CA6BIm2B,CAAgB7b,EAAQib,EAAI9S,EAChC,CAkCQ2T,CAAoB9b,EAAQmI,OACzB,CACH,IAAI4T,EAAOvR,EAAOxK,EAAOA,EAAOnO,OAAS,GAAKmO,EAAO,GACrD,IAAIta,EAAI,EAAGiS,EAAOqI,EAAOnO,OAAQnM,EAAIiS,IAAQjS,EACzCub,EAAQjB,EAAOta,GACfk1B,EAAgBd,GAAYiC,EAAM9a,EAAOjB,EAAOvc,KAAKE,IAAI+B,EAAI,EAAGiS,GAAQ6S,EAAO,EAAI,IAAM7S,GAAOa,EAAQwjB,SACxG/a,EAAMqQ,KAAOsJ,EAAc3J,SAAS5qB,EACpC4a,EAAMuQ,KAAOoJ,EAAc3J,SAAS7X,EACpC6H,EAAMsQ,KAAOqJ,EAAcV,KAAK7zB,EAChC4a,EAAMwQ,KAAOmJ,EAAcV,KAAK9gB,EAChC2iB,EAAO9a,CAEf,CACIzI,EAAQyjB,iBA3ChB,SAAyBjc,EAAQ4Q,GAC7B,IAAIlrB,EAAGiS,EAAMsJ,EAAOib,EAAQC,EACxBC,EAAazL,GAAe3Q,EAAO,GAAI4Q,GAC3C,IAAIlrB,EAAI,EAAGiS,EAAOqI,EAAOnO,OAAQnM,EAAIiS,IAAQjS,EACzCy2B,EAAaD,EACbA,EAASE,EACTA,EAAa12B,EAAIiS,EAAO,GAAKgZ,GAAe3Q,EAAOta,EAAI,GAAIkrB,GACtDsL,IAGLjb,EAAQjB,EAAOta,GACXy2B,IACAlb,EAAMqQ,KAAOmJ,GAAgBxZ,EAAMqQ,KAAMV,EAAKvF,KAAMuF,EAAKzF,OACzDlK,EAAMuQ,KAAOiJ,GAAgBxZ,EAAMuQ,KAAMZ,EAAK1F,IAAK0F,EAAKxF,SAExDgR,IACAnb,EAAMsQ,KAAOkJ,GAAgBxZ,EAAMsQ,KAAMX,EAAKvF,KAAMuF,EAAKzF,OACzDlK,EAAMwQ,KAAOgJ,GAAgBxZ,EAAMwQ,KAAMb,EAAK1F,IAAK0F,EAAKxF,SAGpE,CAwBQ6Q,CAAgBjc,EAAQ4Q,EAEhC,CAII,SAASyL,KACT,MAAyB,oBAAX/c,QAA8C,oBAAbgd,QACnD,CAGI,SAASC,GAAeC,GACxB,IAAI1D,EAAS0D,EAAQC,WAIrB,OAHI3D,GAAgC,wBAAtBA,EAAO5iB,aACjB4iB,EAASA,EAAO4D,MAEb5D,CACX,CAII,SAAS6D,GAAcC,EAAYlW,EAAMmW,GACzC,IAAIC,EAUJ,MAT0B,iBAAfF,GACPE,EAAgBzpB,SAASupB,EAAY,KACJ,IAA7BA,EAAWtkB,QAAQ,OAEnBwkB,EAAgBA,EAAgB,IAAMpW,EAAK+V,WAAWI,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBC,GAAUA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,MAI1FG,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASC,GAAmBC,EAAQzV,EAAO0V,GACvC,MAAMC,EAAS,CAAC,EAChBD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAI53B,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAM83B,EAAML,GAAUz3B,GACtB63B,EAAOC,GAAOzmB,WAAWsmB,EAAOzV,EAAQ,IAAM4V,EAAMF,KAAY,CACpE,CAGA,OAFAC,EAAOhR,MAAQgR,EAAOlS,KAAOkS,EAAOpS,MACpCoS,EAAOrO,OAASqO,EAAOrS,IAAMqS,EAAOnS,OAC7BmS,CACX,CAgCI,SAASE,GAAoBC,EAAOjY,GACpC,GAAI,WAAYiY,EACZ,OAAOA,EAEX,MAAM,OAAE5O,EAAO,wBAAEH,GAA6BlJ,EACxCmC,EAAQmV,GAAiBjO,GACzB6O,EAAgC,eAApB/V,EAAMgW,UAClBC,EAAWT,GAAmBxV,EAAO,WACrCkW,EAAUV,GAAmBxV,EAAO,SAAU,UAC9C,EAAEvhB,EAAE,EAAE+S,EAAE,IAAE2kB,GAnChB,SAA2Bp5B,EAAGmqB,GAC9B,MAAMkP,EAAUr5B,EAAEq5B,QACZhmB,EAASgmB,GAAWA,EAAQnsB,OAASmsB,EAAQ,GAAKr5B,GAClD,QAAEs5B,EAAQ,QAAEC,GAAalmB,EAC/B,IACI3R,EAAG+S,EADH2kB,GAAM,EAEV,GAXiB,EAAC13B,EAAG+S,EAAGnB,KAAU5R,EAAI,GAAK+S,EAAI,MAAQnB,IAAWA,EAAOkmB,YAWrEC,CAAaH,EAASC,EAASv5B,EAAEsT,QACjC5R,EAAI43B,EACJ7kB,EAAI8kB,MACD,CACH,MAAM3N,EAAOzB,EAAOuP,wBACpBh4B,EAAI2R,EAAOsmB,QAAU/N,EAAKlF,KAC1BjS,EAAIpB,EAAOumB,QAAUhO,EAAKrF,IAC1B6S,GAAM,CACV,CACA,MAAO,CACH13B,IACA+S,IACA2kB,MAER,CAe6BS,CAAkBd,EAAO5O,GAC5CO,EAAUwO,EAASxS,MAAQ0S,GAAOD,EAAQzS,MAC1CiE,EAAUuO,EAAS3S,KAAO6S,GAAOD,EAAQ5S,KAC/C,IAAI,MAAEqB,EAAM,OAAE2C,GAAYzJ,EAK1B,OAJIkY,IACApR,GAASsR,EAAStR,MAAQuR,EAAQvR,MAClC2C,GAAU2O,EAAS3O,OAAS4O,EAAQ5O,QAEjC,CACH7oB,EAAG5C,KAAKL,OAAOiD,EAAIgpB,GAAW9C,EAAQuC,EAAOvC,MAAQoC,GACrDvV,EAAG3V,KAAKL,OAAOgW,EAAIkW,GAAWJ,EAASJ,EAAOI,OAASP,GAE/D,CA0BA,MAAM8P,GAAUp7B,GAAII,KAAKL,MAAU,GAAJC,GAAU,GAuCrC,SAASq7B,GAAYjZ,EAAOkZ,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAer7B,KAAK8X,MAAMkK,EAAMyJ,OAAS2P,GACzCE,EAAct7B,KAAK8X,MAAMkK,EAAM8G,MAAQsS,GAC7CpZ,EAAMyJ,OAASzrB,KAAK8X,MAAMkK,EAAMyJ,QAChCzJ,EAAM8G,MAAQ9oB,KAAK8X,MAAMkK,EAAM8G,OAC/B,MAAMuC,EAASrJ,EAAMqJ,OAQrB,OAJIA,EAAOlH,QAAUgX,IAAe9P,EAAOlH,MAAMsH,SAAWJ,EAAOlH,MAAM2E,SACrEuC,EAAOlH,MAAMsH,OAAS,GAAGzJ,EAAMyJ,WAC/BJ,EAAOlH,MAAM2E,MAAQ,GAAG9G,EAAM8G,YAE9B9G,EAAMkJ,0BAA4BkQ,GAAc/P,EAAOI,SAAW4P,GAAgBhQ,EAAOvC,QAAUwS,KACnGtZ,EAAMkJ,wBAA0BkQ,EAChC/P,EAAOI,OAAS4P,EAChBhQ,EAAOvC,MAAQwS,EACftZ,EAAMuC,IAAIgX,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,CAKI,MAAMI,GAA+B,WACrC,IAAIC,GAAmB,EACvB,IACI,MAAM1mB,EAAU,CACZ,WAAI2mB,GAEA,OADAD,GAAmB,GACZ,CACX,GAEA7C,OACA/c,OAAO8f,iBAAiB,OAAQ,KAAM5mB,GACtC8G,OAAO+f,oBAAoB,OAAQ,KAAM7mB,GAEjD,CAAE,MAAO7T,GAET,CACA,OAAOu6B,CACX,CAjByC,GA0BrC,SAASI,GAAatC,EAAShhB,GAC/B,MAAMhG,EA/LV,SAAkBupB,EAAIvjB,GAClB,OAAO+gB,GAAiBwC,GAAIC,iBAAiBxjB,EACjD,CA6LkByjB,CAASzC,EAAShhB,GAC1B+X,EAAU/d,GAASA,EAAMge,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK/f,CACnC,CAII,SAAS0rB,GAAattB,EAAIC,EAAIyC,EAAGuT,GACjC,MAAO,CACHhiB,EAAG+L,EAAG/L,EAAIyO,GAAKzC,EAAGhM,EAAI+L,EAAG/L,GACzB+S,EAAGhH,EAAGgH,EAAItE,GAAKzC,EAAG+G,EAAIhH,EAAGgH,GAEjC,CAGI,SAASumB,GAAsBvtB,EAAIC,EAAIyC,EAAGuT,GAC1C,MAAO,CACHhiB,EAAG+L,EAAG/L,EAAIyO,GAAKzC,EAAGhM,EAAI+L,EAAG/L,GACzB+S,EAAY,WAATiP,EAAoBvT,EAAI,GAAM1C,EAAGgH,EAAI/G,EAAG+G,EAAa,UAATiP,EAAmBvT,EAAI,EAAI1C,EAAGgH,EAAI/G,EAAG+G,EAAItE,EAAI,EAAIzC,EAAG+G,EAAIhH,EAAGgH,EAElH,CAGI,SAASwmB,GAAqBxtB,EAAIC,EAAIyC,EAAGuT,GACzC,MAAMwX,EAAM,CACRx5B,EAAG+L,EAAGmf,KACNnY,EAAGhH,EAAGqf,MAEJqO,EAAM,CACRz5B,EAAGgM,EAAGif,KACNlY,EAAG/G,EAAGmf,MAEJjtB,EAAIm7B,GAAattB,EAAIytB,EAAK/qB,GAC1BtQ,EAAIk7B,GAAaG,EAAKC,EAAKhrB,GAC3BrQ,EAAIi7B,GAAaI,EAAKztB,EAAIyC,GAC1BpQ,EAAIg7B,GAAan7B,EAAGC,EAAGsQ,GACvBnQ,EAAI+6B,GAAal7B,EAAGC,EAAGqQ,GAC7B,OAAO4qB,GAAah7B,EAAGC,EAAGmQ,EAC9B,CAyCA,SAASirB,GAAcC,EAAKC,EAAO1T,GAC/B,OAAOyT,EAxCmB,SAASC,EAAO1T,GAC1C,MAAO,CACHlmB,EAAGA,GACQ45B,EAAQA,EAAQ1T,EAAQlmB,EAEnC,QAAA65B,CAAU16B,GACN+mB,EAAQ/mB,CACZ,EACAwtB,UAAWpT,GACO,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,QAExCugB,MAAM,CAAC95B,EAAG2P,IACC3P,EAAI2P,EAEfoqB,WAAW,CAAC/5B,EAAGg6B,IACJh6B,EAAIg6B,EAGvB,CAmBiBC,CAAsBL,EAAO1T,GAjBnC,CACHlmB,EAAGA,GACQA,EAEX,QAAA65B,CAAU16B,GAAI,EACdwtB,UAAWpT,GACAA,EAEXugB,MAAM,CAAC95B,EAAG2P,IACC3P,EAAI2P,EAEfoqB,WAAW,CAAC/5B,EAAGk6B,IACJl6B,EAMnB,CACA,SAASm6B,GAAsBxY,EAAKyY,GAChC,IAAI7Y,EAAO8Y,EACO,QAAdD,GAAqC,QAAdA,IACvB7Y,EAAQI,EAAI8G,OAAOlH,MACnB8Y,EAAW,CACP9Y,EAAM4X,iBAAiB,aACvB5X,EAAM+Y,oBAAoB,cAE9B/Y,EAAMgZ,YAAY,YAAaH,EAAW,aAC1CzY,EAAI6Y,kBAAoBH,EAEhC,CACA,SAASI,GAAqB9Y,EAAK0Y,QACd1sB,IAAb0sB,WACO1Y,EAAI6Y,kBACX7Y,EAAI8G,OAAOlH,MAAMgZ,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAExE,CAEA,SAASK,GAAW/kB,GAChB,MAAiB,UAAbA,EACO,CACHglB,QAAS3jB,GACT4jB,QAAS9jB,GACT+jB,UAAW9jB,IAGZ,CACH4jB,QAASljB,GACTmjB,QAAS,CAAC18B,EAAGC,IAAID,EAAIC,EACrB08B,UAAY76B,GAAIA,EAExB,CACA,SAAS86B,IAAiB,MAAE7jB,EAAM,IAAEC,EAAI,MAAE4C,EAAM,KAAEqK,EAAK,MAAE5C,IACrD,MAAO,CACHtK,MAAOA,EAAQ6C,EACf5C,IAAKA,EAAM4C,EACXqK,KAAMA,IAASjN,EAAMD,EAAQ,GAAK6C,GAAU,EAC5CyH,QAER,CA8BC,SAASwZ,GAAcC,EAASrhB,EAAQyL,GACrC,IAAKA,EACD,MAAO,CACH4V,GAGR,MAAM,SAAErlB,EAAWsB,MAAOgkB,EAAa/jB,IAAKgkB,GAAc9V,EACpDtL,EAAQH,EAAOnO,QACf,QAAEovB,EAAQ,QAAED,EAAQ,UAAEE,GAAeH,GAAW/kB,IAChD,MAAEsB,EAAM,IAAEC,EAAI,KAAEiN,EAAK,MAAE5C,GAtCjC,SAAoByZ,EAASrhB,EAAQyL,GACjC,MAAM,SAAEzP,EAAWsB,MAAOgkB,EAAa/jB,IAAKgkB,GAAc9V,GACpD,QAAEuV,EAAQ,UAAEE,GAAeH,GAAW/kB,GACtCmE,EAAQH,EAAOnO,OACrB,IACInM,EAAGiS,GADH,MAAE2F,EAAM,IAAEC,EAAI,KAAEiN,GAAU6W,EAE9B,GAAI7W,EAAM,CAGN,IAFAlN,GAAS6C,EACT5C,GAAO4C,EACHza,EAAI,EAAGiS,EAAOwI,EAAOza,EAAIiS,GACpBqpB,EAAQE,EAAUlhB,EAAO1C,EAAQ6C,GAAOnE,IAAYslB,EAAYC,KADpC77B,EAIjC4X,IACAC,IAEJD,GAAS6C,EACT5C,GAAO4C,CACX,CAIA,OAHI5C,EAAMD,IACNC,GAAO4C,GAEJ,CACH7C,QACAC,MACAiN,OACA5C,MAAOyZ,EAAQzZ,MAEvB,CAU4C4Z,CAAWH,EAASrhB,EAAQyL,GAC9D8R,EAAS,GACf,IAEIvnB,EAAOiL,EAAOwgB,EAFdC,GAAS,EACTC,EAAW,KAEf,MAEMC,EAAc,IAAIF,GAFEV,EAAQM,EAAYG,EAAWzrB,IAA6C,IAAnCirB,EAAQK,EAAYG,GAGjFI,EAAa,KAAKH,GAF6B,IAA7BT,EAAQM,EAAUvrB,IAAgBgrB,EAAQO,EAAUE,EAAWzrB,GAGvF,IAAI,IAAItQ,EAAI4X,EAAOye,EAAOze,EAAO5X,GAAK6X,IAAO7X,EACzCub,EAAQjB,EAAOta,EAAIya,GACfc,EAAM2Y,OAGV5jB,EAAQkrB,EAAUjgB,EAAMjF,IACpBhG,IAAUyrB,IAGdC,EAASV,EAAQhrB,EAAOsrB,EAAYC,GACnB,OAAbI,GAAqBC,MACrBD,EAA0C,IAA/BV,EAAQjrB,EAAOsrB,GAAoB57B,EAAIq2B,GAErC,OAAb4F,GAAqBE,MACrBtE,EAAO7jB,KAAKynB,GAAiB,CACzB7jB,MAAOqkB,EACPpkB,IAAK7X,EACL8kB,OACArK,QACAyH,WAEJ+Z,EAAW,MAEf5F,EAAOr2B,EACP+7B,EAAYzrB,IAWhB,OATiB,OAAb2rB,GACApE,EAAO7jB,KAAKynB,GAAiB,CACzB7jB,MAAOqkB,EACPpkB,MACAiN,OACArK,QACAyH,WAGD2V,CACX,CACC,SAASuE,GAAenQ,EAAMlG,GAC3B,MAAM8R,EAAS,GACTwE,EAAWpQ,EAAKoQ,SACtB,IAAI,IAAIr8B,EAAI,EAAGA,EAAIq8B,EAASlwB,OAAQnM,IAAI,CACpC,MAAMs8B,EAAMZ,GAAcW,EAASr8B,GAAIisB,EAAK3R,OAAQyL,GAChDuW,EAAInwB,QACJ0rB,EAAO7jB,QAAQsoB,EAEvB,CACA,OAAOzE,CACX,CAkJA,SAAS0E,GAAUzpB,GACf,MAAO,CACHyO,gBAAiBzO,EAAQyO,gBACzBib,eAAgB1pB,EAAQ0pB,eACxBC,WAAY3pB,EAAQ2pB,WACpBC,iBAAkB5pB,EAAQ4pB,iBAC1BC,gBAAiB7pB,EAAQ6pB,gBACzB5R,YAAajY,EAAQiY,YACrBvJ,YAAa1O,EAAQ0O,YAE7B,CACA,SAASob,GAAa1a,EAAO2a,GACzB,IAAKA,EACD,OAAO,EAEX,MAAMtU,EAAQ,GACRuU,EAAW,SAASnqB,EAAKrC,GAC3B,OAAKkO,GAAoBlO,IAGpBiY,EAAM5H,SAASrQ,IAChBiY,EAAMvU,KAAK1D,GAERiY,EAAM3V,QAAQtC,IALVA,CAMf,EACA,OAAO4O,KAAKC,UAAU+C,EAAO4a,KAAc5d,KAAKC,UAAU0d,EAAWC,EACzE,CAEA,SAASC,GAAe3Z,EAAO4Z,EAAWC,GACtC,OAAO7Z,EAAMtQ,QAAQkT,KAAO5C,EAAM6Z,GAASD,EAAUC,EACzD,CAaA,SAASC,GAAmBnd,EAAO1F,GAC/B,MAAM2L,EAAO3L,EAAK8iB,MAClB,GAAInX,EAAKoX,SACL,OAAO,EAEX,MAAMlS,EAjBV,SAAwB7Q,EAAM2iB,GAC1B,MAAM,OAAEthB,EAAO,OAAEC,GAAYtB,EAC7B,OAAIqB,GAAUC,EACH,CACHgK,KAAMoX,GAAerhB,EAAQshB,EAAW,QACxCvX,MAAOsX,GAAerhB,EAAQshB,EAAW,SACzCxX,IAAKuX,GAAephB,EAAQqhB,EAAW,OACvCtX,OAAQqX,GAAephB,EAAQqhB,EAAW,WAG3CA,CACX,CAMiBK,CAAehjB,EAAM0F,EAAMid,WACxC,MAAO,CACHrX,MAAoB,IAAdK,EAAKL,KAAiB,EAAIuF,EAAKvF,OAAsB,IAAdK,EAAKL,KAAgB,EAAIK,EAAKL,MAC3EF,OAAsB,IAAfO,EAAKP,MAAkB1F,EAAM8G,MAAQqE,EAAKzF,QAAwB,IAAfO,EAAKP,MAAiB,EAAIO,EAAKP,OACzFD,KAAkB,IAAbQ,EAAKR,IAAgB,EAAI0F,EAAK1F,MAAoB,IAAbQ,EAAKR,IAAe,EAAIQ,EAAKR,KACvEE,QAAwB,IAAhBM,EAAKN,OAAmB3F,EAAMyJ,OAAS0B,EAAKxF,SAA0B,IAAhBM,EAAKN,OAAkB,EAAIM,EAAKN,QAEtG,CCvtFA,MAAM4X,GACF,WAAAtwB,GACIgB,KAAKuvB,SAAW,KAChBvvB,KAAKwvB,QAAU,IAAI3e,IACnB7Q,KAAKyvB,UAAW,EAChBzvB,KAAK0vB,eAAYpvB,CACrB,CACH,OAAAqvB,CAAQ5d,EAAO6d,EAAOC,EAAM5wB,GACrB,MAAM6wB,EAAYF,EAAMxkB,UAAUnM,GAC5B8wB,EAAWH,EAAMhZ,SACvBkZ,EAAUxkB,QAAS/H,GAAKA,EAAG,CACnBwO,QACAie,QAASJ,EAAMI,QACfD,WACAE,YAAalgC,KAAKE,IAAI4/B,EAAOD,EAAMhmB,MAAOmmB,KAEtD,CACH,QAAAG,GACWlwB,KAAKuvB,WAGTvvB,KAAKyvB,UAAW,EAChBzvB,KAAKuvB,SAAW5jB,GAAiBlJ,KAAKmJ,OAAQ,KAC1C5L,KAAKmwB,UACLnwB,KAAKuvB,SAAW,KACZvvB,KAAKyvB,UACLzvB,KAAKkwB,aAGjB,CACH,OAAAC,CAAQN,EAAOO,KAAKC,OACb,IAAIC,EAAY,EAChBtwB,KAAKwvB,QAAQlkB,QAAQ,CAACskB,EAAO7d,KACzB,IAAK6d,EAAMW,UAAYX,EAAMpkB,MAAMrN,OAC/B,OAEJ,MAAMqN,EAAQokB,EAAMpkB,MACpB,IAEI/E,EAFAzU,EAAIwZ,EAAMrN,OAAS,EACnBqyB,GAAO,EAEX,KAAMx+B,GAAK,IAAKA,EACZyU,EAAO+E,EAAMxZ,GACTyU,EAAKgqB,SACDhqB,EAAKiqB,OAASd,EAAMhZ,WACpBgZ,EAAMhZ,SAAWnQ,EAAKiqB,QAE1BjqB,EAAKkqB,KAAKd,GACVW,GAAO,IAEPhlB,EAAMxZ,GAAKwZ,EAAMA,EAAMrN,OAAS,GAChCqN,EAAMolB,OAGVJ,IACAze,EAAMye,OACNxwB,KAAK2vB,QAAQ5d,EAAO6d,EAAOC,EAAM,aAEhCrkB,EAAMrN,SACPyxB,EAAMW,SAAU,EAChBvwB,KAAK2vB,QAAQ5d,EAAO6d,EAAOC,EAAM,YACjCD,EAAMI,SAAU,GAEpBM,GAAa9kB,EAAMrN,SAEvB6B,KAAK0vB,UAAYG,EACC,IAAdS,IACAtwB,KAAKyvB,UAAW,EAExB,CACH,SAAAoB,CAAU9e,GACH,MAAM+e,EAAS9wB,KAAKwvB,QACpB,IAAII,EAAQkB,EAAOzf,IAAIU,GAavB,OAZK6d,IACDA,EAAQ,CACJW,SAAS,EACTP,SAAS,EACTxkB,MAAO,GACPJ,UAAW,CACP2lB,SAAU,GACVC,SAAU,KAGlBF,EAAOrlB,IAAIsG,EAAO6d,IAEfA,CACX,CACH,MAAAqB,CAAOlf,EAAOiY,EAAOkH,GACdlxB,KAAK6wB,UAAU9e,GAAO3G,UAAU4e,GAAOhkB,KAAKkrB,EAChD,CACH,GAAA7M,CAAItS,EAAOvG,GACCA,GAAUA,EAAMrN,QAGrB6B,KAAK6wB,UAAU9e,GAAOvG,MAAMxF,QAAQwF,EACxC,CACH,GAAA9E,CAAIqL,GACG,OAAO/R,KAAK6wB,UAAU9e,GAAOvG,MAAMrN,OAAS,CAChD,CACH,KAAAyL,CAAMmI,GACC,MAAM6d,EAAQ5vB,KAAKwvB,QAAQne,IAAIU,GAC1B6d,IAGLA,EAAMW,SAAU,EAChBX,EAAMhmB,MAAQwmB,KAAKC,MACnBT,EAAMhZ,SAAWgZ,EAAMpkB,MAAM2lB,OAAO,CAACC,EAAKC,IAAMthC,KAAKC,IAAIohC,EAAKC,EAAIC,WAAY,GAC9EtxB,KAAKkwB,WACT,CACA,OAAAK,CAAQxe,GACJ,IAAK/R,KAAKyvB,SACN,OAAO,EAEX,MAAMG,EAAQ5vB,KAAKwvB,QAAQne,IAAIU,GAC/B,SAAK6d,GAAUA,EAAMW,SAAYX,EAAMpkB,MAAMrN,OAIjD,CACH,IAAAozB,CAAKxf,GACE,MAAM6d,EAAQ5vB,KAAKwvB,QAAQne,IAAIU,GAC/B,IAAK6d,IAAUA,EAAMpkB,MAAMrN,OACvB,OAEJ,MAAMqN,EAAQokB,EAAMpkB,MACpB,IAAIxZ,EAAIwZ,EAAMrN,OAAS,EACvB,KAAMnM,GAAK,IAAKA,EACZwZ,EAAMxZ,GAAGw/B,SAEb5B,EAAMpkB,MAAQ,GACdxL,KAAK2vB,QAAQ5d,EAAO6d,EAAOQ,KAAKC,MAAO,WAC3C,CACH,MAAAoB,CAAO1f,GACA,OAAO/R,KAAKwvB,QAAQlL,OAAOvS,EAC/B,EAEJ,IAAI2f,GAA2B,IAAIpC,GAEnC,MAAMzvB,GAAc,cACd8xB,GAAgB,CAClBC,QAAQ,CAACn0B,EAAMF,EAAIs0B,IACRA,EAAS,GAAMt0B,EAAKE,EAElC,KAAAmD,CAAOnD,EAAMF,EAAIs0B,GACV,MAAMC,EAAKlxB,GAAMnD,GAAQoC,IACnBiB,EAAKgxB,EAAG3xB,OAASS,GAAMrD,GAAMsC,IACnC,OAAOiB,GAAMA,EAAGX,MAAQW,EAAGH,IAAImxB,EAAID,GAAQtxB,YAAchD,CAC7D,EACAw0B,OAAO,CAACt0B,EAAMF,EAAIs0B,IACPp0B,GAAQF,EAAKE,GAAQo0B,GAGpC,MAAMG,GACF,WAAAhzB,CAAYizB,EAAK1tB,EAAQqc,EAAMrjB,GAC3B,MAAM20B,EAAe3tB,EAAOqc,GAC5BrjB,EAAK8jB,GAAQ,CACT4Q,EAAI10B,GACJA,EACA20B,EACAD,EAAIx0B,OAER,MAAMA,EAAO4jB,GAAQ,CACjB4Q,EAAIx0B,KACJy0B,EACA30B,IAEJyC,KAAKywB,SAAU,EACfzwB,KAAKmyB,IAAMF,EAAI1uB,IAAMouB,GAAcM,EAAIhzB,aAAexB,GACtDuC,KAAKoyB,QAAU7jB,GAAQ0jB,EAAIpb,SAAWtI,GAAQC,OAC9CxO,KAAKqyB,OAAStiC,KAAK8X,MAAMuoB,KAAKC,OAAS4B,EAAItb,OAAS,IACpD3W,KAAKsxB,UAAYtxB,KAAK0wB,OAAS3gC,KAAK8X,MAAMoqB,EAAIrb,UAC9C5W,KAAKsyB,QAAUL,EAAInb,KACnB9W,KAAKuyB,QAAUhuB,EACfvE,KAAKwyB,MAAQ5R,EACb5gB,KAAKyyB,MAAQh1B,EACbuC,KAAK0yB,IAAMn1B,EACXyC,KAAK2yB,eAAYryB,CACrB,CACA,MAAA0W,GACI,OAAOhX,KAAKywB,OAChB,CACA,MAAAmC,CAAOX,EAAK10B,EAAIsyB,GACZ,GAAI7vB,KAAKywB,QAAS,CACdzwB,KAAK2vB,SAAQ,GACb,MAAMuC,EAAelyB,KAAKuyB,QAAQvyB,KAAKwyB,OACjCK,EAAUhD,EAAO7vB,KAAKqyB,OACtB5f,EAASzS,KAAKsxB,UAAYuB,EAChC7yB,KAAKqyB,OAASxC,EACd7vB,KAAKsxB,UAAYvhC,KAAK8X,MAAM9X,KAAKC,IAAIyiB,EAAQwf,EAAIrb,WACjD5W,KAAK0wB,QAAUmC,EACf7yB,KAAKsyB,QAAUL,EAAInb,KACnB9W,KAAK0yB,IAAMrR,GAAQ,CACf4Q,EAAI10B,GACJA,EACA20B,EACAD,EAAIx0B,OAERuC,KAAKyyB,MAAQpR,GAAQ,CACjB4Q,EAAIx0B,KACJy0B,EACA30B,GAER,CACJ,CACA,MAAAi0B,GACQxxB,KAAKywB,UACLzwB,KAAK2wB,KAAKP,KAAKC,OACfrwB,KAAKywB,SAAU,EACfzwB,KAAK2vB,SAAQ,GAErB,CACA,IAAAgB,CAAKd,GACD,MAAMgD,EAAUhD,EAAO7vB,KAAKqyB,OACtBzb,EAAW5W,KAAKsxB,UAChB1Q,EAAO5gB,KAAKwyB,MACZ/0B,EAAOuC,KAAKyyB,MACZ3b,EAAO9W,KAAKsyB,MACZ/0B,EAAKyC,KAAK0yB,IAChB,IAAIb,EAEJ,GADA7xB,KAAKywB,QAAUhzB,IAASF,IAAOuZ,GAAQ+b,EAAUjc,IAC5C5W,KAAKywB,QAGN,OAFAzwB,KAAKuyB,QAAQ3R,GAAQrjB,OACrByC,KAAK2vB,SAAQ,GAGbkD,EAAU,EACV7yB,KAAKuyB,QAAQ3R,GAAQnjB,GAGzBo0B,EAASgB,EAAUjc,EAAW,EAC9Bib,EAAS/a,GAAQ+a,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS7xB,KAAKoyB,QAAQriC,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAG6hC,KAC9C7xB,KAAKuyB,QAAQ3R,GAAQ5gB,KAAKmyB,IAAI10B,EAAMF,EAAIs0B,GAC5C,CACA,IAAAiB,GACI,MAAMC,EAAW/yB,KAAK2yB,YAAc3yB,KAAK2yB,UAAY,IACrD,OAAO,IAAIK,QAAQ,CAACC,EAAKC,KACrBH,EAAS/sB,KAAK,CACVitB,MACAC,SAGZ,CACA,OAAAvD,CAAQwD,GACJ,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW/yB,KAAK2yB,WAAa,GACnC,IAAI,IAAI3gC,EAAI,EAAGA,EAAI+gC,EAAS50B,OAAQnM,IAChC+gC,EAAS/gC,GAAGohC,IAEpB,EAGJ,MAAMC,GACF,WAAAr0B,CAAY+S,EAAOuhB,GACftzB,KAAKuzB,OAASxhB,EACd/R,KAAKwzB,YAAc,IAAI3iB,IACvB7Q,KAAKyzB,UAAUH,EACnB,CACA,SAAAG,CAAUH,GACN,IAAK3wB,EAAS2wB,GACV,OAEJ,MAAMI,EAAmB31B,OAAOsB,KAAKiX,GAAShD,WACxCqgB,EAAgB3zB,KAAKwzB,YAC3Bz1B,OAAO61B,oBAAoBN,GAAQhoB,QAAS3G,IACxC,MAAMstB,EAAMqB,EAAO3uB,GACnB,IAAKhC,EAASsvB,GACV,OAEJ,MAAMkB,EAAW,CAAC,EAClB,IAAK,MAAMU,KAAUH,EACjBP,EAASU,GAAU5B,EAAI4B,IAE1BthC,EAAQ0/B,EAAIlb,aAAekb,EAAIlb,YAAc,CAC1CpS,IACD2G,QAASsV,IACJA,IAASjc,GAAQgvB,EAAcjtB,IAAIka,IACnC+S,EAAcloB,IAAImV,EAAMuS,MAIxC,CACH,eAAAW,CAAgBvvB,EAAQoN,GACjB,MAAMoiB,EAAapiB,EAAO7M,QACpBA,EAwEd,SAA8BP,EAAQwvB,GAClC,IAAKA,EACD,OAEJ,IAAIjvB,EAAUP,EAAOO,QACrB,GAAKA,EAUL,OANIA,EAAQkvB,UACRzvB,EAAOO,QAAUA,EAAU/G,OAAOC,OAAO,CAAC,EAAG8G,EAAS,CAClDkvB,SAAS,EACTC,YAAa,CAAC,KAGfnvB,EATHP,EAAOO,QAAUivB,CAUzB,CAxFwBG,CAAqB3vB,EAAQwvB,GAC7C,IAAKjvB,EACD,MAAO,GAEX,MAAMqS,EAAanX,KAAKm0B,kBAAkBrvB,EAASivB,GAOnD,OANIA,EAAWC,SAwDvB,SAAkB7c,EAAYJ,GAC1B,MAAMwZ,EAAU,GACVlxB,EAAOtB,OAAOsB,KAAK0X,GACzB,IAAI,IAAI/kB,EAAI,EAAGA,EAAIqN,EAAKlB,OAAQnM,IAAI,CAChC,MAAMoiC,EAAOjd,EAAW9X,EAAKrN,IACzBoiC,GAAQA,EAAKpd,UACbuZ,EAAQvqB,KAAKouB,EAAKtB,OAE1B,CACA,OAAOE,QAAQqB,IAAI9D,EACvB,CAjEY+D,CAAS/vB,EAAOO,QAAQmvB,YAAaF,GAAYQ,KAAK,KAClDhwB,EAAOO,QAAUivB,GAClB,QAGA5c,CACX,CACH,iBAAAgd,CAAkB5vB,EAAQoN,GACnB,MAAMgiB,EAAgB3zB,KAAKwzB,YACrBrc,EAAa,GACboZ,EAAUhsB,EAAO0vB,cAAgB1vB,EAAO0vB,YAAc,CAAC,GACvDxT,EAAQ1iB,OAAOsB,KAAKsS,GACpBke,EAAOO,KAAKC,MAClB,IAAIr+B,EACJ,IAAIA,EAAIyuB,EAAMtiB,OAAS,EAAGnM,GAAK,IAAKA,EAAE,CAClC,MAAM4uB,EAAOH,EAAMzuB,GACnB,GAAuB,MAAnB4uB,EAAKtiB,OAAO,GACZ,SAEJ,GAAa,YAATsiB,EAAoB,CACpBzJ,EAAWnR,QAAQhG,KAAK8zB,gBAAgBvvB,EAAQoN,IAChD,QACJ,CACA,MAAMrP,EAAQqP,EAAOiP,GACrB,IAAItN,EAAYid,EAAQ3P,GACxB,MAAMqR,EAAM0B,EAActiB,IAAIuP,GAC9B,GAAItN,EAAW,CACX,GAAI2e,GAAO3e,EAAU0D,SAAU,CAC3B1D,EAAUsf,OAAOX,EAAK3vB,EAAOutB,GAC7B,QACJ,CACIvc,EAAUke,QAElB,CACKS,GAAQA,EAAIrb,UAIjB2Z,EAAQ3P,GAAQtN,EAAY,IAAI0e,GAAUC,EAAK1tB,EAAQqc,EAAMte,GAC7D6U,EAAWnR,KAAKsN,IAJZ/O,EAAOqc,GAAQte,CAKvB,CACA,OAAO6U,CACX,CACH,MAAAyb,CAAOruB,EAAQoN,GACR,GAA8B,IAA1B3R,KAAKwzB,YAAYhtB,KAEjB,YADAzI,OAAOC,OAAOuG,EAAQoN,GAG1B,MAAMwF,EAAanX,KAAKm0B,kBAAkB5vB,EAAQoN,GAClD,OAAIwF,EAAWhZ,QACXuzB,GAASrN,IAAIrkB,KAAKuzB,OAAQpc,IACnB,QAFX,CAIJ,EA+BJ,SAASqd,GAAUpf,EAAOqf,GACtB,MAAMvW,EAAO9I,GAASA,EAAMtQ,SAAW,CAAC,EAClCjB,EAAUqa,EAAKra,QACf5T,OAAmBqQ,IAAb4d,EAAKjuB,IAAoBwkC,EAAkB,EACjDzkC,OAAmBsQ,IAAb4d,EAAKluB,IAAoBykC,EAAkB,EACvD,MAAO,CACH7qB,MAAO/F,EAAU7T,EAAMC,EACvB4Z,IAAKhG,EAAU5T,EAAMD,EAE7B,CAgCA,SAAS0kC,GAAwB3iB,EAAO4iB,GACpC,MAAMt1B,EAAO,GACPu1B,EAAW7iB,EAAM8iB,uBAAuBF,GAC9C,IAAI3iC,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAO2wB,EAASz2B,OAAQnM,EAAIiS,IAAQjS,EAC3CqN,EAAK2G,KAAK4uB,EAAS5iC,GAAGqS,OAE1B,OAAOhF,CACX,CACA,SAASy1B,GAAWC,EAAOzyB,EAAO0yB,EAASlwB,EAAU,CAAC,GAClD,MAAMzF,EAAO01B,EAAM11B,KACb41B,EAA8B,WAAjBnwB,EAAQ6P,KAC3B,IAAI3iB,EAAGiS,EAAMG,EAAc8wB,EAC3B,GAAc,OAAV5yB,EACA,OAEJ,IAAI6yB,GAAQ,EACZ,IAAInjC,EAAI,EAAGiS,EAAO5E,EAAKlB,OAAQnM,EAAIiS,IAAQjS,EAAE,CAEzC,GADAoS,GAAgB/E,EAAKrN,GACjBoS,IAAiB4wB,EAAS,CAE1B,GADAG,GAAQ,EACJrwB,EAAQuvB,IACR,SAEJ,KACJ,CACAa,EAAaH,EAAMpjB,OAAOvN,GACtBxB,EAAesyB,KAAgBD,GAAwB,IAAV3yB,GAAe+E,GAAK/E,KAAW+E,GAAK6tB,MACjF5yB,GAAS4yB,EAEjB,CACA,OAAKC,GAAUrwB,EAAQuvB,IAGhB/xB,EAFI,CAGf,CAiBA,SAAS8yB,GAAUhgB,EAAO/I,GACtB,MAAMgpB,EAAUjgB,GAASA,EAAMtQ,QAAQuwB,QACvC,OAAOA,QAAuB/0B,IAAZ+0B,QAAwC/0B,IAAf+L,EAAK0oB,KACpD,CAWA,SAASO,GAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC5D,CACA,SAASE,GAAoBZ,EAAOnoB,EAAQgpB,EAAU32B,GAClD,IAAK,MAAMoN,KAAQO,EAAOipB,wBAAwB52B,GAAM4E,UAAU,CAC9D,MAAMvB,EAAQyyB,EAAM1oB,EAAKhI,OACzB,GAAIuxB,GAAYtzB,EAAQ,IAAMszB,GAAYtzB,EAAQ,EAC9C,OAAO+J,EAAKhI,KAEpB,CACA,OAAO,IACX,CACA,SAASyxB,GAAaC,EAAYjQ,GAC9B,MAAM,MAAE/T,EAAQikB,YAAa3pB,GAAU0pB,EACjCR,EAASxjB,EAAMkkB,UAAYlkB,EAAMkkB,QAAU,CAAC,IAC5C,OAAEtpB,EAAO,OAAEC,EAASvI,MAAOD,GAAkBiI,EAC7C6pB,EAAQvpB,EAAOK,KACfmpB,EAAQvpB,EAAOI,KACfrI,EA7BV,SAAqByxB,EAAYC,EAAYhqB,GACzC,MAAO,GAAG+pB,EAAWh0B,MAAMi0B,EAAWj0B,MAAMiK,EAAK0oB,OAAS1oB,EAAKpN,MACnE,CA2BgBq3B,CAAY3pB,EAAQC,EAAQP,GAClCpI,EAAO6hB,EAAO3nB,OACpB,IAAI42B,EACJ,IAAI,IAAI/iC,EAAI,EAAGA,EAAIiS,IAAQjS,EAAE,CACzB,MAAMyU,EAAOqf,EAAO9zB,IACZ,CAACkkC,GAAQ7xB,EAAQ,CAAC8xB,GAAQ7zB,GAAWmE,EAE7CsuB,GADmBtuB,EAAKwvB,UAAYxvB,EAAKwvB,QAAU,CAAC,IACjCE,GAASb,GAAiBC,EAAQ5wB,EAAKN,GAC1D0wB,EAAM3wB,GAAgB9B,EACtByyB,EAAMwB,KAAOZ,GAAoBZ,EAAOnoB,GAAQ,EAAMP,EAAKpN,MAC3D81B,EAAMyB,QAAUb,GAAoBZ,EAAOnoB,GAAQ,EAAOP,EAAKpN,OAC1C81B,EAAM0B,gBAAkB1B,EAAM0B,cAAgB,CAAC,IACvDryB,GAAgB9B,CACjC,CACJ,CACA,SAASo0B,GAAgB3kB,EAAO/E,GAC5B,MAAMqI,EAAStD,EAAMsD,OACrB,OAAOtX,OAAOsB,KAAKgW,GAAQqP,OAAQ/f,GAAM0Q,EAAO1Q,GAAKqI,OAASA,GAAM2pB,OACxE,CAuBA,SAASC,GAAYvqB,EAAMb,GACvB,MAAMpH,EAAeiI,EAAK0pB,WAAW1xB,MAC/B2I,EAAOX,EAAKO,QAAUP,EAAKO,OAAOI,KACxC,GAAKA,EAAL,CAGAxB,EAAQA,GAASa,EAAKQ,QACtB,IAAK,MAAMiZ,KAAUta,EAAM,CACvB,MAAM+pB,EAASzP,EAAOmQ,QACtB,IAAKV,QAA2Bj1B,IAAjBi1B,EAAOvoB,SAAsD1M,IAA/Bi1B,EAAOvoB,GAAM5I,GACtD,cAEGmxB,EAAOvoB,GAAM5I,QACe9D,IAA/Bi1B,EAAOvoB,GAAMypB,oBAA4En2B,IAA7Ci1B,EAAOvoB,GAAMypB,cAAcryB,WAChEmxB,EAAOvoB,GAAMypB,cAAcryB,EAE1C,CAXA,CAYJ,CACA,MAAMyyB,GAAsBliB,GAAgB,UAATA,GAA6B,SAATA,EACjDmiB,GAAmB,CAACC,EAAQC,IAASA,EAASD,EAASh5B,OAAOC,OAAO,CAAC,EAAG+4B,GAK/E,MAAME,GACLC,gBAAkB,CAAC,EACnBA,0BAA4B,KAC5BA,uBAAyB,KACzB,WAAAl4B,CAAY+S,EAAO3N,GACZpE,KAAK+R,MAAQA,EACb/R,KAAKwY,KAAOzG,EAAMuC,IAClBtU,KAAKqE,MAAQD,EACbpE,KAAKm3B,gBAAkB,CAAC,EACxBn3B,KAAKg2B,YAAch2B,KAAKo3B,UACxBp3B,KAAKq3B,MAAQr3B,KAAKg2B,YAAY/2B,KAC9Be,KAAK8E,aAAUxE,EACdN,KAAK6lB,UAAW,EACjB7lB,KAAKs3B,WAAQh3B,EACbN,KAAKu3B,iBAAcj3B,EACnBN,KAAKw3B,oBAAiBl3B,EACtBN,KAAKy3B,gBAAan3B,EAClBN,KAAK03B,gBAAap3B,EAClBN,KAAK23B,qBAAsB,EAC3B33B,KAAK43B,oBAAqB,EAC1B53B,KAAK63B,cAAWv3B,EAChBN,KAAK83B,UAAY,GACjB93B,KAAK+3B,8BAAgCA,mBACrC/3B,KAAKg4B,2BAA6BA,gBAClCh4B,KAAKi4B,YACT,CACA,UAAAA,GACI,MAAM5rB,EAAOrM,KAAKg2B,YAClBh2B,KAAKyzB,YACLzzB,KAAKk4B,aACL7rB,EAAK8rB,SAAW/C,GAAU/oB,EAAKO,OAAQP,GACvCrM,KAAKo4B,cACDp4B,KAAK8E,QAAQgY,OAAS9c,KAAK+R,MAAMsmB,gBAAgB,WACjDnX,QAAQC,KAAK,qKAErB,CACA,WAAAmX,CAAYl0B,GACJpE,KAAKqE,QAAUD,GACfwyB,GAAY52B,KAAKg2B,aAErBh2B,KAAKqE,MAAQD,CACjB,CACA,UAAA8zB,GACI,MAAMnmB,EAAQ/R,KAAK+R,MACb1F,EAAOrM,KAAKg2B,YACZjpB,EAAU/M,KAAKu4B,aACfC,EAAW,CAACxrB,EAAMra,EAAG+S,EAAGxT,IAAa,MAAT8a,EAAera,EAAa,MAATqa,EAAe9a,EAAIwT,EAClE+yB,EAAMpsB,EAAKqsB,QAAUz1B,EAAe8J,EAAQ2rB,QAAShC,GAAgB3kB,EAAO,MAC5E4mB,EAAMtsB,EAAKusB,QAAU31B,EAAe8J,EAAQ6rB,QAASlC,GAAgB3kB,EAAO,MAC5E8mB,EAAMxsB,EAAKysB,QAAU71B,EAAe8J,EAAQ+rB,QAASpC,GAAgB3kB,EAAO,MAC5E0C,EAAYpI,EAAKoI,UACjBskB,EAAM1sB,EAAK2sB,QAAUR,EAAS/jB,EAAWgkB,EAAKE,EAAKE,GACnDI,EAAM5sB,EAAK6sB,QAAUV,EAAS/jB,EAAWkkB,EAAKF,EAAKI,GACzDxsB,EAAKqB,OAAS1N,KAAKm5B,cAAcV,GACjCpsB,EAAKsB,OAAS3N,KAAKm5B,cAAcR,GACjCtsB,EAAK+sB,OAASp5B,KAAKm5B,cAAcN,GACjCxsB,EAAKM,OAAS3M,KAAKm5B,cAAcJ,GACjC1sB,EAAKO,OAAS5M,KAAKm5B,cAAcF,EACrC,CACA,UAAAV,GACI,OAAOv4B,KAAK+R,MAAMgI,KAAKtG,SAASzT,KAAKqE,MACzC,CACA,OAAA+yB,GACI,OAAOp3B,KAAK+R,MAAMsnB,eAAer5B,KAAKqE,MAC1C,CACH,aAAA80B,CAAcG,GACP,OAAOt5B,KAAK+R,MAAMsD,OAAOikB,EAC7B,CACH,cAAAC,CAAenkB,GACR,MAAM/I,EAAOrM,KAAKg2B,YAClB,OAAO5gB,IAAU/I,EAAKM,OAASN,EAAKO,OAASP,EAAKM,MACtD,CACA,KAAA6sB,GACIx5B,KAAKmwB,QAAQ,QACjB,CACH,QAAAsJ,GACO,MAAMptB,EAAOrM,KAAKg2B,YACdh2B,KAAKs3B,OACLtsB,GAAoBhL,KAAKs3B,MAAOt3B,MAEhCqM,EAAK8rB,UACLvB,GAAYvqB,EAEpB,CACH,UAAAqtB,GACO,MAAM3sB,EAAU/M,KAAKu4B,aACfxe,EAAOhN,EAAQgN,OAAShN,EAAQgN,KAAO,IACvCud,EAAQt3B,KAAKs3B,MACnB,GAAI30B,EAASoX,GAAO,CAChB,MAAM1N,EAAOrM,KAAKg2B,YAClBh2B,KAAKs3B,MA5MjB,SAAkCvd,EAAM1N,GACpC,MAAM,OAAEM,EAAO,OAAEC,GAAYP,EACvBstB,EAA2B,MAAhBhtB,EAAOK,KAAe,IAAM,IACvC4sB,EAA2B,MAAhBhtB,EAAOI,KAAe,IAAM,IACvC3N,EAAOtB,OAAOsB,KAAK0a,GACnB8f,EAAQ,IAAIvnC,MAAM+M,EAAKlB,QAC7B,IAAInM,EAAGiS,EAAMU,EACb,IAAI3S,EAAI,EAAGiS,EAAO5E,EAAKlB,OAAQnM,EAAIiS,IAAQjS,EACvC2S,EAAMtF,EAAKrN,GACX6nC,EAAM7nC,GAAK,CACP,CAAC2nC,GAAWh1B,EACZ,CAACi1B,GAAW7f,EAAKpV,IAGzB,OAAOk1B,CACX,CA6LyBC,CAAyB/f,EAAM1N,EAChD,MAAO,GAAIirB,IAAUvd,EAAM,CACvB,GAAIud,EAAO,CACPtsB,GAAoBssB,EAAOt3B,MAC3B,MAAMqM,EAAOrM,KAAKg2B,YAClBY,GAAYvqB,GACZA,EAAKQ,QAAU,EACnB,CACIkN,GAAQhc,OAAOg8B,aAAahgB,MD1KjB1R,EC2KO0R,GD1KpB5O,SACN9C,EAAM8C,SAASC,UAAUpF,KCyKOhG,ODtKpCjC,OAAOi8B,eAAe3xB,EAAO,WAAY,CACrCyc,cAAc,EACd3O,YAAY,EACZ7T,MAAO,CACH8I,UAAW,CCkKiBpL,SD7JpC+K,GAAYO,QAAS3G,IACjB,MAAMyuB,EAAS,UAAYjtB,EAAYxB,GACjCs1B,EAAO5xB,EAAM1D,GACnB5G,OAAOi8B,eAAe3xB,EAAO1D,EAAK,CAC9BmgB,cAAc,EACd3O,YAAY,EACZ,KAAA7T,IAAUkB,GACN,MAAMyvB,EAAMgH,EAAKv2B,MAAM1D,KAAMwD,GAM7B,OALA6E,EAAM8C,SAASC,UAAUE,QAAS4uB,IACA,mBAAnBA,EAAO9G,IACd8G,EAAO9G,MAAW5vB,KAGnByvB,CACX,QCiJAjzB,KAAK83B,UAAY,GACjB93B,KAAKs3B,MAAQvd,CACjB,CD/KR,IAA2B1R,CCgLvB,CACA,WAAA+vB,GACI,MAAM/rB,EAAOrM,KAAKg2B,YAClBh2B,KAAK05B,aACD15B,KAAK+3B,qBACL1rB,EAAKU,QAAU,IAAI/M,KAAK+3B,mBAEhC,CACA,qBAAAoC,CAAsBC,GAClB,MAAM/tB,EAAOrM,KAAKg2B,YACZjpB,EAAU/M,KAAKu4B,aACrB,IAAI8B,GAAe,EACnBr6B,KAAK05B,aACL,MAAMY,EAAajuB,EAAK8rB,SACxB9rB,EAAK8rB,SAAW/C,GAAU/oB,EAAKO,OAAQP,GACnCA,EAAK0oB,QAAUhoB,EAAQgoB,QACvBsF,GAAe,EACfzD,GAAYvqB,GACZA,EAAK0oB,MAAQhoB,EAAQgoB,OAEzB/0B,KAAKu6B,gBAAgBH,IACjBC,GAAgBC,IAAejuB,EAAK8rB,YACpCrC,GAAa91B,KAAMqM,EAAKQ,SACxBR,EAAK8rB,SAAW/C,GAAU/oB,EAAKO,OAAQP,GAE/C,CACH,SAAAonB,GACO,MAAMH,EAAStzB,KAAK+R,MAAMuhB,OACpBkH,EAAYlH,EAAOmH,iBAAiBz6B,KAAKq3B,OACzCzV,EAAS0R,EAAOoH,gBAAgB16B,KAAKu4B,aAAciC,GAAW,GACpEx6B,KAAK8E,QAAUwuB,EAAOqH,eAAe/Y,EAAQ5hB,KAAKqb,cAClDrb,KAAK6lB,SAAW7lB,KAAK8E,QAAQmQ,QAC7BjV,KAAKm3B,gBAAkB,CAAC,CAC5B,CACH,KAAApR,CAAMnc,EAAO6C,GACN,MAAQupB,YAAa3pB,EAAOirB,MAAOvd,GAAU/Z,MACvC,OAAE2M,EAAO,SAAEwrB,GAAc9rB,EACzB6pB,EAAQvpB,EAAOK,KACrB,IAEIhb,EAAGq/B,EAAKvL,EAFR8U,EAAmB,IAAVhxB,GAAe6C,IAAUsN,EAAK5b,QAAgBkO,EAAKK,QAC5D2b,EAAOze,EAAQ,GAAKyC,EAAKQ,QAAQjD,EAAQ,GAE7C,IAAsB,IAAlB5J,KAAK6lB,SACLxZ,EAAKQ,QAAUkN,EACf1N,EAAKK,SAAU,EACfoZ,EAAS/L,MACN,CAEC+L,EADAvzB,EAAQwnB,EAAKnQ,IACJ5J,KAAK66B,eAAexuB,EAAM0N,EAAMnQ,EAAO6C,GACzC9J,EAASoX,EAAKnQ,IACZ5J,KAAK86B,gBAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAExCzM,KAAK+6B,mBAAmB1uB,EAAM0N,EAAMnQ,EAAO6C,GAExD,MAAMuuB,EAA6B,IAAmB,OAAf3J,EAAI6E,IAAmB7N,GAAQgJ,EAAI6E,GAAS7N,EAAK6N,GACxF,IAAIlkC,EAAI,EAAGA,EAAIya,IAASza,EACpBqa,EAAKQ,QAAQ7a,EAAI4X,GAASynB,EAAMvL,EAAO9zB,GACnC4oC,IACII,MACAJ,GAAS,GAEbvS,EAAOgJ,GAGfhlB,EAAKK,QAAUkuB,CACnB,CACIzC,GACArC,GAAa91B,KAAM8lB,EAE3B,CACH,kBAAAiV,CAAmB1uB,EAAM0N,EAAMnQ,EAAO6C,GAC/B,MAAM,OAAEE,EAAO,OAAEC,GAAYP,EACvB6pB,EAAQvpB,EAAOK,KACfmpB,EAAQvpB,EAAOI,KACfiuB,EAAStuB,EAAOuuB,YAChBC,EAAcxuB,IAAWC,EACzBkZ,EAAS,IAAIxzB,MAAMma,GACzB,IAAIza,EAAGiS,EAAMI,EACb,IAAIrS,EAAI,EAAGiS,EAAOwI,EAAOza,EAAIiS,IAAQjS,EACjCqS,EAAQrS,EAAI4X,EACZkc,EAAO9zB,GAAK,CACR,CAACkkC,GAAQiF,GAAexuB,EAAOoZ,MAAMkV,EAAO52B,GAAQA,GACpD,CAAC8xB,GAAQvpB,EAAOmZ,MAAMhM,EAAK1V,GAAQA,IAG3C,OAAOyhB,CACX,CACH,cAAA+U,CAAexuB,EAAM0N,EAAMnQ,EAAO6C,GAC3B,MAAM,OAAEiB,EAAO,OAAEC,GAAYtB,EACvByZ,EAAS,IAAIxzB,MAAMma,GACzB,IAAIza,EAAGiS,EAAMI,EAAOoC,EACpB,IAAIzU,EAAI,EAAGiS,EAAOwI,EAAOza,EAAIiS,IAAQjS,EACjCqS,EAAQrS,EAAI4X,EACZnD,EAAOsT,EAAK1V,GACZyhB,EAAO9zB,GAAK,CACRW,EAAG+a,EAAOqY,MAAMtf,EAAK,GAAIpC,GACzBqB,EAAGiI,EAAOoY,MAAMtf,EAAK,GAAIpC,IAGjC,OAAOyhB,CACX,CACH,eAAAgV,CAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAC5B,MAAM,OAAEiB,EAAO,OAAEC,GAAYtB,GACvB,SAAE+uB,EAAU,IAAI,SAAEC,EAAU,KAASr7B,KAAK6lB,SAC1CC,EAAS,IAAIxzB,MAAMma,GACzB,IAAIza,EAAGiS,EAAMI,EAAOoC,EACpB,IAAIzU,EAAI,EAAGiS,EAAOwI,EAAOza,EAAIiS,IAAQjS,EACjCqS,EAAQrS,EAAI4X,EACZnD,EAAOsT,EAAK1V,GACZyhB,EAAO9zB,GAAK,CACRW,EAAG+a,EAAOqY,MAAMpgB,EAAiBc,EAAM20B,GAAW/2B,GAClDqB,EAAGiI,EAAOoY,MAAMpgB,EAAiBc,EAAM40B,GAAWh3B,IAG1D,OAAOyhB,CACX,CACH,SAAAwV,CAAUj3B,GACH,OAAOrE,KAAKg2B,YAAYnpB,QAAQxI,EACpC,CACH,cAAAk3B,CAAel3B,GACR,OAAOrE,KAAKg2B,YAAYjc,KAAK1V,EACjC,CACH,UAAAywB,CAAW1f,EAAO0Q,EAAQnR,GACnB,MAAM5C,EAAQ/R,KAAK+R,MACb1F,EAAOrM,KAAKg2B,YACZ1zB,EAAQwjB,EAAO1Q,EAAMpI,MAK3B,OAAO8nB,GAJO,CACVz1B,KAAMq1B,GAAwB3iB,GAAO,GACrCJ,OAAQmU,EAAOmQ,QAAQ7gB,EAAMpI,MAAMypB,eAEdn0B,EAAO+J,EAAKhI,MAAO,CACxCsQ,QAER,CACH,qBAAA6mB,CAAsB9zB,EAAO0N,EAAO0Q,EAAQiP,GACrC,MAAM0G,EAAc3V,EAAO1Q,EAAMpI,MACjC,IAAI1K,EAAwB,OAAhBm5B,EAAuBC,IAAMD,EACzC,MAAM9pB,EAASojB,GAASjP,EAAOmQ,QAAQ7gB,EAAMpI,MACzC+nB,GAASpjB,IACTojB,EAAMpjB,OAASA,EACfrP,EAAQwyB,GAAWC,EAAO0G,EAAaz7B,KAAKg2B,YAAY3xB,QAE5DqD,EAAMzX,IAAMF,KAAKE,IAAIyX,EAAMzX,IAAKqS,GAChCoF,EAAM1X,IAAMD,KAAKC,IAAI0X,EAAM1X,IAAKsS,EACpC,CACH,SAAAq5B,CAAUvmB,EAAOwmB,GACV,MAAMvvB,EAAOrM,KAAKg2B,YACZnpB,EAAUR,EAAKQ,QACf+tB,EAASvuB,EAAKK,SAAW0I,IAAU/I,EAAKM,OACxC1I,EAAO4I,EAAQ1O,OACf09B,EAAa77B,KAAKu5B,eAAenkB,GACjC2f,EAlQM,EAAC6G,EAAUvvB,EAAM0F,IAAQ6pB,IAAavvB,EAAKyvB,QAAUzvB,EAAK8rB,UAAY,CAClF94B,KAAMq1B,GAAwB3iB,GAAO,GACrCJ,OAAQ,MAgQMoqB,CAAYH,EAAUvvB,EAAMrM,KAAK+R,OACzCrK,EAAQ,CACVzX,IAAK4S,OAAOkE,kBACZ/W,IAAK6S,OAAOm5B,oBAER/rC,IAAKgsC,EAAWjsC,IAAKksC,GA9VrC,SAAuB9mB,GACnB,MAAM,IAAEnlB,EAAI,IAAED,EAAI,WAAEid,EAAW,WAAEC,GAAgBkI,EAAMjI,gBACvD,MAAO,CACHld,IAAKgd,EAAahd,EAAM4S,OAAOm5B,kBAC/BhsC,IAAKkd,EAAald,EAAM6S,OAAOkE,kBAEvC,CAwVmDoG,CAAc0uB,GACzD,IAAI7pC,EAAG8zB,EACP,SAASqW,IACLrW,EAASjZ,EAAQ7a,GACjB,MAAMkjC,EAAapP,EAAO+V,EAAW7uB,MACrC,OAAQpK,EAAekjB,EAAO1Q,EAAMpI,QAAUivB,EAAW/G,GAAcgH,EAAWhH,CACtF,CACA,IAAIljC,EAAI,EAAGA,EAAIiS,IACPk4B,MAGJn8B,KAAKw7B,sBAAsB9zB,EAAO0N,EAAO0Q,EAAQiP,IAC7C6F,MALe5oC,GASvB,GAAI4oC,EACA,IAAI5oC,EAAIiS,EAAO,EAAGjS,GAAK,IAAKA,EACxB,IAAImqC,IAAJ,CAGAn8B,KAAKw7B,sBAAsB9zB,EAAO0N,EAAO0Q,EAAQiP,GACjD,KAFA,CAKR,OAAOrtB,CACX,CACA,kBAAA00B,CAAmBhnB,GACf,MAAM0Q,EAAS9lB,KAAKg2B,YAAYnpB,QAC1B8E,EAAS,GACf,IAAI3f,EAAGiS,EAAM3B,EACb,IAAItQ,EAAI,EAAGiS,EAAO6hB,EAAO3nB,OAAQnM,EAAIiS,IAAQjS,EACzCsQ,EAAQwjB,EAAO9zB,GAAGojB,EAAMpI,MACpBpK,EAAeN,IACfqP,EAAO3L,KAAK1D,GAGpB,OAAOqP,CACX,CACH,cAAA0qB,GACO,OAAO,CACX,CACH,gBAAAC,CAAiBj4B,GACV,MAAMgI,EAAOrM,KAAKg2B,YACZrpB,EAASN,EAAKM,OACdC,EAASP,EAAKO,OACdkZ,EAAS9lB,KAAKs7B,UAAUj3B,GAC9B,MAAO,CACHk4B,MAAO5vB,EAAS,GAAKA,EAAO6vB,iBAAiB1W,EAAOnZ,EAAOK,OAAS,GACpE1K,MAAOsK,EAAS,GAAKA,EAAO4vB,iBAAiB1W,EAAOlZ,EAAOI,OAAS,GAE5E,CACH,OAAAmjB,CAAQxb,GACD,MAAMtI,EAAOrM,KAAKg2B,YAClBh2B,KAAK4yB,OAAOje,GAAQ,WACpBtI,EAAK8iB,MAleb,SAAgB7sB,GACZ,IAAIlB,EAAGlP,EAAGpB,EAAGjB,EASb,OARI8S,EAASL,IACTlB,EAAIkB,EAAMkV,IACVtlB,EAAIoQ,EAAMmV,MACV3mB,EAAIwR,EAAMoV,OACV7nB,EAAIyS,EAAMqV,MAEVvW,EAAIlP,EAAIpB,EAAIjB,EAAIyS,EAEb,CACHkV,IAAKpW,EACLqW,MAAOvlB,EACPwlB,OAAQ5mB,EACR6mB,KAAM9nB,EACNu/B,UAAoB,IAAV9sB,EAElB,CAidqBm6B,CAAOx5B,EAAejD,KAAK8E,QAAQkT,KA/exD,SAAqBtK,EAAQC,EAAQ8mB,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAM9hC,EAAI6hC,GAAU9mB,EAAQ+mB,GACtB/uB,EAAI8uB,GAAU7mB,EAAQ8mB,GAC5B,MAAO,CACHjd,IAAK9R,EAAEmE,IACP4N,MAAO9kB,EAAEkX,IACT6N,OAAQhS,EAAEkE,MACV+N,KAAMhlB,EAAEiX,MAEhB,CAme8D8yB,CAAYrwB,EAAKqB,OAAQrB,EAAKsB,OAAQ3N,KAAKq8B,mBACrG,CACH,MAAAzJ,CAAOje,GAAO,CACX,IAAA6b,GACI,MAAMlc,EAAMtU,KAAKwY,KACXzG,EAAQ/R,KAAK+R,MACb1F,EAAOrM,KAAKg2B,YACZliB,EAAWzH,EAAK0N,MAAQ,GACxBmD,EAAOnL,EAAMid,UACbhY,EAAS,GACTpN,EAAQ5J,KAAKy3B,YAAc,EAC3BhrB,EAAQzM,KAAK03B,YAAc5jB,EAAS3V,OAASyL,EAC7C2L,EAA0BvV,KAAK8E,QAAQyQ,wBAC7C,IAAIvjB,EAIJ,IAHIqa,EAAKU,SACLV,EAAKU,QAAQyjB,KAAKlc,EAAK4I,EAAMtT,EAAO6C,GAEpCza,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,IAASza,EAAE,CAClC,MAAMs3B,EAAUxV,EAAS9hB,GACrBs3B,EAAQwS,SAGRxS,EAAQtS,QAAUzB,EAClByB,EAAOhR,KAAKsjB,GAEZA,EAAQkH,KAAKlc,EAAK4I,GAE1B,CACA,IAAIlrB,EAAI,EAAGA,EAAIglB,EAAO7Y,SAAUnM,EAC5BglB,EAAOhlB,GAAGw+B,KAAKlc,EAAK4I,EAE5B,CACH,QAAA6O,CAAS1nB,EAAO2S,GACT,MAAMrC,EAAOqC,EAAS,SAAW,UACjC,YAAiB1W,IAAV+D,GAAuBrE,KAAKg2B,YAAYjpB,QAAU/M,KAAK28B,6BAA6BhoB,GAAQ3U,KAAK48B,0BAA0Bv4B,GAAS,EAAGsQ,EAClJ,CACH,UAAA0G,CAAWhX,EAAO2S,EAAQrC,GACnB,MAAM5H,EAAU/M,KAAKu4B,aACrB,IAAI5kB,EACJ,GAAItP,GAAS,GAAKA,EAAQrE,KAAKg2B,YAAYjc,KAAK5b,OAAQ,CACpD,MAAMmrB,EAAUtpB,KAAKg2B,YAAYjc,KAAK1V,GACtCsP,EAAU2V,EAAQuO,WAAavO,EAAQuO,SAvYnD,SAA2BzS,EAAQ/gB,EAAOilB,GACtC,OAAO7H,GAAc2D,EAAQ,CACzBpO,QAAQ,EACR6lB,UAAWx4B,EACXyhB,YAAQxlB,EACRw8B,SAAKx8B,EACLgpB,UACAjlB,QACAsQ,KAAM,UACN1V,KAAM,QAEd,CA4X8D89B,CAAkB/8B,KAAKqb,aAAchX,EAAOilB,IAC9F3V,EAAQmS,OAAS9lB,KAAKs7B,UAAUj3B,GAChCsP,EAAQmpB,IAAM/vB,EAAQgN,KAAK1V,GAC3BsP,EAAQtP,MAAQsP,EAAQkpB,UAAYx4B,CACxC,MACIsP,EAAU3T,KAAK63B,WAAa73B,KAAK63B,SAtZ7C,SAA8BzS,EAAQ/gB,GAClC,OAAOod,GAAc2D,EAAQ,CACzBpO,QAAQ,EACRjK,aAASzM,EACT8D,aAAcC,EACdA,QACAsQ,KAAM,UACN1V,KAAM,WAEd,CA6YwD+9B,CAAqBh9B,KAAK+R,MAAMsJ,aAAcrb,KAAKqE,QAC/FsP,EAAQ5G,QAAUA,EAClB4G,EAAQtP,MAAQsP,EAAQvP,aAAepE,KAAKqE,MAIhD,OAFAsP,EAAQqD,SAAWA,EACnBrD,EAAQgB,KAAOA,EACRhB,CACX,CACH,4BAAAgpB,CAA6BhoB,GACtB,OAAO3U,KAAKi9B,uBAAuBj9B,KAAK+3B,mBAAmB31B,GAAIuS,EACnE,CACH,yBAAAioB,CAA0Bv4B,EAAOsQ,GAC1B,OAAO3U,KAAKi9B,uBAAuBj9B,KAAKg4B,gBAAgB51B,GAAIuS,EAAMtQ,EACtE,CACH,sBAAA44B,CAAuBC,EAAavoB,EAAO,UAAWtQ,GAC/C,MAAM2S,EAAkB,WAATrC,EACT4F,EAAQva,KAAKm3B,gBACblmB,EAAWisB,EAAc,IAAMvoB,EAC/BoiB,EAASxc,EAAMtJ,GACfksB,EAAUn9B,KAAK23B,qBAAuBtxB,GAAQhC,GACpD,GAAI0yB,EACA,OAAOD,GAAiBC,EAAQoG,GAEpC,MAAM7J,EAAStzB,KAAK+R,MAAMuhB,OACpBkH,EAAYlH,EAAO8J,wBAAwBp9B,KAAKq3B,MAAO6F,GACvDrb,EAAW7K,EAAS,CACtB,GAAGkmB,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEEtb,EAAS0R,EAAOoH,gBAAgB16B,KAAKu4B,aAAciC,GACnDn9B,EAAQU,OAAOsB,KAAKiX,GAASxC,SAASopB,IAEtCvrB,EAAS2hB,EAAO+J,oBAAoBzb,EAAQvkB,EADlC,IAAI2C,KAAKqb,WAAWhX,EAAO2S,EAAQrC,GACekN,GAKlE,OAJIlQ,EAAOqiB,UACPriB,EAAOqiB,QAAUmJ,EACjB5iB,EAAMtJ,GAAYlT,OAAOu/B,OAAOxG,GAAiBnlB,EAAQwrB,KAEtDxrB,CACX,CACH,kBAAA4rB,CAAmBl5B,EAAOm5B,EAAYxmB,GAC/B,MAAMjF,EAAQ/R,KAAK+R,MACbwI,EAAQva,KAAKm3B,gBACblmB,EAAW,aAAausB,IACxBzG,EAASxc,EAAMtJ,GACrB,GAAI8lB,EACA,OAAOA,EAEX,IAAIjyB,EACJ,IAAgC,IAA5BiN,EAAMjN,QAAQwO,UAAqB,CACnC,MAAMggB,EAAStzB,KAAK+R,MAAMuhB,OACpBkH,EAAYlH,EAAOmK,0BAA0Bz9B,KAAKq3B,MAAOmG,GACzD5b,EAAS0R,EAAOoH,gBAAgB16B,KAAKu4B,aAAciC,GACzD11B,EAAUwuB,EAAOqH,eAAe/Y,EAAQ5hB,KAAKqb,WAAWhX,EAAO2S,EAAQwmB,GAC3E,CACA,MAAMrmB,EAAa,IAAIkc,GAAWthB,EAAOjN,GAAWA,EAAQqS,YAI5D,OAHIrS,GAAWA,EAAQqd,aACnB5H,EAAMtJ,GAAYlT,OAAOu/B,OAAOnmB,IAE7BA,CACX,CACH,gBAAAumB,CAAiB54B,GACV,GAAKA,EAAQkvB,QAGb,OAAOh0B,KAAKw3B,iBAAmBx3B,KAAKw3B,eAAiBz5B,OAAOC,OAAO,CAAC,EAAG8G,GAC3E,CACH,cAAA64B,CAAehpB,EAAMipB,GACd,OAAQA,GAAiB/G,GAAmBliB,IAAS3U,KAAK+R,MAAM8rB,mBACpE,CACH,iBAAAC,CAAkBl0B,EAAO+K,GAClB,MAAMopB,EAAY/9B,KAAK48B,0BAA0BhzB,EAAO+K,GAClDqpB,EAA0Bh+B,KAAKw3B,eAC/BoG,EAAgB59B,KAAK09B,iBAAiBK,GACtCJ,EAAiB39B,KAAK29B,eAAehpB,EAAMipB,IAAkBA,IAAkBI,EAErF,OADAh+B,KAAKi+B,oBAAoBL,EAAejpB,EAAMopB,GACvC,CACHH,gBACAD,iBAER,CACH,aAAAO,CAAc5U,EAASjlB,EAAO0S,EAAYpC,GAC/BkiB,GAAmBliB,GACnB5W,OAAOC,OAAOsrB,EAASvS,GAEvB/W,KAAKu9B,mBAAmBl5B,EAAOsQ,GAAMie,OAAOtJ,EAASvS,EAE7D,CACH,mBAAAknB,CAAoBL,EAAejpB,EAAMof,GAC9B6J,IAAkB/G,GAAmBliB,IACrC3U,KAAKu9B,wBAAmBj9B,EAAWqU,GAAMie,OAAOgL,EAAe7J,EAEvE,CACH,SAAAoK,CAAU7U,EAASjlB,EAAOsQ,EAAMqC,GACzBsS,EAAQtS,OAASA,EACjB,MAAMlS,EAAU9E,KAAK+rB,SAAS1nB,EAAO2S,GACrChX,KAAKu9B,mBAAmBl5B,EAAOsQ,EAAMqC,GAAQ4b,OAAOtJ,EAAS,CACzDxkB,SAAUkS,GAAUhX,KAAK09B,iBAAiB54B,IAAYA,GAE9D,CACA,gBAAAs5B,CAAiB9U,EAASllB,EAAcC,GACpCrE,KAAKm+B,UAAU7U,EAASjlB,EAAO,UAAU,EAC7C,CACA,aAAAg6B,CAAc/U,EAASllB,EAAcC,GACjCrE,KAAKm+B,UAAU7U,EAASjlB,EAAO,UAAU,EAC7C,CACH,wBAAAi6B,GACO,MAAMhV,EAAUtpB,KAAKg2B,YAAYjpB,QAC7Buc,GACAtpB,KAAKm+B,UAAU7U,OAAShpB,EAAW,UAAU,EAErD,CACH,qBAAAi+B,GACO,MAAMjV,EAAUtpB,KAAKg2B,YAAYjpB,QAC7Buc,GACAtpB,KAAKm+B,UAAU7U,OAAShpB,EAAW,UAAU,EAErD,CACH,eAAAi6B,CAAgBH,GACT,MAAMrgB,EAAO/Z,KAAKs3B,MACZxjB,EAAW9T,KAAKg2B,YAAYjc,KAClC,IAAK,MAAOqZ,EAAQoL,EAAMC,KAASz+B,KAAK83B,UACpC93B,KAAKozB,GAAQoL,EAAMC,GAEvBz+B,KAAK83B,UAAY,GACjB,MAAM4G,EAAU5qB,EAAS3V,OACnBwgC,EAAU5kB,EAAK5b,OACfsO,EAAQ1c,KAAKE,IAAI0uC,EAASD,GAC5BjyB,GACAzM,KAAK+lB,MAAM,EAAGtZ,GAEdkyB,EAAUD,EACV1+B,KAAK4+B,gBAAgBF,EAASC,EAAUD,EAAStE,GAC1CuE,EAAUD,GACjB1+B,KAAK6+B,gBAAgBF,EAASD,EAAUC,EAEhD,CACH,eAAAC,CAAgBh1B,EAAO6C,EAAO2tB,GAAmB,GAC1C,MAAM/tB,EAAOrM,KAAKg2B,YACZjc,EAAO1N,EAAK0N,KACZlQ,EAAMD,EAAQ6C,EACpB,IAAIza,EACJ,MAAM8sC,EAAQra,IAEV,IADAA,EAAItmB,QAAUsO,EACVza,EAAIyyB,EAAItmB,OAAS,EAAGnM,GAAK6X,EAAK7X,IAC9ByyB,EAAIzyB,GAAKyyB,EAAIzyB,EAAIya,IAIzB,IADAqyB,EAAK/kB,GACD/nB,EAAI4X,EAAO5X,EAAI6X,IAAO7X,EACtB+nB,EAAK/nB,GAAK,IAAIgO,KAAKg4B,gBAEnBh4B,KAAK6lB,UACLiZ,EAAKzyB,EAAKQ,SAEd7M,KAAK+lB,MAAMnc,EAAO6C,GACd2tB,GACAp6B,KAAK++B,eAAehlB,EAAMnQ,EAAO6C,EAAO,QAEhD,CACA,cAAAsyB,CAAezV,EAAS1f,EAAO6C,EAAOkI,GAAO,CAChD,eAAAkqB,CAAgBj1B,EAAO6C,GAChB,MAAMJ,EAAOrM,KAAKg2B,YAClB,GAAIh2B,KAAK6lB,SAAU,CACf,MAAMmZ,EAAU3yB,EAAKQ,QAAQxB,OAAOzB,EAAO6C,GACvCJ,EAAK8rB,UACLvB,GAAYvqB,EAAM2yB,EAE1B,CACA3yB,EAAK0N,KAAK1O,OAAOzB,EAAO6C,EAC5B,CACH,KAAAwyB,CAAMz7B,GACC,GAAIxD,KAAK6lB,SACL7lB,KAAK83B,UAAU9xB,KAAKxC,OACjB,CACH,MAAO4vB,EAAQoL,EAAMC,GAAQj7B,EAC7BxD,KAAKozB,GAAQoL,EAAMC,EACvB,CACAz+B,KAAK+R,MAAMmtB,aAAal5B,KAAK,CACzBhG,KAAKqE,SACFb,GAEX,CACA,WAAA27B,GACI,MAAM1yB,EAAQ2yB,UAAUjhC,OACxB6B,KAAKi/B,MAAM,CACP,kBACAj/B,KAAKu4B,aAAaxe,KAAK5b,OAASsO,EAChCA,GAER,CACA,UAAA4yB,GACIr/B,KAAKi/B,MAAM,CACP,kBACAj/B,KAAKg2B,YAAYjc,KAAK5b,OAAS,EAC/B,GAER,CACA,YAAAmhC,GACIt/B,KAAKi/B,MAAM,CACP,kBACA,EACA,GAER,CACA,aAAAM,CAAc31B,EAAO6C,GACbA,GACAzM,KAAKi/B,MAAM,CACP,kBACAr1B,EACA6C,IAGR,MAAM+yB,EAAWJ,UAAUjhC,OAAS,EAChCqhC,GACAx/B,KAAKi/B,MAAM,CACP,kBACAr1B,EACA41B,GAGZ,CACA,cAAAC,GACIz/B,KAAKi/B,MAAM,CACP,kBACA,EACAG,UAAUjhC,QAElB,EAcH,SAASuhC,GAAqBrzB,GAC3B,MAAM+I,EAAQ/I,EAAKM,OACbgF,EAbV,SAA2ByD,EAAOnW,GAC9B,IAAKmW,EAAMuqB,OAAOC,KAAM,CACpB,MAAMC,EAAezqB,EAAMygB,wBAAwB52B,GACnD,IAAI0S,EAAS,GACb,IAAI,IAAI3f,EAAI,EAAGiS,EAAO47B,EAAa1hC,OAAQnM,EAAIiS,EAAMjS,IACjD2f,EAASA,EAAOmuB,OAAOD,EAAa7tC,GAAG+jC,WAAWqG,mBAAmBhnB,IAEzEA,EAAMuqB,OAAOC,KAAOr0B,GAAaoG,EAAOouB,KAAK,CAAClvC,EAAGC,IAAID,EAAIC,GAC7D,CACA,OAAOskB,EAAMuqB,OAAOC,IACxB,CAGmBI,CAAkB5qB,EAAO/I,EAAKpN,MAC7C,IACIjN,EAAGiS,EAAMg8B,EAAM5X,EADfp4B,EAAMmlB,EAAM8qB,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,IAGlB55B,GAAQgiB,KACRp4B,EAAMF,KAAKE,IAAIA,EAAKF,KAAKyX,IAAIy4B,EAAO5X,IAASp4B,IAEjDo4B,EAAO4X,IAEX,IAAIjuC,EAAI,EAAGiS,EAAO0N,EAAOxT,OAAQnM,EAAIiS,IAAQjS,EACzCiuC,EAAO7qB,EAAMhI,iBAAiBuE,EAAO3f,IACrCmuC,IAGJ,IADA9X,OAAO/nB,EACHtO,EAAI,EAAGiS,EAAOmR,EAAMtD,MAAM3T,OAAQnM,EAAIiS,IAAQjS,EAC9CiuC,EAAO7qB,EAAMgrB,gBAAgBpuC,GAC7BmuC,IAEJ,OAAOlwC,CACX,CA0DA,SAASowC,GAAWC,EAAO75B,EAAMmG,EAAQ5a,GAMrC,OALIO,EAAQ+tC,GAtBhB,SAAuBA,EAAO75B,EAAMmG,EAAQ5a,GACxC,MAAMuuC,EAAa3zB,EAAOmZ,MAAMua,EAAM,GAAItuC,GACpCwuC,EAAW5zB,EAAOmZ,MAAMua,EAAM,GAAItuC,GAClC/B,EAAMF,KAAKE,IAAIswC,EAAYC,GAC3BxwC,EAAMD,KAAKC,IAAIuwC,EAAYC,GACjC,IAAIC,EAAWxwC,EACXywC,EAAS1wC,EACTD,KAAKyX,IAAIvX,GAAOF,KAAKyX,IAAIxX,KACzBywC,EAAWzwC,EACX0wC,EAASzwC,GAEbwW,EAAKmG,EAAOI,MAAQ0zB,EACpBj6B,EAAKk6B,QAAU,CACXF,WACAC,SACA92B,MAAO22B,EACP12B,IAAK22B,EACLvwC,MACAD,MAER,CAGQ4wC,CAAcN,EAAO75B,EAAMmG,EAAQ5a,GAEnCyU,EAAKmG,EAAOI,MAAQJ,EAAOmZ,MAAMua,EAAOtuC,GAErCyU,CACX,CACA,SAASo6B,GAAsBx0B,EAAM0N,EAAMnQ,EAAO6C,GAC9C,MAAME,EAASN,EAAKM,OACdC,EAASP,EAAKO,OACdquB,EAAStuB,EAAOuuB,YAChBC,EAAcxuB,IAAWC,EACzBkZ,EAAS,GACf,IAAI9zB,EAAGiS,EAAMwC,EAAM65B,EACnB,IAAItuC,EAAI4X,EAAO3F,EAAO2F,EAAQ6C,EAAOza,EAAIiS,IAAQjS,EAC7CsuC,EAAQvmB,EAAK/nB,GACbyU,EAAO,CAAC,EACRA,EAAKkG,EAAOK,MAAQmuB,GAAexuB,EAAOoZ,MAAMkV,EAAOjpC,GAAIA,GAC3D8zB,EAAO9f,KAAKq6B,GAAWC,EAAO75B,EAAMmG,EAAQ5a,IAEhD,OAAO8zB,CACX,CACA,SAASgb,GAAWC,GAChB,OAAOA,QAA8BzgC,IAApBygC,EAAON,eAA4CngC,IAAlBygC,EAAOL,MAC7D,CAiCA,SAASM,GAAiBjqB,EAAYjS,EAASiwB,EAAO1wB,GAClD,IAAI48B,EAAOn8B,EAAQo8B,cACnB,MAAMjO,EAAM,CAAC,EACb,IAAKgO,EAED,YADAlqB,EAAWmqB,cAAgBjO,GAG/B,IAAa,IAATgO,EAOA,YANAlqB,EAAWmqB,cAAgB,CACvB1pB,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,IAId,MAAM,MAAE/N,EAAM,IAAEC,EAAI,QAAEhG,EAAQ,IAAE2T,EAAI,OAAEE,GA1C1C,SAAqBX,GACjB,IAAIlT,EAAS+F,EAAOC,EAAK2N,EAAKE,EAiB9B,OAhBIX,EAAWoqB,YACXt9B,EAAUkT,EAAWkjB,KAAOljB,EAAWpkB,EACvCiX,EAAQ,OACRC,EAAM,UAENhG,EAAUkT,EAAWkjB,KAAOljB,EAAWrR,EACvCkE,EAAQ,SACRC,EAAM,OAENhG,GACA2T,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEN,CACH9N,QACAC,MACAhG,UACA2T,MACAE,SAER,CAiBsD0pB,CAAYrqB,GACjD,WAATkqB,GAAqBlM,IACrBhe,EAAWsqB,oBAAqB,GAC3BtM,EAAMwB,MAAQ,KAAOlyB,EACtB48B,EAAOzpB,GACCud,EAAMyB,SAAW,KAAOnyB,EAChC48B,EAAOvpB,GAEPub,EAAIqO,GAAU5pB,EAAQ9N,EAAOC,EAAKhG,KAAY,EAC9Co9B,EAAOzpB,IAGfyb,EAAIqO,GAAUL,EAAMr3B,EAAOC,EAAKhG,KAAY,EAC5CkT,EAAWmqB,cAAgBjO,CAC/B,CACA,SAASqO,GAAUL,EAAMpwC,EAAGC,EAAG+S,GAS/B,IAAc09B,EAAMp9B,EAAIq9B,EAFpB,OANI39B,GAQgB29B,EAPK1wC,EACrBmwC,EAAOQ,GADPR,GAOMM,EAPMN,MAOA98B,EAPMtT,GAQD2wC,EAAKD,IAASC,EAAKr9B,EAAKo9B,EAPnBzwC,EAAGD,IAEzBowC,EAAOQ,GAASR,EAAMpwC,EAAGC,GAEtBmwC,CACX,CAIA,SAASQ,GAAS9xC,EAAGia,EAAOC,GACxB,MAAa,UAANla,EAAgBia,EAAc,QAANja,EAAcka,EAAMla,CACvD,CACA,SAAS+xC,GAAiB3qB,GAAY,cAAE4qB,GAAkBhkC,GACtDoZ,EAAW4qB,cAAkC,SAAlBA,EAAqC,IAAVhkC,EAAc,IAAO,EAAIgkC,CACnF,CACA,MAAMC,WAAsB3K,GACxBC,UAAY,MACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjB6J,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACT5qB,WAAY,CACRzG,QAAS,CACLzR,KAAM,SACN8X,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnBmgB,iBAAmB,CACZ7hB,OAAQ,CACJ2sB,QAAS,CACL/iC,KAAM,WACN4Y,QAAQ,EACRK,KAAM,CACFL,QAAQ,IAGhBoqB,QAAS,CACLhjC,KAAM,SACN6Y,aAAa,KAI5B,kBAAAijB,CAAmB1uB,EAAM0N,EAAMnQ,EAAO6C,GAC/B,OAAOo0B,GAAsBx0B,EAAM0N,EAAMnQ,EAAO6C,EACpD,CACH,cAAAouB,CAAexuB,EAAM0N,EAAMnQ,EAAO6C,GAC3B,OAAOo0B,GAAsBx0B,EAAM0N,EAAMnQ,EAAO6C,EACpD,CACH,eAAAquB,CAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAC5B,MAAM,OAAEE,EAAO,OAAEC,GAAYP,GACvB,SAAE+uB,EAAU,IAAI,SAAEC,EAAU,KAASr7B,KAAK6lB,SAC1C8T,EAA2B,MAAhBhtB,EAAOK,KAAeouB,EAAWC,EAC5CzB,EAA2B,MAAhBhtB,EAAOI,KAAeouB,EAAWC,EAC5CvV,EAAS,GACf,IAAI9zB,EAAGiS,EAAMwC,EAAMrG,EACnB,IAAIpO,EAAI4X,EAAO3F,EAAO2F,EAAQ6C,EAAOza,EAAIiS,IAAQjS,EAC7CoO,EAAM2Z,EAAK/nB,GACXyU,EAAO,CAAC,EACRA,EAAKkG,EAAOK,MAAQL,EAAOoZ,MAAMpgB,EAAiBvF,EAAKu5B,GAAW3nC,GAClE8zB,EAAO9f,KAAKq6B,GAAW16B,EAAiBvF,EAAKw5B,GAAWnzB,EAAMmG,EAAQ5a,IAE1E,OAAO8zB,CACX,CACH,qBAAA0V,CAAsB9zB,EAAO0N,EAAO0Q,EAAQiP,GACrCmN,MAAM1G,sBAAsB9zB,EAAO0N,EAAO0Q,EAAQiP,GAClD,MAAMgM,EAASjb,EAAO6a,QAClBI,GAAU3rB,IAAUpV,KAAKg2B,YAAYppB,SACrClF,EAAMzX,IAAMF,KAAKE,IAAIyX,EAAMzX,IAAK8wC,EAAO9wC,KACvCyX,EAAM1X,IAAMD,KAAKC,IAAI0X,EAAM1X,IAAK+wC,EAAO/wC,KAE/C,CACH,cAAAqsC,GACO,OAAO,CACX,CACH,gBAAAC,CAAiBj4B,GACV,MAAMgI,EAAOrM,KAAKg2B,aACZ,OAAErpB,EAAO,OAAEC,GAAYP,EACvByZ,EAAS9lB,KAAKs7B,UAAUj3B,GACxB08B,EAASjb,EAAO6a,QAChBr+B,EAAQw+B,GAAWC,GAAU,IAAMA,EAAOn3B,MAAQ,KAAOm3B,EAAOl3B,IAAM,IAAM,GAAK+C,EAAO4vB,iBAAiB1W,EAAOlZ,EAAOI,OAC7H,MAAO,CACHuvB,MAAO,GAAK5vB,EAAO6vB,iBAAiB1W,EAAOnZ,EAAOK,OAClD1K,QAER,CACA,UAAA21B,GACIj4B,KAAK23B,qBAAsB,EAC3BuK,MAAMjK,aACOj4B,KAAKg2B,YACbjB,MAAQ/0B,KAAKu4B,aAAaxD,KACnC,CACA,MAAAnC,CAAOje,GACH,MAAMtI,EAAOrM,KAAKg2B,YAClBh2B,KAAK++B,eAAe1yB,EAAK0N,KAAM,EAAG1N,EAAK0N,KAAK5b,OAAQwW,EACxD,CACA,cAAAoqB,CAAeoD,EAAMv4B,EAAO6C,EAAOkI,GAC/B,MAAM6kB,EAAiB,UAAT7kB,GACR,MAAEtQ,EAAQ2xB,aAAa,OAAEppB,IAAe5M,KACxCi6B,EAAOrtB,EAAOw1B,eACdjB,EAAav0B,EAAOy1B,eACpBC,EAAQtiC,KAAKuiC,aACb,cAAE3E,EAAc,eAAED,GAAoB39B,KAAK89B,kBAAkBl0B,EAAO+K,GAC1E,IAAI,IAAI3iB,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,EAAOza,IAAI,CACtC,MAAM8zB,EAAS9lB,KAAKs7B,UAAUtpC,GACxBwwC,EAAUhJ,GAASn3B,EAAcyjB,EAAOlZ,EAAOI,OAAS,CAC1DitB,OACAwI,KAAMxI,GACNj6B,KAAK0iC,yBAAyB1wC,GAC5B2wC,EAAU3iC,KAAK4iC,yBAAyB5wC,EAAGswC,GAC3CvN,GAASjP,EAAOmQ,SAAW,CAAC,GAAGrpB,EAAOI,MACtC+J,EAAa,CACfoqB,aACAlH,KAAMuI,EAAQvI,KACdoH,oBAAqBtM,GAAS+L,GAAWhb,EAAO6a,UAAYt8B,IAAU0wB,EAAMwB,MAAQlyB,IAAU0wB,EAAMyB,QACpG7jC,EAAGwuC,EAAaqB,EAAQC,KAAOE,EAAQE,OACvCn9B,EAAGy7B,EAAawB,EAAQE,OAASL,EAAQC,KACzCjnB,OAAQ2lB,EAAawB,EAAQn8B,KAAOzW,KAAKyX,IAAIg7B,EAAQh8B,MACrDqS,MAAOsoB,EAAapxC,KAAKyX,IAAIg7B,EAAQh8B,MAAQm8B,EAAQn8B,MAErDm3B,IACA5mB,EAAWjS,QAAU84B,GAAiB59B,KAAK48B,0BAA0B5qC,EAAGmwC,EAAKnwC,GAAGglB,OAAS,SAAWrC,IAExG,MAAM7P,EAAUiS,EAAWjS,SAAWq9B,EAAKnwC,GAAG8S,QAC9Ck8B,GAAiBjqB,EAAYjS,EAASiwB,EAAO1wB,GAC7Cq9B,GAAiB3qB,EAAYjS,EAASw9B,EAAM3kC,OAC5CqC,KAAKk+B,cAAciE,EAAKnwC,GAAIA,EAAG+kB,EAAYpC,EAC/C,CACJ,CACH,UAAAmuB,CAAWl4B,EAAMiyB,GACV,MAAM,OAAElwB,GAAY3M,KAAKg2B,YACnBpB,EAAWjoB,EAAOkpB,wBAAwB71B,KAAKq3B,OAAO3S,OAAQrY,GAAOA,EAAK0pB,WAAWjxB,QAAQi9B,SAC7F1M,EAAU1oB,EAAO7H,QAAQuwB,QACzBE,EAAS,GACTwN,EAAgB/iC,KAAKg2B,YAAYD,WAAWuF,UAAUuB,GACtDmG,EAAcD,GAAiBA,EAAcp2B,EAAOK,MACpDi2B,EAAY52B,IACd,MAAMyZ,EAASzZ,EAAKQ,QAAQq2B,KAAMz8B,GAAOA,EAAKkG,EAAOK,QAAUg2B,GACzDvhC,EAAMqkB,GAAUA,EAAOzZ,EAAKO,OAAOI,MACzC,GAAI3K,EAAcZ,IAAQ0G,MAAM1G,GAC5B,OAAO,GAGf,IAAK,MAAM4K,KAAQuoB,EACf,SAAkBt0B,IAAdu8B,IAA2BoG,EAAS52B,QAGxB,IAAZgpB,IAAqD,IAAhCE,EAAO3wB,QAAQyH,EAAK0oB,aAA6Bz0B,IAAZ+0B,QAAwC/0B,IAAf+L,EAAK0oB,QACxFQ,EAAOvvB,KAAKqG,EAAK0oB,OAEjB1oB,EAAKhI,QAAUuG,GACf,MAMR,OAHK2qB,EAAOp3B,QACRo3B,EAAOvvB,UAAK1F,GAETi1B,CACX,CACH,cAAA4N,CAAe9+B,GACR,OAAOrE,KAAK8iC,gBAAWxiC,EAAW+D,GAAOlG,MAC7C,CACA,aAAAilC,GACI,OAAOpjC,KAAKqjC,WAAWllC,MAC3B,CACA,2BAAAmlC,GACI,MAAMjuB,EAASrV,KAAK+R,MAAMsD,OACpBkuB,EAAevjC,KAAK+R,MAAMjN,QAAQ2P,UACxC,OAAO1W,OAAOsB,KAAKgW,GAAQqP,OAAQ/f,GAAM0Q,EAAO1Q,GAAKqI,OAASu2B,GAAc5M,OAChF,CACA,QAAA0M,GACI,MAAMr2B,EAAO,CAAC,EACRw2B,EAAmBxjC,KAAKsjC,8BAC9B,IAAK,MAAMv2B,KAAW/M,KAAK+R,MAAMgI,KAAKtG,SAClCzG,EAAK/J,EAAgD,MAAjCjD,KAAK+R,MAAMjN,QAAQ2P,UAAoB1H,EAAQ2rB,QAAU3rB,EAAQ6rB,QAAS4K,KAAqB,EAEvH,OAAOzlC,OAAOsB,KAAK2N,EACvB,CACH,cAAAy2B,CAAer/B,EAAcuR,EAAMknB,GAC5B,MAAMtH,EAASv1B,KAAK8iC,WAAW1+B,EAAcy4B,GACvCx4B,OAAiB/D,IAATqV,EAAqB4f,EAAO3wB,QAAQ+Q,IAAS,EAC3D,OAAkB,IAAXtR,EAAekxB,EAAOp3B,OAAS,EAAIkG,CAC9C,CACH,SAAAk+B,GACO,MAAMrkB,EAAOle,KAAK8E,QACZuH,EAAOrM,KAAKg2B,YACZrpB,EAASN,EAAKM,OACd+2B,EAAS,GACf,IAAI1xC,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAOoI,EAAK0N,KAAK5b,OAAQnM,EAAIiS,IAAQjS,EAC5C0xC,EAAO19B,KAAK2G,EAAOS,iBAAiBpN,KAAKs7B,UAAUtpC,GAAG2a,EAAOK,MAAOhb,IAExE,MAAM2xC,EAAezlB,EAAKylB,aAE1B,MAAO,CACH1zC,IAFQ0zC,GAAgBjE,GAAqBrzB,GAG7Cq3B,SACA95B,MAAO+C,EAAOi3B,YACd/5B,IAAK8C,EAAOk3B,UACZC,WAAY9jC,KAAKmjC,iBACjB/tB,MAAOzI,EACPo1B,QAAS7jB,EAAK6jB,QACdpkC,MAAOgmC,EAAe,EAAIzlB,EAAK2jB,mBAAqB3jB,EAAK4jB,cAEjE,CACH,wBAAAY,CAAyBr+B,GAClB,MAAQ2xB,aAAa,OAAEppB,EAAO,SAAEurB,EAAW9zB,MAAOD,GAAkBU,SAAWm1B,KAAM8J,EAAU,aAAEC,IAAqBhkC,KAChHikC,EAAaF,GAAa,EAC1Bje,EAAS9lB,KAAKs7B,UAAUj3B,GACxB08B,EAASjb,EAAO6a,QAChBuD,EAAWpD,GAAWC,GAC5B,IAGI0B,EAAMj8B,EAHNlE,EAAQwjB,EAAOlZ,EAAOI,MACtBpD,EAAQ,EACRzL,EAASg6B,EAAWn4B,KAAK80B,WAAWloB,EAAQkZ,EAAQqS,GAAY71B,EAEhEnE,IAAWmE,IACXsH,EAAQzL,EAASmE,EACjBnE,EAASmE,GAET4hC,IACA5hC,EAAQy+B,EAAON,SACftiC,EAAS4iC,EAAOL,OAASK,EAAON,SAClB,IAAVn+B,GAAe+E,GAAK/E,KAAW+E,GAAK05B,EAAOL,UAC3C92B,EAAQ,GAEZA,GAAStH,GAEb,MAAMi+B,EAAcl+B,EAAc0hC,IAAeG,EAAuBt6B,EAAZm6B,EAC5D,IAAI9J,EAAOrtB,EAAOQ,iBAAiBmzB,GAOnC,GALIkC,EADAziC,KAAK+R,MAAMoyB,kBAAkB9/B,GACtBuI,EAAOQ,iBAAiBxD,EAAQzL,GAEhC87B,EAEXzzB,EAAOi8B,EAAOxI,EACVlqC,KAAKyX,IAAIhB,GAAQw9B,EAAc,CAC/Bx9B,EAtTZ,SAAiBA,EAAMoG,EAAQq3B,GAC3B,OAAa,IAATz9B,EACOa,GAAKb,IAERoG,EAAOy1B,eAAiB,GAAK,IAAMz1B,EAAO3c,KAAOg0C,EAAa,GAAK,EAC/E,CAiTmBG,CAAQ59B,EAAMoG,EAAQq3B,GAAcD,EACvC1hC,IAAU2hC,IACVhK,GAAQzzB,EAAO,GAEnB,MAAM69B,EAAaz3B,EAAO03B,mBAAmB,GACvCC,EAAW33B,EAAO03B,mBAAmB,GACrCr0C,EAAMF,KAAKE,IAAIo0C,EAAYE,GAC3Bv0C,EAAMD,KAAKC,IAAIq0C,EAAYE,GACjCtK,EAAOlqC,KAAKC,IAAID,KAAKE,IAAIgqC,EAAMjqC,GAAMC,GACrCwyC,EAAOxI,EAAOzzB,EACV2xB,IAAa+L,IACbpe,EAAOmQ,QAAQrpB,EAAOI,MAAMypB,cAAcryB,GAAgBwI,EAAO43B,iBAAiB/B,GAAQ71B,EAAO43B,iBAAiBvK,GAE1H,CACA,GAAIA,IAASrtB,EAAOQ,iBAAiB62B,GAAa,CAC9C,MAAMQ,EAAWp9B,GAAKb,GAAQoG,EAAO83B,qBAAqBT,GAAc,EACxEhK,GAAQwK,EACRj+B,GAAQi+B,CACZ,CACA,MAAO,CACHj+B,OACAyzB,OACAwI,OACAI,OAAQJ,EAAOj8B,EAAO,EAE9B,CACH,wBAAAo8B,CAAyBv+B,EAAOi+B,GACzB,MAAMltB,EAAQktB,EAAMltB,MACdtQ,EAAU9E,KAAK8E,QACfm+B,EAAWn+B,EAAQm+B,SACnB0B,EAAkB1hC,EAAe6B,EAAQ6/B,gBAAiBC,KAChE,IAAI/B,EAAQr8B,EACZ,MAAMq+B,EAAY7kC,KAAKojC,gBACvB,GAAId,EAAMP,QAAS,CACf,MAAM+B,EAAab,EAAWjjC,KAAKmjC,eAAe9+B,GAASi+B,EAAMwB,WAC3Dp8B,EAAiC,SAAzB5C,EAAQ6+B,aA5ZjC,SAAmCt/B,EAAOi+B,EAAOx9B,EAASg/B,GACvD,MAAMJ,EAASpB,EAAMoB,OACfzD,EAAOyD,EAAOr/B,GACpB,IAAIgkB,EAAOhkB,EAAQ,EAAIq/B,EAAOr/B,EAAQ,GAAK,KACvCmiB,EAAOniB,EAAQq/B,EAAOvlC,OAAS,EAAIulC,EAAOr/B,EAAQ,GAAK,KAC3D,MAAMygC,EAAUhgC,EAAQ+8B,mBACX,OAATxZ,IACAA,EAAO4X,GAAiB,OAATzZ,EAAgB8b,EAAMz4B,IAAMy4B,EAAM14B,MAAQ4c,EAAOyZ,IAEvD,OAATzZ,IACAA,EAAOyZ,EAAOA,EAAO5X,GAEzB,MAAMze,EAAQq2B,GAAQA,EAAOlwC,KAAKE,IAAIo4B,EAAM7B,IAAS,EAAIse,EAEzD,MAAO,CACHC,MAFSh1C,KAAKyX,IAAIgf,EAAO6B,GAAQ,EAAIyc,EAEvBhB,EACdnmC,MAAOmH,EAAQg9B,cACfl4B,QAER,CAyY4Do7B,CAA0B3gC,EAAOi+B,EAAOx9B,EAASg/B,EAAae,GA5azH,SAAkCxgC,EAAOi+B,EAAOx9B,EAASg/B,GACtD,MAAMmB,EAAYngC,EAAQ6+B,aAC1B,IAAIn9B,EAAM7I,EAQV,OAPI0E,EAAc4iC,IACdz+B,EAAO87B,EAAMryC,IAAM6U,EAAQ+8B,mBAC3BlkC,EAAQmH,EAAQg9B,gBAEhBt7B,EAAOy+B,EAAYnB,EACnBnmC,EAAQ,GAEL,CACHonC,MAAOv+B,EAAOs9B,EACdnmC,QACAiM,MAAO04B,EAAMoB,OAAOr/B,GAASmC,EAAO,EAE5C,CA6ZuI0+B,CAAyB7gC,EAAOi+B,EAAOx9B,EAASg/B,EAAae,GAClLM,EAA0C,MAAjCnlC,KAAK+R,MAAMjN,QAAQ2P,UAAoBzU,KAAKu4B,aAAaG,QAAU14B,KAAKu4B,aAAaK,QAC9FwM,EAAaplC,KAAKqjC,WAAWz+B,QAAQ3B,EAAekiC,EAAQnlC,KAAKsjC,gCACjE+B,EAAarlC,KAAKyjC,eAAezjC,KAAKqE,MAAOrE,KAAKg2B,YAAYjB,MAAOkO,EAAW5+B,OAAQ/D,GAAa8kC,EAC3GvC,EAASn7B,EAAMkC,MAAQlC,EAAMq9B,MAAQM,EAAa39B,EAAMq9B,MAAQ,EAChEv+B,EAAOzW,KAAKE,IAAI00C,EAAiBj9B,EAAMq9B,MAAQr9B,EAAM/J,MACzD,MACIklC,EAASztB,EAAMhI,iBAAiBpN,KAAKs7B,UAAUj3B,GAAO+Q,EAAMpI,MAAO3I,GACnEmC,EAAOzW,KAAKE,IAAI00C,EAAiBrC,EAAMryC,IAAMqyC,EAAM3kC,OAEvD,MAAO,CACHs8B,KAAM4I,EAASr8B,EAAO,EACtBi8B,KAAMI,EAASr8B,EAAO,EACtBq8B,SACAr8B,OAER,CACA,IAAAgqB,GACI,MAAMnkB,EAAOrM,KAAKg2B,YACZppB,EAASP,EAAKO,OACd04B,EAAQj5B,EAAK0N,KACb9V,EAAOqhC,EAAMnnC,OACnB,IAAInM,EAAI,EACR,KAAMA,EAAIiS,IAAQjS,EACyB,OAAnCgO,KAAKs7B,UAAUtpC,GAAG4a,EAAOI,OAAmBs4B,EAAMtzC,GAAG8pC,QACrDwJ,EAAMtzC,GAAGw+B,KAAKxwB,KAAKwY,KAG/B,EAGJ,MAAM+sB,WAAyBtO,GAC3BC,UAAY,SACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjB7gB,WAAY,CACRzG,QAAS,CACLzR,KAAM,SACN8X,WAAY,CACR,IACA,IACA,cACA,aAKnBmgB,iBAAmB,CACZ7hB,OAAQ,CACJ1iB,EAAG,CACCsM,KAAM,UAEVyG,EAAG,CACCzG,KAAM,YAIlB,UAAAg5B,GACIj4B,KAAK23B,qBAAsB,EAC3BuK,MAAMjK,YACV,CACH,kBAAA8C,CAAmB1uB,EAAM0N,EAAMnQ,EAAO6C,GAC/B,MAAMqZ,EAASoc,MAAMnH,mBAAmB1uB,EAAM0N,EAAMnQ,EAAO6C,GAC3D,IAAI,IAAIza,EAAI,EAAGA,EAAI8zB,EAAO3nB,OAAQnM,IAC9B8zB,EAAO9zB,GAAG2uC,QAAU3gC,KAAK48B,0BAA0B5qC,EAAI4X,GAAOsS,OAElE,OAAO4J,CACX,CACH,cAAA+U,CAAexuB,EAAM0N,EAAMnQ,EAAO6C,GAC3B,MAAMqZ,EAASoc,MAAMrH,eAAexuB,EAAM0N,EAAMnQ,EAAO6C,GACvD,IAAI,IAAIza,EAAI,EAAGA,EAAI8zB,EAAO3nB,OAAQnM,IAAI,CAClC,MAAMyU,EAAOsT,EAAKnQ,EAAQ5X,GAC1B8zB,EAAO9zB,GAAG2uC,QAAU19B,EAAewD,EAAK,GAAIzG,KAAK48B,0BAA0B5qC,EAAI4X,GAAOsS,OAC1F,CACA,OAAO4J,CACX,CACH,eAAAgV,CAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAC5B,MAAMqZ,EAASoc,MAAMpH,gBAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GACxD,IAAI,IAAIza,EAAI,EAAGA,EAAI8zB,EAAO3nB,OAAQnM,IAAI,CAClC,MAAMyU,EAAOsT,EAAKnQ,EAAQ5X,GAC1B8zB,EAAO9zB,GAAG2uC,QAAU19B,EAAewD,GAAQA,EAAKvU,IAAMuU,EAAKvU,EAAG8N,KAAK48B,0BAA0B5qC,EAAI4X,GAAOsS,OAC5G,CACA,OAAO4J,CACX,CACH,cAAAuW,GACO,MAAMtiB,EAAO/Z,KAAKg2B,YAAYjc,KAC9B,IAAI/pB,EAAM,EACV,IAAI,IAAIgC,EAAI+nB,EAAK5b,OAAS,EAAGnM,GAAK,IAAKA,EACnChC,EAAMD,KAAKC,IAAIA,EAAK+pB,EAAK/nB,GAAGwU,KAAKxG,KAAK48B,0BAA0B5qC,IAAM,GAE1E,OAAOhC,EAAM,GAAKA,CACtB,CACH,gBAAAssC,CAAiBj4B,GACV,MAAMgI,EAAOrM,KAAKg2B,YACZiF,EAASj7B,KAAK+R,MAAMgI,KAAKkhB,QAAU,IACnC,OAAEvtB,EAAO,OAAEC,GAAYtB,EACvByZ,EAAS9lB,KAAKs7B,UAAUj3B,GACxB1R,EAAI+a,EAAO8uB,iBAAiB1W,EAAOnzB,GACnC+S,EAAIiI,EAAO6uB,iBAAiB1W,EAAOpgB,GACnCxT,EAAI4zB,EAAO6a,QACjB,MAAO,CACHpE,MAAOtB,EAAO52B,IAAU,GACxB/B,MAAO,IAAM3P,EAAI,KAAO+S,GAAKxT,EAAI,KAAOA,EAAI,IAAM,IAE1D,CACA,MAAA0gC,CAAOje,GACH,MAAMrI,EAAStM,KAAKg2B,YAAYjc,KAChC/Z,KAAK++B,eAAezyB,EAAQ,EAAGA,EAAOnO,OAAQwW,EAClD,CACA,cAAAoqB,CAAezyB,EAAQ1C,EAAO6C,EAAOkI,GACjC,MAAM6kB,EAAiB,UAAT7kB,GACR,OAAEhI,EAAO,OAAEC,GAAY5M,KAAKg2B,aAC5B,cAAE4H,EAAc,eAAED,GAAoB39B,KAAK89B,kBAAkBl0B,EAAO+K,GACpEuhB,EAAQvpB,EAAOK,KACfmpB,EAAQvpB,EAAOI,KACrB,IAAI,IAAIhb,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,EAAOza,IAAI,CACtC,MAAMub,EAAQjB,EAAOta,GACf8zB,GAAU0T,GAASx5B,KAAKs7B,UAAUtpC,GAClC+kB,EAAa,CAAC,EACdkR,EAASlR,EAAWmf,GAASsD,EAAQ7sB,EAAO23B,mBAAmB,IAAO33B,EAAOS,iBAAiB0Y,EAAOoQ,IACrGhO,EAASnR,EAAWof,GAASqD,EAAQ5sB,EAAOw1B,eAAiBx1B,EAAOQ,iBAAiB0Y,EAAOqQ,IAClGpf,EAAWmP,KAAO/d,MAAM8f,IAAW9f,MAAM+f,GACrCyV,IACA5mB,EAAWjS,QAAU84B,GAAiB59B,KAAK48B,0BAA0B5qC,EAAGub,EAAMyJ,OAAS,SAAWrC,GAC9F6kB,IACAziB,EAAWjS,QAAQoX,OAAS,IAGpClc,KAAKk+B,cAAc3wB,EAAOvb,EAAG+kB,EAAYpC,EAC7C,CACJ,CACH,yBAAAioB,CAA0Bv4B,EAAOsQ,GAC1B,MAAMmR,EAAS9lB,KAAKs7B,UAAUj3B,GAC9B,IAAIsN,EAASuwB,MAAMtF,0BAA0Bv4B,EAAOsQ,GAChDhD,EAAOqiB,UACPriB,EAAS5T,OAAOC,OAAO,CAAC,EAAG2T,EAAQ,CAC/BqiB,SAAS,KAGjB,MAAM9X,EAASvK,EAAOuK,OAKtB,MAJa,WAATvH,IACAhD,EAAOuK,OAAS,GAEpBvK,EAAOuK,QAAUjZ,EAAe6iB,GAAUA,EAAO6a,QAASzkB,GACnDvK,CACX,EAiCJ,MAAM6zB,WAA2BvO,GAC7BC,UAAY,WACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjB1kB,UAAW,CACPmyB,eAAe,EACfC,cAAc,GAElBvuB,WAAY,CACRzG,QAAS,CACLzR,KAAM,SACN8X,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZ4uB,OAAQ,MACR1pB,SAAU,EACV2pB,cAAe,IACf1pB,OAAQ,OACR2pB,QAAS,EACTpxB,UAAW,KAEfyiB,mBAAqB,CACjB3gB,YAAcZ,GAAgB,YAATA,EACrBc,WAAad,GAAgB,YAATA,IAAuBA,EAAKa,WAAW,gBAAkBb,EAAKa,WAAW,oBAEpG0gB,iBAAmB,CACZ4O,YAAa,EACb5wB,QAAS,CACL6wB,OAAQ,CACJ9K,OAAQ,CACJ,cAAA+K,CAAgBj0B,GACZ,MAAMgI,EAAOhI,EAAMgI,KACnB,GAAIA,EAAKkhB,OAAO98B,QAAU4b,EAAKtG,SAAStV,OAAQ,CAC5C,MAAQ88B,QAAQ,WAAEjf,EAAW,MAAEpb,IAAcmR,EAAMg0B,OAAOjhC,QAC1D,OAAOiV,EAAKkhB,OAAOzoC,IAAI,CAAC+pC,EAAOvqC,KAC3B,MACMkiB,EADOnC,EAAMsnB,eAAe,GACftD,WAAWhK,SAAS/5B,GACvC,MAAO,CACH+mB,KAAMwjB,EACN3d,UAAW1K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnByyB,UAAWrlC,EACXuX,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZ8f,QAAS/pB,EAAMoyB,kBAAkBnyC,GACjCqS,MAAOrS,IAGnB,CACA,MAAO,EACX,GAEJ,OAAAgjB,CAAS/jB,EAAGi1C,EAAYH,GACpBA,EAAOh0B,MAAMo0B,qBAAqBD,EAAW7hC,OAC7C0hC,EAAOh0B,MAAM6gB,QACjB,KAIZ,WAAA5zB,CAAY+S,EAAO3N,GACf89B,MAAMnwB,EAAO3N,GACbpE,KAAK23B,qBAAsB,EAC3B33B,KAAKomC,iBAAc9lC,EACnBN,KAAKqmC,iBAAc/lC,EACnBN,KAAKuqB,aAAUjqB,EACfN,KAAKwqB,aAAUlqB,CACnB,CACA,UAAA43B,GAAc,CACjB,KAAAnS,CAAMnc,EAAO6C,GACN,MAAMsN,EAAO/Z,KAAKu4B,aAAaxe,KACzB1N,EAAOrM,KAAKg2B,YAClB,IAAsB,IAAlBh2B,KAAK6lB,SACLxZ,EAAKQ,QAAUkN,MACZ,CACH,IAKI/nB,EAAGiS,EALHqiC,EAAUt0C,IAAK+nB,EAAK/nB,GACxB,GAAI2Q,EAASoX,EAAKnQ,IAAS,CACvB,MAAM,IAAEjF,EAAK,SAAa3E,KAAK6lB,SAC/BygB,EAAUt0C,IAAK2T,EAAiBoU,EAAK/nB,GAAI2S,EAC7C,CAEA,IAAI3S,EAAI4X,EAAO3F,EAAO2F,EAAQ6C,EAAOza,EAAIiS,IAAQjS,EAC7Cqa,EAAKQ,QAAQ7a,GAAKs0C,EAAOt0C,EAEjC,CACJ,CACH,YAAAu0C,GACO,OAAOh+B,GAAUvI,KAAK8E,QAAQmX,SAAW,GAC7C,CACH,iBAAAuqB,GACO,OAAOj+B,GAAUvI,KAAK8E,QAAQ8gC,cAClC,CACH,mBAAAa,GACO,IAAIx2C,EAAM2W,GACN5W,GAAO4W,GACX,IAAI,IAAI5U,EAAI,EAAGA,EAAIgO,KAAK+R,MAAMgI,KAAKtG,SAAStV,SAAUnM,EAClD,GAAIgO,KAAK+R,MAAM20B,iBAAiB10C,IAAMgO,KAAK+R,MAAMsnB,eAAernC,GAAGiN,OAASe,KAAKq3B,MAAO,CACpF,MAAMtB,EAAa/1B,KAAK+R,MAAMsnB,eAAernC,GAAG+jC,WAC1C9Z,EAAW8Z,EAAWwQ,eACtBX,EAAgB7P,EAAWyQ,oBACjCv2C,EAAMF,KAAKE,IAAIA,EAAKgsB,GACpBjsB,EAAMD,KAAKC,IAAIA,EAAKisB,EAAW2pB,EACnC,CAEJ,MAAO,CACH3pB,SAAUhsB,EACV21C,cAAe51C,EAAMC,EAE7B,CACH,MAAA2iC,CAAOje,GACA,MAAM5C,EAAQ/R,KAAK+R,OACb,UAAEid,GAAejd,EACjB1F,EAAOrM,KAAKg2B,YACZ2Q,EAAOt6B,EAAK0N,KACZ8rB,EAAU7lC,KAAK4mC,oBAAsB5mC,KAAK6mC,aAAaF,GAAQ3mC,KAAK8E,QAAQ+gC,QAC5EiB,EAAU/2C,KAAKC,KAAKD,KAAKE,IAAI++B,EAAUnW,MAAOmW,EAAUxT,QAAUqqB,GAAW,EAAG,GAChFF,EAAS51C,KAAKE,KD90DCkT,EC80DqC2jC,ED90DR,iBAApCxkC,EC80DuBtC,KAAK8E,QAAQ6gC,SD90DYrjC,EAAMc,SAAS,KAAOC,WAAWf,GAAS,KAAOA,EAAQa,GC80DnD,GD90DvD,IAACb,EAAOa,EC+0DrB,MAAM4jC,EAAc/mC,KAAKgnC,eAAehnC,KAAKqE,QACvC,cAAEuhC,EAAc,SAAE3pB,GAAcjc,KAAKymC,uBACrC,OAAEQ,EAAO,OAAEC,EAAO,QAAE3c,EAAQ,QAAEC,GAhK5C,SAA2BvO,EAAU2pB,EAAeD,GAChD,IAAIsB,EAAS,EACTC,EAAS,EACT3c,EAAU,EACVC,EAAU,EACd,GAAIob,EAAgBh/B,GAAK,CACrB,MAAMugC,EAAalrB,EACbmrB,EAAWD,EAAavB,EACxByB,EAASt3C,KAAKuf,IAAI63B,GAClBG,EAASv3C,KAAKse,IAAI84B,GAClBI,EAAOx3C,KAAKuf,IAAI83B,GAChBI,EAAOz3C,KAAKse,IAAI+4B,GAChBK,EAAU,CAACt+B,EAAOtY,EAAGC,IAAI6Y,GAAcR,EAAOg+B,EAAYC,GAAU,GAAQ,EAAIr3C,KAAKC,IAAIa,EAAGA,EAAI80C,EAAQ70C,EAAGA,EAAI60C,GAC/G+B,EAAU,CAACv+B,EAAOtY,EAAGC,IAAI6Y,GAAcR,EAAOg+B,EAAYC,GAAU,IAAS,EAAIr3C,KAAKE,IAAIY,EAAGA,EAAI80C,EAAQ70C,EAAGA,EAAI60C,GAChHgC,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQxgC,GAASqgC,EAAQE,GAChCK,EAAOH,EAAQ/gC,GAAI0gC,EAAQE,GAC3BO,EAAOJ,EAAQ/gC,GAAKM,GAASqgC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBvd,IAAYod,EAAOE,GAAQ,EAC3Brd,IAAYod,EAAOE,GAAQ,CAC/B,CACA,MAAO,CACHb,SACAC,SACA3c,UACAC,UAER,CAmIyDud,CAAkB9rB,EAAU2pB,EAAeD,GACtFhmB,GAAYqP,EAAUnW,MAAQgtB,GAAWoB,EACzCe,GAAahZ,EAAUxT,OAASqqB,GAAWqB,EAC3Ce,EAAYl4C,KAAKC,IAAID,KAAKE,IAAI0vB,EAAUqoB,GAAa,EAAG,GACxD3B,EAAcnjC,EAAYlD,KAAK8E,QAAQoX,OAAQ+rB,GAE/CC,GAAgB7B,EADFt2C,KAAKC,IAAIq2C,EAAcV,EAAQ,IACA3lC,KAAKmoC,gCACxDnoC,KAAKuqB,QAAUA,EAAU8b,EACzBrmC,KAAKwqB,QAAUA,EAAU6b,EACzBh6B,EAAK+7B,MAAQpoC,KAAKqoC,iBAClBroC,KAAKqmC,YAAcA,EAAc6B,EAAeloC,KAAKsoC,qBAAqBtoC,KAAKqE,OAC/ErE,KAAKomC,YAAcr2C,KAAKC,IAAIgQ,KAAKqmC,YAAc6B,EAAenB,EAAa,GAC3E/mC,KAAK++B,eAAe4H,EAAM,EAAGA,EAAKxoC,OAAQwW,EAC9C,CACH,cAAA4zB,CAAev2C,EAAGwnC,GACX,MAAMtb,EAAOle,KAAK8E,QACZuH,EAAOrM,KAAKg2B,YACZ4P,EAAgB5lC,KAAKwmC,oBAC3B,OAAIhN,GAAStb,EAAK5K,UAAUmyB,gBAAkBzlC,KAAK+R,MAAMoyB,kBAAkBnyC,IAA0B,OAApBqa,EAAKQ,QAAQ7a,IAAeqa,EAAK0N,KAAK/nB,GAAG8pC,OAC/G,EAEJ97B,KAAKwoC,uBAAuBn8B,EAAKQ,QAAQ7a,GAAK4zC,EAAgBh/B,GACzE,CACA,cAAAm4B,CAAe4H,EAAM/8B,EAAO6C,EAAOkI,GAC/B,MAAM6kB,EAAiB,UAAT7kB,EACR5C,EAAQ/R,KAAK+R,MACbid,EAAYjd,EAAMid,UAElByZ,EADO12B,EAAMjN,QACQwO,UACrBo1B,GAAW1Z,EAAUrX,KAAOqX,EAAUvX,OAAS,EAC/CkxB,GAAW3Z,EAAUxX,IAAMwX,EAAUtX,QAAU,EAC/CguB,EAAelM,GAASiP,EAAc/C,aACtCU,EAAcV,EAAe,EAAI1lC,KAAKomC,YACtCC,EAAcX,EAAe,EAAI1lC,KAAKqmC,aACtC,cAAEzI,EAAc,eAAED,GAAoB39B,KAAK89B,kBAAkBl0B,EAAO+K,GAC1E,IACI3iB,EADAm1C,EAAannC,KAAKumC,eAEtB,IAAIv0C,EAAI,EAAGA,EAAI4X,IAAS5X,EACpBm1C,GAAcnnC,KAAKuoC,eAAev2C,EAAGwnC,GAEzC,IAAIxnC,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,IAASza,EAAE,CAClC,MAAM4zC,EAAgB5lC,KAAKuoC,eAAev2C,EAAGwnC,GACvChd,EAAMmqB,EAAK30C,GACX+kB,EAAa,CACfpkB,EAAG+1C,EAAU1oC,KAAKuqB,QAClB7kB,EAAGijC,EAAU3oC,KAAKwqB,QAClB2c,aACAC,SAAUD,EAAavB,EACvBA,gBACAS,cACAD,eAEAzI,IACA5mB,EAAWjS,QAAU84B,GAAiB59B,KAAK48B,0BAA0B5qC,EAAGwqB,EAAIxF,OAAS,SAAWrC,IAEpGwyB,GAAcvB,EACd5lC,KAAKk+B,cAAc1hB,EAAKxqB,EAAG+kB,EAAYpC,EAC3C,CACJ,CACA,cAAA0zB,GACI,MAAMh8B,EAAOrM,KAAKg2B,YACZ4S,EAAWv8B,EAAK0N,KACtB,IACI/nB,EADAo2C,EAAQ,EAEZ,IAAIp2C,EAAI,EAAGA,EAAI42C,EAASzqC,OAAQnM,IAAI,CAChC,MAAMsQ,EAAQ+J,EAAKQ,QAAQ7a,GACb,OAAVsQ,GAAmB6F,MAAM7F,KAAUtC,KAAK+R,MAAMoyB,kBAAkBnyC,IAAO42C,EAAS52C,GAAG8pC,SACnFsM,GAASr4C,KAAKyX,IAAIlF,GAE1B,CACA,OAAO8lC,CACX,CACA,sBAAAI,CAAuBlmC,GACnB,MAAM8lC,EAAQpoC,KAAKg2B,YAAYoS,MAC/B,OAAIA,EAAQ,IAAMjgC,MAAM7F,GACbsE,IAAO7W,KAAKyX,IAAIlF,GAAS8lC,GAE7B,CACX,CACA,gBAAA9L,CAAiBj4B,GACb,MAAMgI,EAAOrM,KAAKg2B,YACZjkB,EAAQ/R,KAAK+R,MACbkpB,EAASlpB,EAAMgI,KAAKkhB,QAAU,GAC9B34B,EAAQwO,GAAazE,EAAKQ,QAAQxI,GAAQ0N,EAAMjN,QAAQkM,QAC9D,MAAO,CACHurB,MAAOtB,EAAO52B,IAAU,GACxB/B,QAER,CACA,iBAAAskC,CAAkBD,GACd,IAAI32C,EAAM,EACV,MAAM+hB,EAAQ/R,KAAK+R,MACnB,IAAI/f,EAAGiS,EAAMoI,EAAM0pB,EAAYjxB,EAC/B,IAAK6hC,EACD,IAAI30C,EAAI,EAAGiS,EAAO8N,EAAMgI,KAAKtG,SAAStV,OAAQnM,EAAIiS,IAAQjS,EACtD,GAAI+f,EAAM20B,iBAAiB10C,GAAI,CAC3Bqa,EAAO0F,EAAMsnB,eAAernC,GAC5B20C,EAAOt6B,EAAK0N,KACZgc,EAAa1pB,EAAK0pB,WAClB,KACJ,CAGR,IAAK4Q,EACD,OAAO,EAEX,IAAI30C,EAAI,EAAGiS,EAAO0iC,EAAKxoC,OAAQnM,EAAIiS,IAAQjS,EACvC8S,EAAUixB,EAAW6G,0BAA0B5qC,GACnB,UAAxB8S,EAAQ+jC,cACR74C,EAAMD,KAAKC,IAAIA,EAAK8U,EAAQiY,aAAe,EAAGjY,EAAQgkC,kBAAoB,IAGlF,OAAO94C,CACX,CACA,YAAA62C,CAAaF,GACT,IAAI32C,EAAM,EACV,IAAI,IAAIgC,EAAI,EAAGiS,EAAO0iC,EAAKxoC,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC7C,MAAM8S,EAAU9E,KAAK48B,0BAA0B5qC,GAC/ChC,EAAMD,KAAKC,IAAIA,EAAK8U,EAAQ+S,QAAU,EAAG/S,EAAQikC,aAAe,EACpE,CACA,OAAO/4C,CACX,CACH,oBAAAs4C,CAAqBlkC,GACd,IAAI4kC,EAAmB,EACvB,IAAI,IAAIh3C,EAAI,EAAGA,EAAIoS,IAAgBpS,EAC3BgO,KAAK+R,MAAM20B,iBAAiB10C,KAC5Bg3C,GAAoBhpC,KAAKgnC,eAAeh1C,IAGhD,OAAOg3C,CACX,CACH,cAAAhC,CAAe5iC,GACR,OAAOrU,KAAKC,IAAIiT,EAAejD,KAAK+R,MAAMgI,KAAKtG,SAASrP,GAAcvD,OAAQ,GAAI,EACtF,CACH,6BAAAsnC,GACO,OAAOnoC,KAAKsoC,qBAAqBtoC,KAAK+R,MAAMgI,KAAKtG,SAAStV,SAAW,CACzE,EAGJ,MAAM8qC,WAAuBhS,GACzBC,UAAY,OACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjB1iB,UAAU,EACVxI,UAAU,GAEjBoqB,iBAAmB,CACZ7hB,OAAQ,CACJ2sB,QAAS,CACL/iC,KAAM,YAEVgjC,QAAS,CACLhjC,KAAM,YAIlB,UAAAg5B,GACIj4B,KAAK23B,qBAAsB,EAC3B33B,KAAK43B,oBAAqB,EAC1BsK,MAAMjK,YACV,CACA,MAAArF,CAAOje,GACH,MAAMtI,EAAOrM,KAAKg2B,aACVjpB,QAASkR,EAAOlE,KAAMzN,EAAS,GAAG,SAAE48B,GAAc78B,EACpDE,EAAqBvM,KAAK+R,MAAM8rB,oBACtC,IAAI,MAAEj0B,EAAM,MAAE6C,GAAWL,GAAiCC,EAAMC,EAAQC,GACxEvM,KAAKy3B,WAAa7tB,EAClB5J,KAAK03B,WAAajrB,EACdgB,GAAoBpB,KACpBzC,EAAQ,EACR6C,EAAQH,EAAOnO,QAEnB8f,EAAKsV,OAASvzB,KAAK+R,MACnBkM,EAAKkrB,cAAgBnpC,KAAKqE,MAC1B4Z,EAAKmrB,aAAeF,EAASE,WAC7BnrB,EAAK3R,OAASA,EACd,MAAMxH,EAAU9E,KAAK28B,6BAA6BhoB,GAC7C3U,KAAK8E,QAAQwQ,WACdxQ,EAAQiY,YAAc,GAE1BjY,EAAQ6oB,QAAU3tB,KAAK8E,QAAQ6oB,QAC/B3tB,KAAKk+B,cAAcjgB,OAAM3d,EAAW,CAChC+oC,UAAW98B,EACXzH,WACD6P,GACH3U,KAAK++B,eAAezyB,EAAQ1C,EAAO6C,EAAOkI,EAC9C,CACA,cAAAoqB,CAAezyB,EAAQ1C,EAAO6C,EAAOkI,GACjC,MAAM6kB,EAAiB,UAAT7kB,GACR,OAAEhI,EAAO,OAAEC,EAAO,SAAEurB,EAAS,SAAE+Q,GAAclpC,KAAKg2B,aAClD,cAAE4H,EAAc,eAAED,GAAoB39B,KAAK89B,kBAAkBl0B,EAAO+K,GACpEuhB,EAAQvpB,EAAOK,KACfmpB,EAAQvpB,EAAOI,MACf,SAAEF,EAAS,QAAE6gB,GAAa3tB,KAAK8E,QAC/BwkC,EAAevhC,GAAS+E,GAAYA,EAAWjK,OAAOkE,kBACtDwiC,EAAevpC,KAAK+R,MAAM8rB,qBAAuBrE,GAAkB,SAAT7kB,EAC1D9K,EAAMD,EAAQ6C,EACd+8B,EAAcl9B,EAAOnO,OAC3B,IAAIsrC,EAAa7/B,EAAQ,GAAK5J,KAAKs7B,UAAU1xB,EAAQ,GACrD,IAAI,IAAI5X,EAAI,EAAGA,EAAIw3C,IAAex3C,EAAE,CAChC,MAAMub,EAAQjB,EAAOta,GACf+kB,EAAawyB,EAAeh8B,EAAQ,CAAC,EAC3C,GAAIvb,EAAI4X,GAAS5X,GAAK6X,EAAK,CACvBkN,EAAWmP,MAAO,EAClB,QACJ,CACA,MAAMJ,EAAS9lB,KAAKs7B,UAAUtpC,GACxB03C,EAAWrnC,EAAcyjB,EAAOqQ,IAChClO,EAASlR,EAAWmf,GAASvpB,EAAOS,iBAAiB0Y,EAAOoQ,GAAQlkC,GACpEk2B,EAASnR,EAAWof,GAASqD,GAASkQ,EAAW98B,EAAOw1B,eAAiBx1B,EAAOQ,iBAAiB+qB,EAAWn4B,KAAK80B,WAAWloB,EAAQkZ,EAAQqS,GAAYrS,EAAOqQ,GAAQnkC,GAC7K+kB,EAAWmP,KAAO/d,MAAM8f,IAAW9f,MAAM+f,IAAWwhB,EACpD3yB,EAAWwa,KAAOv/B,EAAI,GAAKjC,KAAKyX,IAAIse,EAAOoQ,GAASuT,EAAWvT,IAAUoT,EACrE3b,IACA5W,EAAW+O,OAASA,EACpB/O,EAAW+lB,IAAMoM,EAASnvB,KAAK/nB,IAE/B2rC,IACA5mB,EAAWjS,QAAU84B,GAAiB59B,KAAK48B,0BAA0B5qC,EAAGub,EAAMyJ,OAAS,SAAWrC,IAEjG40B,GACDvpC,KAAKk+B,cAAc3wB,EAAOvb,EAAG+kB,EAAYpC,GAE7C80B,EAAa3jB,CACjB,CACJ,CACH,cAAAuW,GACO,MAAMhwB,EAAOrM,KAAKg2B,YACZjpB,EAAUV,EAAKU,QACf2L,EAAS3L,EAAQjI,SAAWiI,EAAQjI,QAAQiY,aAAe,EAC3DhD,EAAO1N,EAAK0N,MAAQ,GAC1B,IAAKA,EAAK5b,OACN,OAAOua,EAEX,MAAM2N,EAAatM,EAAK,GAAGvT,KAAKxG,KAAK48B,0BAA0B,IACzD+M,EAAY5vB,EAAKA,EAAK5b,OAAS,GAAGqI,KAAKxG,KAAK48B,0BAA0B7iB,EAAK5b,OAAS,IAC1F,OAAOpO,KAAKC,IAAI0oB,EAAQ2N,EAAYsjB,GAAa,CACrD,CACA,IAAAnZ,GACI,MAAMnkB,EAAOrM,KAAKg2B,YAClB3pB,EAAKU,QAAQ68B,oBAAoB5pC,KAAK+R,MAAMid,UAAW3iB,EAAKM,OAAOK,MACnEk1B,MAAM1R,MACV,EAGJ,MAAMqZ,WAA4B5S,GAC9BC,UAAY,YACfA,gBAAkB,CACXc,gBAAiB,MACjB1kB,UAAW,CACPmyB,eAAe,EACfC,cAAc,GAElBvuB,WAAY,CACRzG,QAAS,CACLzR,KAAM,SACN8X,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZtC,UAAW,IACX0yB,WAAY,GAEnBjQ,iBAAmB,CACZ4O,YAAa,EACb5wB,QAAS,CACL6wB,OAAQ,CACJ9K,OAAQ,CACJ,cAAA+K,CAAgBj0B,GACZ,MAAMgI,EAAOhI,EAAMgI,KACnB,GAAIA,EAAKkhB,OAAO98B,QAAU4b,EAAKtG,SAAStV,OAAQ,CAC5C,MAAQ88B,QAAQ,WAAEjf,EAAW,MAAEpb,IAAcmR,EAAMg0B,OAAOjhC,QAC1D,OAAOiV,EAAKkhB,OAAOzoC,IAAI,CAAC+pC,EAAOvqC,KAC3B,MACMkiB,EADOnC,EAAMsnB,eAAe,GACftD,WAAWhK,SAAS/5B,GACvC,MAAO,CACH+mB,KAAMwjB,EACN3d,UAAW1K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnByyB,UAAWrlC,EACXuX,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZ8f,QAAS/pB,EAAMoyB,kBAAkBnyC,GACjCqS,MAAOrS,IAGnB,CACA,MAAO,EACX,GAEJ,OAAAgjB,CAAS/jB,EAAGi1C,EAAYH,GACpBA,EAAOh0B,MAAMo0B,qBAAqBD,EAAW7hC,OAC7C0hC,EAAOh0B,MAAM6gB,QACjB,IAGRvd,OAAQ,CACJnjB,EAAG,CACC+M,KAAM,eACN6qC,WAAY,CACRlyB,SAAS,GAEbE,aAAa,EACbI,KAAM,CACF6xB,UAAU,GAEdC,YAAa,CACTpyB,SAAS,GAEbuvB,WAAY,KAIxB,WAAAnoC,CAAY+S,EAAO3N,GACf89B,MAAMnwB,EAAO3N,GACbpE,KAAKomC,iBAAc9lC,EACnBN,KAAKqmC,iBAAc/lC,CACvB,CACA,gBAAAg8B,CAAiBj4B,GACb,MAAMgI,EAAOrM,KAAKg2B,YACZjkB,EAAQ/R,KAAK+R,MACbkpB,EAASlpB,EAAMgI,KAAKkhB,QAAU,GAC9B34B,EAAQwO,GAAazE,EAAKQ,QAAQxI,GAAOnS,EAAG6f,EAAMjN,QAAQkM,QAChE,MAAO,CACHurB,MAAOtB,EAAO52B,IAAU,GACxB/B,QAER,CACA,eAAAw4B,CAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAC/B,OAAOmZ,GAA4BqkB,KAAKjqC,KAAjC4lB,CAAuCvZ,EAAM0N,EAAMnQ,EAAO6C,EACrE,CACA,MAAAmmB,CAAOje,GACH,MAAMgyB,EAAO3mC,KAAKg2B,YAAYjc,KAC9B/Z,KAAKkqC,gBACLlqC,KAAK++B,eAAe4H,EAAM,EAAGA,EAAKxoC,OAAQwW,EAC9C,CACH,SAAAgnB,GACO,MAAMtvB,EAAOrM,KAAKg2B,YACZtuB,EAAQ,CACVzX,IAAK4S,OAAOkE,kBACZ/W,IAAK6S,OAAOm5B,mBAahB,OAXA3vB,EAAK0N,KAAKzO,QAAQ,CAACge,EAASjlB,KACxB,MAAMyhB,EAAS9lB,KAAKs7B,UAAUj3B,GAAOnS,GAChCiW,MAAM2d,IAAW9lB,KAAK+R,MAAMoyB,kBAAkB9/B,KAC3CyhB,EAASpe,EAAMzX,MACfyX,EAAMzX,IAAM61B,GAEZA,EAASpe,EAAM1X,MACf0X,EAAM1X,IAAM81B,MAIjBpe,CACX,CACH,aAAAwiC,GACO,MAAMn4B,EAAQ/R,KAAK+R,MACbid,EAAYjd,EAAMid,UAClB9Q,EAAOnM,EAAMjN,QACbqlC,EAAUp6C,KAAKE,IAAI++B,EAAUvX,MAAQuX,EAAUrX,KAAMqX,EAAUtX,OAASsX,EAAUxX,KAClF6uB,EAAct2C,KAAKC,IAAIm6C,EAAU,EAAG,GAEpCjC,GAAgB7B,EADFt2C,KAAKC,IAAIkuB,EAAKksB,iBAAmB/D,EAAc,IAAMnoB,EAAKksB,iBAAmB,EAAG,IACjDr4B,EAAMs4B,yBACzDrqC,KAAKqmC,YAAcA,EAAc6B,EAAeloC,KAAKqE,MACrDrE,KAAKomC,YAAcpmC,KAAKqmC,YAAc6B,CAC1C,CACA,cAAAnJ,CAAe4H,EAAM/8B,EAAO6C,EAAOkI,GAC/B,MAAM6kB,EAAiB,UAAT7kB,EACR5C,EAAQ/R,KAAK+R,MAEb02B,EADO12B,EAAMjN,QACQwO,UACrB8B,EAAQpV,KAAKg2B,YAAYoD,OACzBsP,EAAUtzB,EAAMk1B,QAChB3B,EAAUvzB,EAAMm1B,QAChBC,EAAoBp1B,EAAMq1B,cAAc,GAAK,GAAM9jC,GACzD,IACI3U,EADAmX,EAAQqhC,EAEZ,MAAME,EAAe,IAAM1qC,KAAK2qC,uBAChC,IAAI34C,EAAI,EAAGA,EAAI4X,IAAS5X,EACpBmX,GAASnJ,KAAK4qC,cAAc54C,EAAG2iB,EAAM+1B,GAEzC,IAAI14C,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,EAAOza,IAAI,CAClC,MAAMwqB,EAAMmqB,EAAK30C,GACjB,IAAIm1C,EAAah+B,EACbi+B,EAAWj+B,EAAQnJ,KAAK4qC,cAAc54C,EAAG2iB,EAAM+1B,GAC/CrE,EAAct0B,EAAMoyB,kBAAkBnyC,GAAKojB,EAAMy1B,8BAA8B7qC,KAAKs7B,UAAUtpC,GAAGE,GAAK,EAC1GiX,EAAQi+B,EACJ5N,IACIiP,EAAc/C,eACdW,EAAc,GAEdoC,EAAchD,gBACd0B,EAAaC,EAAWoD,IAGhC,MAAMzzB,EAAa,CACfpkB,EAAG+1C,EACHhjC,EAAGijC,EACHvC,YAAa,EACbC,cACAc,aACAC,WACAtiC,QAAS9E,KAAK48B,0BAA0B5qC,EAAGwqB,EAAIxF,OAAS,SAAWrC,IAEvE3U,KAAKk+B,cAAc1hB,EAAKxqB,EAAG+kB,EAAYpC,EAC3C,CACJ,CACA,oBAAAg2B,GACI,MAAMt+B,EAAOrM,KAAKg2B,YAClB,IAAIvpB,EAAQ,EAMZ,OALAJ,EAAK0N,KAAKzO,QAAQ,CAACge,EAASjlB,MACnB8D,MAAMnI,KAAKs7B,UAAUj3B,GAAOnS,IAAM8N,KAAK+R,MAAMoyB,kBAAkB9/B,IAChEoI,MAGDA,CACX,CACH,aAAAm+B,CAAcvmC,EAAOsQ,EAAM+1B,GACpB,OAAO1qC,KAAK+R,MAAMoyB,kBAAkB9/B,GAASkE,GAAUvI,KAAK48B,0BAA0Bv4B,EAAOsQ,GAAMxL,OAASuhC,GAAgB,CAChI,EAGJ,MAAMI,WAAsBtF,GACxBtO,UAAY,MACfA,gBAAkB,CACXyO,OAAQ,EACR1pB,SAAU,EACV2pB,cAAe,IACf1pB,OAAQ,QAIhB,MAAM6uB,WAAwB9T,GAC1BC,UAAY,QACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjBvjB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACNmK,KAAM,CACFnB,KAAM,WAIrBoa,iBAAmB,CACZ4O,YAAa,EACbzwB,OAAQ,CACJnjB,EAAG,CACC+M,KAAM,kBAIrB,gBAAAq9B,CAAiBj4B,GACV,MAAMuI,EAAS5M,KAAKg2B,YAAYppB,OAC1BkZ,EAAS9lB,KAAKs7B,UAAUj3B,GAC9B,MAAO,CACHk4B,MAAO3vB,EAAOsuB,YAAY72B,GAC1B/B,MAAO,GAAKsK,EAAO4vB,iBAAiB1W,EAAOlZ,EAAOI,OAE1D,CACA,eAAA8tB,CAAgBzuB,EAAM0N,EAAMnQ,EAAO6C,GAC/B,OAAOmZ,GAA4BqkB,KAAKjqC,KAAjC4lB,CAAuCvZ,EAAM0N,EAAMnQ,EAAO6C,EACrE,CACA,MAAAmmB,CAAOje,GACH,MAAMtI,EAAOrM,KAAKg2B,YACZ/X,EAAO5R,EAAKU,QACZT,EAASD,EAAK0N,MAAQ,GACtBkhB,EAAS5uB,EAAKM,OAAOuuB,YAE3B,GADAjd,EAAK3R,OAASA,EACD,WAATqI,EAAmB,CACnB,MAAM7P,EAAU9E,KAAK28B,6BAA6BhoB,GAC7C3U,KAAK8E,QAAQwQ,WACdxQ,EAAQiY,YAAc,GAE1B,MAAMhG,EAAa,CACfub,OAAO,EACP0Y,UAAW/P,EAAO98B,SAAWmO,EAAOnO,OACpC2G,WAEJ9E,KAAKk+B,cAAcjgB,OAAM3d,EAAWyW,EAAYpC,EACpD,CACA3U,KAAK++B,eAAezyB,EAAQ,EAAGA,EAAOnO,OAAQwW,EAClD,CACA,cAAAoqB,CAAezyB,EAAQ1C,EAAO6C,EAAOkI,GACjC,MAAMS,EAAQpV,KAAKg2B,YAAYoD,OACzBI,EAAiB,UAAT7kB,EACd,IAAI,IAAI3iB,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,EAAOza,IAAI,CACtC,MAAMub,EAAQjB,EAAOta,GACf8S,EAAU9E,KAAK48B,0BAA0B5qC,EAAGub,EAAMyJ,OAAS,SAAWrC,GACtEs2B,EAAgB71B,EAAM81B,yBAAyBl5C,EAAGgO,KAAKs7B,UAAUtpC,GAAGE,GACpES,EAAI6mC,EAAQpkB,EAAMk1B,QAAUW,EAAct4C,EAC1C+S,EAAI8zB,EAAQpkB,EAAMm1B,QAAUU,EAAcvlC,EAC1CqR,EAAa,CACfpkB,IACA+S,IACAyD,MAAO8hC,EAAc9hC,MACrB+c,KAAM/d,MAAMxV,IAAMwV,MAAMzC,GACxBZ,WAEJ9E,KAAKk+B,cAAc3wB,EAAOvb,EAAG+kB,EAAYpC,EAC7C,CACJ,EAGJ,MAAMw2B,WAA0BlU,GAC5BC,UAAY,UACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjB1iB,UAAU,EACVwH,MAAM,GAEboa,iBAAmB,CACZxiB,YAAa,CACTC,KAAM,SAEVU,OAAQ,CACJ1iB,EAAG,CACCsM,KAAM,UAEVyG,EAAG,CACCzG,KAAM,YAIrB,gBAAAq9B,CAAiBj4B,GACV,MAAMgI,EAAOrM,KAAKg2B,YACZiF,EAASj7B,KAAK+R,MAAMgI,KAAKkhB,QAAU,IACnC,OAAEvtB,EAAO,OAAEC,GAAYtB,EACvByZ,EAAS9lB,KAAKs7B,UAAUj3B,GACxB1R,EAAI+a,EAAO8uB,iBAAiB1W,EAAOnzB,GACnC+S,EAAIiI,EAAO6uB,iBAAiB1W,EAAOpgB,GACzC,MAAO,CACH62B,MAAOtB,EAAO52B,IAAU,GACxB/B,MAAO,IAAM3P,EAAI,KAAO+S,EAAI,IAEpC,CACA,MAAAktB,CAAOje,GACH,MAAMtI,EAAOrM,KAAKg2B,aACVjc,KAAMzN,EAAS,IAAQD,EACzBE,EAAqBvM,KAAK+R,MAAM8rB,oBACtC,IAAI,MAAEj0B,EAAM,MAAE6C,GAAWL,GAAiCC,EAAMC,EAAQC,GAOxE,GANAvM,KAAKy3B,WAAa7tB,EAClB5J,KAAK03B,WAAajrB,EACdgB,GAAoBpB,KACpBzC,EAAQ,EACR6C,EAAQH,EAAOnO,QAEf6B,KAAK8E,QAAQwQ,SAAU,CAClBtV,KAAK+3B,oBACN/3B,KAAKo4B,cAET,MAAQrrB,QAASkR,EAAK,SAAEirB,GAAc78B,EACtC4R,EAAKsV,OAASvzB,KAAK+R,MACnBkM,EAAKkrB,cAAgBnpC,KAAKqE,MAC1B4Z,EAAKmrB,aAAeF,EAASE,WAC7BnrB,EAAK3R,OAASA,EACd,MAAMxH,EAAU9E,KAAK28B,6BAA6BhoB,GAClD7P,EAAQ6oB,QAAU3tB,KAAK8E,QAAQ6oB,QAC/B3tB,KAAKk+B,cAAcjgB,OAAM3d,EAAW,CAChC+oC,UAAW98B,EACXzH,WACD6P,EACP,MAAW3U,KAAK+3B,4BACL1rB,EAAKU,QACZ/M,KAAK+3B,oBAAqB,GAE9B/3B,KAAK++B,eAAezyB,EAAQ1C,EAAO6C,EAAOkI,EAC9C,CACA,WAAAyjB,GACI,MAAM,SAAE9iB,GAActV,KAAK8E,SACtB9E,KAAK+3B,oBAAsBziB,IAC5BtV,KAAK+3B,mBAAqB/3B,KAAK+R,MAAMq5B,SAASC,WAAW,SAE7DnJ,MAAM9J,aACV,CACA,cAAA2G,CAAezyB,EAAQ1C,EAAO6C,EAAOkI,GACjC,MAAM6kB,EAAiB,UAAT7kB,GACR,OAAEhI,EAAO,OAAEC,EAAO,SAAEurB,EAAS,SAAE+Q,GAAclpC,KAAKg2B,YAClD+H,EAAY/9B,KAAK48B,0BAA0BhzB,EAAO+K,GAClDipB,EAAgB59B,KAAK09B,iBAAiBK,GACtCJ,EAAiB39B,KAAK29B,eAAehpB,EAAMipB,GAC3C1H,EAAQvpB,EAAOK,KACfmpB,EAAQvpB,EAAOI,MACf,SAAEF,EAAS,QAAE6gB,GAAa3tB,KAAK8E,QAC/BwkC,EAAevhC,GAAS+E,GAAYA,EAAWjK,OAAOkE,kBACtDwiC,EAAevpC,KAAK+R,MAAM8rB,qBAAuBrE,GAAkB,SAAT7kB,EAChE,IAAI80B,EAAa7/B,EAAQ,GAAK5J,KAAKs7B,UAAU1xB,EAAQ,GACrD,IAAI,IAAI5X,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,IAASza,EAAE,CACtC,MAAMub,EAAQjB,EAAOta,GACf8zB,EAAS9lB,KAAKs7B,UAAUtpC,GACxB+kB,EAAawyB,EAAeh8B,EAAQ,CAAC,EACrCm8B,EAAWrnC,EAAcyjB,EAAOqQ,IAChClO,EAASlR,EAAWmf,GAASvpB,EAAOS,iBAAiB0Y,EAAOoQ,GAAQlkC,GACpEk2B,EAASnR,EAAWof,GAASqD,GAASkQ,EAAW98B,EAAOw1B,eAAiBx1B,EAAOQ,iBAAiB+qB,EAAWn4B,KAAK80B,WAAWloB,EAAQkZ,EAAQqS,GAAYrS,EAAOqQ,GAAQnkC,GAC7K+kB,EAAWmP,KAAO/d,MAAM8f,IAAW9f,MAAM+f,IAAWwhB,EACpD3yB,EAAWwa,KAAOv/B,EAAI,GAAKjC,KAAKyX,IAAIse,EAAOoQ,GAASuT,EAAWvT,IAAUoT,EACrE3b,IACA5W,EAAW+O,OAASA,EACpB/O,EAAW+lB,IAAMoM,EAASnvB,KAAK/nB,IAE/B2rC,IACA5mB,EAAWjS,QAAU84B,GAAiB59B,KAAK48B,0BAA0B5qC,EAAGub,EAAMyJ,OAAS,SAAWrC,IAEjG40B,GACDvpC,KAAKk+B,cAAc3wB,EAAOvb,EAAG+kB,EAAYpC,GAE7C80B,EAAa3jB,CACjB,CACA9lB,KAAKi+B,oBAAoBL,EAAejpB,EAAMopB,EAClD,CACH,cAAA1B,GACO,MAAMhwB,EAAOrM,KAAKg2B,YACZjc,EAAO1N,EAAK0N,MAAQ,GAC1B,IAAK/Z,KAAK8E,QAAQwQ,SAAU,CACxB,IAAItlB,EAAM,EACV,IAAI,IAAIgC,EAAI+nB,EAAK5b,OAAS,EAAGnM,GAAK,IAAKA,EACnChC,EAAMD,KAAKC,IAAIA,EAAK+pB,EAAK/nB,GAAGwU,KAAKxG,KAAK48B,0BAA0B5qC,IAAM,GAE1E,OAAOhC,EAAM,GAAKA,CACtB,CACA,MAAM+c,EAAUV,EAAKU,QACf2L,EAAS3L,EAAQjI,SAAWiI,EAAQjI,QAAQiY,aAAe,EACjE,IAAKhD,EAAK5b,OACN,OAAOua,EAEX,MAAM2N,EAAatM,EAAK,GAAGvT,KAAKxG,KAAK48B,0BAA0B,IACzD+M,EAAY5vB,EAAKA,EAAK5b,OAAS,GAAGqI,KAAKxG,KAAK48B,0BAA0B7iB,EAAK5b,OAAS,IAC1F,OAAOpO,KAAKC,IAAI0oB,EAAQ2N,EAAYsjB,GAAa,CACrD,EAGJ,IAAI2B,GAA2BvtC,OAAOu/B,OAAO,CAC7CiO,UAAW,KACX3J,cAAeA,GACf2D,iBAAkBA,GAClBC,mBAAoBA,GACpByD,eAAgBA,GAChB6B,cAAeA,GACfjB,oBAAqBA,GACrBkB,gBAAiBA,GACjBI,kBAAmBA,KAOf,SAAS,KACT,MAAM,IAAIhnB,MAAM,kFACpB,CAMI,MAAMqnB,GAUJ,eAAO/1B,CAASg2B,GACd1tC,OAAOC,OAAOwtC,GAAgBjpC,UAAWkpC,EAC7C,CACA3mC,QACA,WAAA9F,CAAY8F,GACR9E,KAAK8E,QAAUA,GAAW,CAAC,CAC/B,CAEA,IAAA4mC,GAAQ,CACR,OAAAC,GACI,OAAO,IACX,CACA,KAAA5lB,GACI,OAAO,IACX,CACA,MAAAtU,GACI,OAAO,IACX,CACA,GAAA4S,GACI,OAAO,IACX,CACA,IAAAunB,GACI,OAAO,IACX,CACA,OAAAC,GACI,OAAO,IACX,CACA,KAAAC,GACI,OAAO,IACX,EAEJ,IAAIC,GAAW,CACXC,MAAOR,IAGX,SAASS,GAAaC,EAASl/B,EAAM1K,EAAOsS,GACxC,MAAM,WAAEmhB,EAAW,KAAEhc,EAAK,QAAErN,GAAaw/B,EACnCv/B,EAASopB,EAAWC,YAAYrpB,OAChCG,EAAWo/B,EAAQn/B,SAAUm/B,EAAQn/B,QAAQjI,QAAUonC,EAAQn/B,QAAQjI,QAAQgI,SAAkB,KACvG,GAAIH,GAAUK,IAASL,EAAOK,MAAiB,MAATA,GAAgBN,GAAWqN,EAAK5b,OAAQ,CAC1E,MAAMguC,EAAex/B,EAAOy/B,eAAiBthC,GAAgBH,GAC7D,IAAKiK,EAAW,CACZ,MAAMiV,EAASsiB,EAAapyB,EAAM/M,EAAM1K,GACxC,GAAIwK,EAAU,CACV,MAAM,OAAEF,GAAYmpB,EAAWC,aACzB,QAAEnpB,GAAaq/B,EACf7+B,EAAsBR,EAAQnK,MAAM,EAAGmnB,EAAOnf,GAAK,GAAG7G,UAAUyJ,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACrH6c,EAAOnf,IAAM3a,KAAKC,IAAI,EAAGqd,GACzB,MAAMG,EAAsBX,EAAQnK,MAAMmnB,EAAOpf,IAAI6C,UAAWC,IAASlL,EAAckL,EAAMX,EAAOI,QACpG6c,EAAOpf,IAAM1a,KAAKC,IAAI,EAAGwd,EAC7B,CACA,OAAOqc,CACX,CAAO,GAAIkM,EAAWyB,eAAgB,CAClC,MAAM3L,EAAK9R,EAAK,GACVrS,EAA+B,mBAAhBmkB,EAAGwgB,UAA2BxgB,EAAGwgB,SAASr/B,GAC/D,GAAItF,EAAO,CACP,MAAMkC,EAAQuiC,EAAapyB,EAAM/M,EAAM1K,EAAQoF,GACzCmC,EAAMsiC,EAAapyB,EAAM/M,EAAM1K,EAAQoF,GAC7C,MAAO,CACHgD,GAAId,EAAMc,GACVD,GAAIZ,EAAIY,GAEhB,CACJ,CACJ,CACA,MAAO,CACHC,GAAI,EACJD,GAAIsP,EAAK5b,OAAS,EAE1B,CACC,SAASmuC,GAAyBv6B,EAAO/E,EAAMu/B,EAAUC,EAAS53B,GAC/D,MAAMggB,EAAW7iB,EAAM06B,+BACjBnqC,EAAQiqC,EAASv/B,GACvB,IAAI,IAAIhb,EAAI,EAAGiS,EAAO2wB,EAASz2B,OAAQnM,EAAIiS,IAAQjS,EAAE,CACjD,MAAM,MAAEqS,EAAM,KAAE0V,GAAU6a,EAAS5iC,IAC7B,GAAE0Y,EAAG,GAAED,GAAQwhC,GAAarX,EAAS5iC,GAAIgb,EAAM1K,EAAOsS,GAC5D,IAAI,IAAIrV,EAAImL,EAAInL,GAAKkL,IAAMlL,EAAE,CACzB,MAAM+pB,EAAUvP,EAAKxa,GAChB+pB,EAAQpD,MACTsmB,EAAQljB,EAASjlB,EAAO9E,EAEhC,CACJ,CACJ,CAUC,SAASmtC,GAAkB36B,EAAOw6B,EAAUv/B,EAAM2/B,EAAkB93B,GACjE,MAAMrJ,EAAQ,GACd,OAAKqJ,GAAqB9C,EAAM66B,cAAcL,IAe9CD,GAAyBv6B,EAAO/E,EAAMu/B,EAZf,SAASjjB,EAASllB,EAAcC,IAC9CwQ,GAAqBoI,GAAeqM,EAASvX,EAAMid,UAAW,KAG/D1F,EAAQujB,QAAQN,EAAS55C,EAAG45C,EAAS7mC,EAAGinC,IACxCnhC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GACgE,GACzDmH,GAfIA,CAgBf,CA0DC,SAASshC,GAAgB/6B,EAAOw6B,EAAUv/B,EAAM4H,EAAW+3B,EAAkB93B,GAC1E,OAAKA,GAAqB9C,EAAM66B,cAAcL,GAG9B,MAATv/B,GAAiB4H,EAvC3B,SAAkC7C,EAAOw6B,EAAUv/B,EAAM4H,EAAW+3B,EAAkB93B,GACnF,IAAIrJ,EAAQ,GACZ,MAAMuhC,EArDT,SAAkC//B,GAC/B,MAAMggC,GAA8B,IAAvBhgC,EAAKpI,QAAQ,KACpBqoC,GAA8B,IAAvBjgC,EAAKpI,QAAQ,KAC1B,OAAO,SAAS2E,EAAKC,GACjB,MAAM0jC,EAASF,EAAOj9C,KAAKyX,IAAI+B,EAAI5W,EAAI6W,EAAI7W,GAAK,EAC1Cw6C,EAASF,EAAOl9C,KAAKyX,IAAI+B,EAAI7D,EAAI8D,EAAI9D,GAAK,EAChD,OAAO3V,KAAKmZ,KAAKnZ,KAAKyN,IAAI0vC,EAAQ,GAAKn9C,KAAKyN,IAAI2vC,EAAQ,GAC5D,CACJ,CA6C2BC,CAAyBpgC,GAChD,IAAIqgC,EAAcxqC,OAAOkE,kBA8BzB,OADAulC,GAAyBv6B,EAAO/E,EAAMu/B,EA5BtC,SAAwBjjB,EAASllB,EAAcC,GAC3C,MAAMwoC,EAAUvjB,EAAQujB,QAAQN,EAAS55C,EAAG45C,EAAS7mC,EAAGinC,GACxD,GAAI/3B,IAAci4B,EACd,OAEJ,MAAMhK,EAASvZ,EAAQgkB,eAAeX,GAEtC,IADsB93B,IAAoB9C,EAAM66B,cAAc/J,KACzCgK,EACjB,OAEJ,MAAMxjC,EAAW0jC,EAAeR,EAAU1J,GACtCx5B,EAAWgkC,GACX7hC,EAAQ,CACJ,CACI8d,UACAllB,eACAC,UAGRgpC,EAAchkC,GACPA,IAAagkC,GACpB7hC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GAEOmH,CACX,CAKyG+hC,CAAyBx7B,EAAOw6B,EAAUv/B,EAAM4H,EAAW+3B,EAAkB93B,GA7DrL,SAA+B9C,EAAOw6B,EAAUv/B,EAAM2/B,GACnD,IAAInhC,EAAQ,GAmBZ,OADA8gC,GAAyBv6B,EAAO/E,EAAMu/B,EAjBtC,SAAwBjjB,EAASllB,EAAcC,GAC3C,MAAM,WAAE8iC,EAAW,SAAEC,GAAc9d,EAAQkkB,SAAS,CAChD,aACA,YACDb,IACG,MAAExjC,GAAWP,GAAkB0gB,EAAS,CAC1C32B,EAAG45C,EAAS55C,EACZ+S,EAAG6mC,EAAS7mC,IAEZiE,GAAcR,EAAOg+B,EAAYC,IACjC57B,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,SAGZ,GAEOmH,CACX,CAwCwCiiC,CAAsB17B,EAAOw6B,EAAUv/B,EAAM2/B,GAFtE,EAGf,CACC,SAASe,GAAa37B,EAAOw6B,EAAUv/B,EAAM4H,EAAW+3B,GACrD,MAAMnhC,EAAQ,GACRmiC,EAAuB,MAAT3gC,EAAe,WAAa,WAChD,IAAI4gC,GAAiB,EAWrB,OAVAtB,GAAyBv6B,EAAO/E,EAAMu/B,EAAU,CAACjjB,EAASllB,EAAcC,KAChEilB,EAAQqkB,IAAgBrkB,EAAQqkB,GAAapB,EAASv/B,GAAO2/B,KAC7DnhC,EAAMxF,KAAK,CACPsjB,UACAllB,eACAC,UAEJupC,EAAiBA,GAAkBtkB,EAAQujB,QAAQN,EAAS55C,EAAG45C,EAAS7mC,EAAGinC,MAG/E/3B,IAAcg5B,EACP,GAEJpiC,CACX,CACC,IAAIqiC,GAAc,CACfvB,4BACAwB,MAAO,CACV,KAAAzpC,CAAO0N,EAAO9gB,EAAG6T,EAAS6nC,GACf,MAAMJ,EAAWxiB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,IACvB6H,EAAmB/P,EAAQ+P,mBAAoB,EAC/CrJ,EAAQ1G,EAAQ8P,UAAY83B,GAAkB36B,EAAOw6B,EAAUv/B,EAAM2/B,EAAkB93B,GAAoBi4B,GAAgB/6B,EAAOw6B,EAAUv/B,GAAM,EAAO2/B,EAAkB93B,GAC3Kf,EAAW,GACjB,OAAKtI,EAAMrN,QAGX4T,EAAM06B,+BAA+BnhC,QAASe,IAC1C,MAAMhI,EAAQmH,EAAM,GAAGnH,MACjBilB,EAAUjd,EAAK0N,KAAK1V,GACtBilB,IAAYA,EAAQpD,MACpBpS,EAAS9N,KAAK,CACVsjB,UACAllB,aAAciI,EAAKhI,MACnBA,YAILyP,GAbI,EAcf,EACP,OAAA/G,CAASgF,EAAO9gB,EAAG6T,EAAS6nC,GACjB,MAAMJ,EAAWxiB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,KACvB6H,EAAmB/P,EAAQ+P,mBAAoB,EACrD,IAAIrJ,EAAQ1G,EAAQ8P,UAAY83B,GAAkB36B,EAAOw6B,EAAUv/B,EAAM2/B,EAAkB93B,GAAoBi4B,GAAgB/6B,EAAOw6B,EAAUv/B,GAAM,EAAO2/B,EAAkB93B,GAC/K,GAAIrJ,EAAMrN,OAAS,EAAG,CAClB,MAAMiG,EAAeoH,EAAM,GAAGpH,aACxB2V,EAAOhI,EAAMsnB,eAAej1B,GAAc2V,KAChDvO,EAAQ,GACR,IAAI,IAAIxZ,EAAI,EAAGA,EAAI+nB,EAAK5b,SAAUnM,EAC9BwZ,EAAMxF,KAAK,CACPsjB,QAASvP,EAAK/nB,GACdoS,eACAC,MAAOrS,GAGnB,CACA,OAAOwZ,CACX,EACP+B,MAAM,CAACwE,EAAO9gB,EAAG6T,EAAS6nC,IAIRD,GAAkB36B,EAHRgY,GAAoB94B,EAAG8gB,GAC3BjN,EAAQkI,MAAQ,KAEmB2/B,EADvB7nC,EAAQ+P,mBAAoB,GAGhE,OAAAk5B,CAASh8B,EAAO9gB,EAAG6T,EAAS6nC,GACjB,MAAMJ,EAAWxiB,GAAoB94B,EAAG8gB,GAClC/E,EAAOlI,EAAQkI,MAAQ,KACvB6H,EAAmB/P,EAAQ+P,mBAAoB,EACrD,OAAOi4B,GAAgB/6B,EAAOw6B,EAAUv/B,EAAMlI,EAAQ8P,UAAW+3B,EAAkB93B,EACvF,EACPliB,EAAE,CAACof,EAAO9gB,EAAG6T,EAAS6nC,IAEJe,GAAa37B,EADHgY,GAAoB94B,EAAG8gB,GACH,IAAKjN,EAAQ8P,UAAW+3B,GAExEjnC,EAAE,CAACqM,EAAO9gB,EAAG6T,EAAS6nC,IAEJe,GAAa37B,EADHgY,GAAoB94B,EAAG8gB,GACH,IAAKjN,EAAQ8P,UAAW+3B,KAKzE,MAAMqB,GAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,GAAiB5lC,EAAOkkC,GAC7B,OAAOlkC,EAAMqc,OAAQ/0B,GAAIA,EAAEm6B,MAAQyiB,EACvC,CACA,SAAS2B,GAA4B7lC,EAAO2E,GACxC,OAAO3E,EAAMqc,OAAQ/0B,IAAyC,IAArCq+C,GAAiBppC,QAAQjV,EAAEm6B,MAAen6B,EAAE06B,IAAIrd,OAASA,EACtF,CACA,SAASmhC,GAAa9lC,EAAOxE,GACzB,OAAOwE,EAAM03B,KAAK,CAAClvC,EAAGC,KAClB,MAAMoT,EAAKL,EAAU/S,EAAID,EACnBsT,EAAKN,EAAUhT,EAAIC,EACzB,OAAOoT,EAAGrD,SAAWsD,EAAGtD,OAASqD,EAAGG,MAAQF,EAAGE,MAAQH,EAAGrD,OAASsD,EAAGtD,QAE9E,CA0EA,SAASutC,GAAeC,EAAYrf,EAAWn+B,EAAGC,GAC9C,OAAOf,KAAKC,IAAIq+C,EAAWx9C,GAAIm+B,EAAUn+B,IAAMd,KAAKC,IAAIq+C,EAAWv9C,GAAIk+B,EAAUl+B,GACrF,CACA,SAASw9C,GAAiBD,EAAYE,GAClCF,EAAW72B,IAAMznB,KAAKC,IAAIq+C,EAAW72B,IAAK+2B,EAAW/2B,KACrD62B,EAAW12B,KAAO5nB,KAAKC,IAAIq+C,EAAW12B,KAAM42B,EAAW52B,MACvD02B,EAAW32B,OAAS3nB,KAAKC,IAAIq+C,EAAW32B,OAAQ62B,EAAW72B,QAC3D22B,EAAW52B,MAAQ1nB,KAAKC,IAAIq+C,EAAW52B,MAAO82B,EAAW92B,MAC7D,CACA,SAAS+2B,GAAWxf,EAAWyf,EAAQC,EAAQnZ,GAC3C,MAAM,IAAEzL,EAAI,IAAEO,GAASqkB,EACjBL,EAAarf,EAAUqf,WAC7B,IAAK1rC,EAASmnB,GAAM,CACZ4kB,EAAOloC,OACPwoB,EAAUlF,IAAQ4kB,EAAOloC,MAE7B,MAAMuuB,EAAQQ,EAAOmZ,EAAO3Z,QAAU,CAClCvuB,KAAM,EACNiG,MAAO,GAEXsoB,EAAMvuB,KAAOzW,KAAKC,IAAI+kC,EAAMvuB,KAAMkoC,EAAOvN,WAAa9W,EAAI7O,OAAS6O,EAAIxR,OACvE61B,EAAOloC,KAAOuuB,EAAMvuB,KAAOuuB,EAAMtoB,MACjCuiB,EAAUlF,IAAQ4kB,EAAOloC,IAC7B,CACI6jB,EAAIskB,YACJL,GAAiBD,EAAYhkB,EAAIskB,cAErC,MAAMC,EAAW7+C,KAAKC,IAAI,EAAGy+C,EAAOI,WAAaT,GAAeC,EAAYrf,EAAW,OAAQ,UACzF8f,EAAY/+C,KAAKC,IAAI,EAAGy+C,EAAOM,YAAcX,GAAeC,EAAYrf,EAAW,MAAO,WAC1FggB,EAAeJ,IAAa5f,EAAUl9B,EACtCm9C,EAAgBH,IAAc9f,EAAUl/B,EAG9C,OAFAk/B,EAAUl9B,EAAI88C,EACd5f,EAAUl/B,EAAIg/C,EACPJ,EAAOvN,WAAa,CACvB+N,KAAMF,EACNG,MAAOF,GACP,CACAC,KAAMD,EACNE,MAAOH,EAEf,CAaA,SAASI,GAAWjO,EAAYnS,GAC5B,MAAMqf,EAAarf,EAAUqf,WAa7B,OAZA,SAA4B5kB,GACxB,MAAMtM,EAAS,CACXxF,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GAKZ,OAHA+R,EAAUne,QAASwe,IACf3M,EAAO2M,GAAO/5B,KAAKC,IAAIg/B,EAAUlF,GAAMukB,EAAWvkB,MAE/C3M,CACX,CACoBkyB,CAAblO,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAASmO,GAASC,EAAOvgB,EAAWyf,EAAQlZ,GACxC,MAAMia,EAAa,GACnB,IAAIx9C,EAAGiS,EAAMyqC,EAAQrkB,EAAKolB,EAAOvhC,EACjC,IAAIlc,EAAI,EAAGiS,EAAOsrC,EAAMpxC,OAAQsxC,EAAQ,EAAGz9C,EAAIiS,IAAQjS,EAAE,CACrD08C,EAASa,EAAMv9C,GACfq4B,EAAMqkB,EAAOrkB,IACbA,EAAIuI,OAAO8b,EAAO71B,OAASmW,EAAUl9B,EAAG48C,EAAOlzB,QAAUwT,EAAUl/B,EAAGs/C,GAAWV,EAAOvN,WAAYnS,IACpG,MAAM,KAAEkgB,EAAK,MAAEC,GAAWX,GAAWxf,EAAWyf,EAAQC,EAAQnZ,GAChEka,GAASP,GAAQM,EAAWrxC,OAC5B+P,EAAUA,GAAWihC,EAChB9kB,EAAIqlB,UACLF,EAAWxpC,KAAK0oC,EAExB,CACA,OAAOe,GAASH,GAASE,EAAYxgB,EAAWyf,EAAQlZ,IAAWrnB,CACvE,CACA,SAASyhC,GAAWtlB,EAAK1S,EAAMH,EAAKqB,EAAO2C,GACvC6O,EAAI7S,IAAMA,EACV6S,EAAI1S,KAAOA,EACX0S,EAAI5S,MAAQE,EAAOkB,EACnBwR,EAAI3S,OAASF,EAAMgE,EACnB6O,EAAIxR,MAAQA,EACZwR,EAAI7O,OAASA,CACjB,CACA,SAASo0B,GAAWL,EAAOvgB,EAAWyf,EAAQlZ,GAC1C,MAAMsa,EAAcpB,EAAOl3B,QAC3B,IAAI,EAAE5kB,EAAE,EAAE+S,GAAOspB,EACjB,IAAK,MAAM0f,KAAUa,EAAM,CACvB,MAAMllB,EAAMqkB,EAAOrkB,IACb0K,EAAQQ,EAAOmZ,EAAO3Z,QAAU,CAClCtoB,MAAO,EACPqjC,OAAQ,EACRjvC,OAAQ,GAENA,EAAS6tC,EAAOqB,YAAchb,EAAMl0B,QAAU,EACpD,GAAI6tC,EAAOvN,WAAY,CACnB,MAAMtoB,EAAQmW,EAAUl9B,EAAI+O,EACtB2a,EAASuZ,EAAMvuB,MAAQ6jB,EAAI7O,OAC7BnV,GAAQ0uB,EAAMnrB,SACdlE,EAAIqvB,EAAMnrB,OAEVygB,EAAIqlB,SACJC,GAAWtlB,EAAKwlB,EAAYl4B,KAAMjS,EAAG+oC,EAAOI,WAAagB,EAAYp4B,MAAQo4B,EAAYl4B,KAAM6D,GAE/Fm0B,GAAWtlB,EAAK2E,EAAUrX,KAAOod,EAAM+a,OAAQpqC,EAAGmT,EAAO2C,GAE7DuZ,EAAMnrB,MAAQlE,EACdqvB,EAAM+a,QAAUj3B,EAChBnT,EAAI2kB,EAAI3S,MACZ,KAAO,CACH,MAAM8D,EAASwT,EAAUl/B,EAAI+Q,EACvBgY,EAAQkc,EAAMvuB,MAAQ6jB,EAAIxR,MAC5BxS,GAAQ0uB,EAAMnrB,SACdjX,EAAIoiC,EAAMnrB,OAEVygB,EAAIqlB,SACJC,GAAWtlB,EAAK13B,EAAGk9C,EAAYr4B,IAAKqB,EAAO41B,EAAOM,YAAcc,EAAYn4B,OAASm4B,EAAYr4B,KAEjGm4B,GAAWtlB,EAAK13B,EAAGq8B,EAAUxX,IAAMud,EAAM+a,OAAQj3B,EAAO2C,GAE5DuZ,EAAMnrB,MAAQjX,EACdoiC,EAAM+a,QAAUt0B,EAChB7oB,EAAI03B,EAAI5S,KACZ,CACJ,CACAuX,EAAUr8B,EAAIA,EACdq8B,EAAUtpB,EAAIA,CAClB,CACA,IAAIsqC,GAAU,CACb,MAAAC,CAAQl+B,EAAOtL,GACHsL,EAAMw9B,QACPx9B,EAAMw9B,MAAQ,IAElB9oC,EAAKipC,SAAWjpC,EAAKipC,WAAY,EACjCjpC,EAAK8lC,SAAW9lC,EAAK8lC,UAAY,MACjC9lC,EAAK5F,OAAS4F,EAAK5F,QAAU,EAC7B4F,EAAKypC,QAAUzpC,EAAKypC,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACH,IAAA3f,CAAMxB,GACFvoB,EAAK+pB,KAAKxB,EACd,GAGZ,EACAjd,EAAMw9B,MAAMvpC,KAAKS,EACrB,EACH,SAAA2pC,CAAWr+B,EAAOs+B,GACX,MAAMhsC,EAAQ0N,EAAMw9B,MAAQx9B,EAAMw9B,MAAM3qC,QAAQyrC,IAAe,GAChD,IAAXhsC,GACA0N,EAAMw9B,MAAMlkC,OAAOhH,EAAO,EAElC,EACH,SAAAovB,CAAW1hB,EAAOtL,EAAM3B,GACjB2B,EAAKipC,SAAW5qC,EAAQ4qC,SACxBjpC,EAAK8lC,SAAWznC,EAAQynC,SACxB9lC,EAAK5F,OAASiE,EAAQjE,MAC1B,EACH,MAAA+xB,CAAQ7gB,EAAO8G,EAAO2C,EAAQ80B,GACvB,IAAKv+B,EACD,OAEJ,MAAMwF,EAAUwJ,GAAUhP,EAAMjN,QAAQ4pC,OAAOn3B,SACzCg5B,EAAiBxgD,KAAKC,IAAI6oB,EAAQtB,EAAQsB,MAAO,GACjD23B,EAAkBzgD,KAAKC,IAAIwrB,EAASjE,EAAQiE,OAAQ,GACpD+zB,EAvMd,SAA0BA,GACtB,MAAMkB,EAxDV,SAAmBlB,GACf,MAAMkB,EAAc,GACpB,IAAIz+C,EAAGiS,EAAMomB,EAAKP,EAAKiL,EAAOgb,EAC9B,IAAI/9C,EAAI,EAAGiS,GAAQsrC,GAAS,IAAIpxC,OAAQnM,EAAIiS,IAAQjS,EAChDq4B,EAAMklB,EAAMv9C,KACTu6C,SAAUziB,EAAMhlB,SAAWiwB,QAAQgb,cAAa,IAAU1lB,GAC7DomB,EAAYzqC,KAAK,CACb3B,MAAOrS,EACPq4B,MACAP,MACAqX,WAAY9W,EAAIgY,eAChBxhC,OAAQwpB,EAAIxpB,OACZk0B,MAAOA,GAASjL,EAAMiL,EACtBgb,gBAGR,OAAOU,CACX,CAuCwBC,CAAUnB,GACxBG,EAAWvB,GAAasC,EAAY/rB,OAAQisB,GAAOA,EAAKtmB,IAAIqlB,WAAW,GACvE/3B,EAAOw2B,GAAaF,GAAiBwC,EAAa,SAAS,GAC3Dh5B,EAAQ02B,GAAaF,GAAiBwC,EAAa,UACnDj5B,EAAM22B,GAAaF,GAAiBwC,EAAa,QAAQ,GACzD/4B,EAASy2B,GAAaF,GAAiBwC,EAAa,WACpDG,EAAmB1C,GAA4BuC,EAAa,KAC5DI,EAAiB3C,GAA4BuC,EAAa,KAChE,MAAO,CACHf,WACAoB,WAAYn5B,EAAKmoB,OAAOtoB,GACxBu5B,eAAgBt5B,EAAMqoB,OAAO+Q,GAAgB/Q,OAAOpoB,GAAQooB,OAAO8Q,GACnE5hB,UAAWif,GAAiBwC,EAAa,aACzCO,SAAUr5B,EAAKmoB,OAAOroB,GAAOqoB,OAAO+Q,GACpC1P,WAAY3pB,EAAIsoB,OAAOpoB,GAAQooB,OAAO8Q,GAE9C,CAsLsBK,CAAiBl/B,EAAMw9B,OAC/B2B,EAAgB3B,EAAMyB,SACtBG,EAAkB5B,EAAMpO,WAC9Bx9B,EAAKoO,EAAMw9B,MAAQllB,IACiB,mBAArBA,EAAI+mB,cACX/mB,EAAI+mB,iBAGZ,MAAMC,EAA0BH,EAAc/f,OAAO,CAACiX,EAAOuI,IAAOA,EAAKtmB,IAAIvlB,UAAwC,IAA7B6rC,EAAKtmB,IAAIvlB,QAAQ8S,QAAoBwwB,EAAQA,EAAQ,EAAG,IAAM,EAChJqG,EAAS1wC,OAAOu/B,OAAO,CACzBuR,WAAYh2B,EACZk2B,YAAavzB,EACbjE,UACAg5B,iBACAC,kBACAc,aAAcf,EAAiB,EAAIc,EACnCE,cAAef,EAAkB,IAE/BnC,EAAatwC,OAAOC,OAAO,CAAC,EAAGuZ,GACrC+2B,GAAiBD,EAAYttB,GAAUuvB,IACvC,MAAMthB,EAAYjxB,OAAOC,OAAO,CAC5BqwC,aACAv8C,EAAGy+C,EACHzgD,EAAG0gD,EACH79C,EAAG4kB,EAAQI,KACXjS,EAAG6R,EAAQC,KACZD,GACGge,EArPb,SAAuBya,EAASvB,GAC7B,MAAMlZ,EAnBV,SAAqBya,GACjB,MAAMza,EAAS,CAAC,EAChB,IAAK,MAAMob,KAAQX,EAAQ,CACvB,MAAM,MAAEjb,EAAM,IAAEjL,EAAI,YAAEimB,GAAiBY,EACvC,IAAK5b,IAAUiZ,GAAiBr7B,SAASmX,GACrC,SAEJ,MAAMhG,EAASyR,EAAOR,KAAWQ,EAAOR,GAAS,CAC7CtoB,MAAO,EACPqjC,OAAQ,EACRjvC,OAAQ,EACR2F,KAAM,IAEVsd,EAAOrX,QACPqX,EAAOjjB,QAAUkvC,CACrB,CACA,OAAOxa,CACX,CAEmBic,CAAYxB,IACrB,aAAEsB,EAAa,cAAEC,GAAmB9C,EAC1C,IAAIz8C,EAAGiS,EAAMyqC,EACb,IAAI18C,EAAI,EAAGiS,EAAO+rC,EAAQ7xC,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC5C08C,EAASsB,EAAQh+C,GACjB,MAAM,SAAE09C,GAAchB,EAAOrkB,IACvB0K,EAAQQ,EAAOmZ,EAAO3Z,OACtBlD,EAASkD,GAAS2Z,EAAOqB,YAAchb,EAAMl0B,OAC/C6tC,EAAOvN,YACPuN,EAAO71B,MAAQgZ,EAASA,EAASyf,EAAe5B,GAAYjB,EAAO8B,eACnE7B,EAAOlzB,OAAS+1B,IAEhB7C,EAAO71B,MAAQy4B,EACf5C,EAAOlzB,OAASqW,EAASA,EAAS0f,EAAgB7B,GAAYjB,EAAO+B,gBAE7E,CACA,OAAOjb,CACX,CAmOuBkc,CAAcP,EAAcpR,OAAOqR,GAAkB1C,GACpEa,GAASC,EAAMG,SAAU1gB,EAAWyf,EAAQlZ,GAC5C+Z,GAAS4B,EAAeliB,EAAWyf,EAAQlZ,GACvC+Z,GAAS6B,EAAiBniB,EAAWyf,EAAQlZ,IAC7C+Z,GAAS4B,EAAeliB,EAAWyf,EAAQlZ,GA3KvD,SAA0BvG,GACtB,MAAMqf,EAAarf,EAAUqf,WAC7B,SAASqD,EAAU5nB,GACf,MAAM6nB,EAAS5hD,KAAKC,IAAIq+C,EAAWvkB,GAAOkF,EAAUlF,GAAM,GAE1D,OADAkF,EAAUlF,IAAQ6nB,EACXA,CACX,CACA3iB,EAAUtpB,GAAKgsC,EAAU,OACzB1iB,EAAUr8B,GAAK++C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiB5iB,GACjB4gB,GAAWL,EAAMuB,WAAY9hB,EAAWyf,EAAQlZ,GAChDvG,EAAUr8B,GAAKq8B,EAAUl9B,EACzBk9B,EAAUtpB,GAAKspB,EAAUl/B,EACzB8/C,GAAWL,EAAMwB,eAAgB/hB,EAAWyf,EAAQlZ,GACpDxjB,EAAMid,UAAY,CACdrX,KAAMqX,EAAUrX,KAChBH,IAAKwX,EAAUxX,IACfC,MAAOuX,EAAUrX,KAAOqX,EAAUl9B,EAClC4lB,OAAQsX,EAAUxX,IAAMwX,EAAUl/B,EAClC0rB,OAAQwT,EAAUl/B,EAClB+oB,MAAOmW,EAAUl9B,GAErB6R,EAAK4rC,EAAMvgB,UAAY0f,IACnB,MAAMrkB,EAAMqkB,EAAOrkB,IACnBtsB,OAAOC,OAAOqsB,EAAKtY,EAAMid,WACzB3E,EAAIuI,OAAO5D,EAAUl9B,EAAGk9B,EAAUl/B,EAAG,CACjC6nB,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,KAGpB,GAGJ,MAAMm6B,GACL,cAAAC,CAAe12B,EAAQ0qB,GAAc,CACrC,cAAAiM,CAAep+B,GACR,OAAO,CACX,CACH,gBAAA+X,CAAiB3Z,EAAO9S,EAAMgM,GAAW,CACzC,mBAAA0gB,CAAoB5Z,EAAO9S,EAAMgM,GAAW,CAC5C,mBAAA4I,GACO,OAAO,CACX,CACH,cAAAm+B,CAAe1oB,EAASzQ,EAAO2C,EAAQsqB,GAGhC,OAFAjtB,EAAQ9oB,KAAKC,IAAI,EAAG6oB,GAASyQ,EAAQzQ,OACrC2C,EAASA,GAAU8N,EAAQ9N,OACpB,CACH3C,QACA2C,OAAQzrB,KAAKC,IAAI,EAAG81C,EAAc/1C,KAAK8X,MAAMgR,EAAQitB,GAAetqB,GAE5E,CACH,UAAAy2B,CAAW72B,GACJ,OAAO,CACX,CACH,YAAA82B,CAAa5e,GACV,EAGJ,MAAM6e,WAAsBN,GACxB,cAAAC,CAAerrC,GACX,OAAOA,GAAQA,EAAK4U,YAAc5U,EAAK4U,WAAW,OAAS,IAC/D,CACA,YAAA62B,CAAa5e,GACTA,EAAOxuB,QAAQwO,WAAY,CAC/B,EAGJ,MAAM8+B,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBzwC,GAAkB,OAAVA,GAA4B,KAAVA,EAoC3C0wC,KAAuBznB,IAA+B,CACxDE,SAAS,GAOb,SAASwnB,GAAelhC,EAAO9S,EAAMgM,GAC7B8G,GAASA,EAAMqJ,QACfrJ,EAAMqJ,OAAOuQ,oBAAoB1sB,EAAMgM,EAAU+nC,GAEzD,CAYA,SAASE,GAAiBC,EAAU/3B,GAChC,IAAK,MAAMpI,KAAQmgC,EACf,GAAIngC,IAASoI,GAAUpI,EAAKogC,SAASh4B,GACjC,OAAO,CAGnB,CACA,SAASi4B,GAAqBthC,EAAO9S,EAAMgM,GACvC,MAAMmQ,EAASrJ,EAAMqJ,OACfk4B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMnT,KAASkT,EAChBC,EAAUA,GAAWP,GAAiB5S,EAAMoT,WAAYt4B,GACxDq4B,EAAUA,IAAYP,GAAiB5S,EAAMqT,aAAcv4B,GAE3Dq4B,GACAxoC,MAOR,OAJAqoC,EAASM,QAAQhrB,SAAU,CACvBirB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,SAASS,GAAqBhiC,EAAO9S,EAAMgM,GACvC,MAAMmQ,EAASrJ,EAAMqJ,OACfk4B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMnT,KAASkT,EAChBC,EAAUA,GAAWP,GAAiB5S,EAAMqT,aAAcv4B,GAC1Dq4B,EAAUA,IAAYP,GAAiB5S,EAAMoT,WAAYt4B,GAEzDq4B,GACAxoC,MAOR,OAJAqoC,EAASM,QAAQhrB,SAAU,CACvBirB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,MAAMU,GAAqB,IAAInjC,IAC/B,IAAIojC,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAMvoC,OAAO8H,iBACfygC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB1oC,QAAQ,CAAC2L,EAAQlF,KAC5BA,EAAMkJ,0BAA4Bk5B,GAClCl9B,MAGZ,CAaA,SAASm9B,GAAqBriC,EAAO9S,EAAMgM,GACvC,MAAMmQ,EAASrJ,EAAMqJ,OACfi5B,EAAYj5B,GAAUyN,GAAezN,GAC3C,IAAKi5B,EACD,OAEJ,MAAMp9B,EAASnL,GAAU,CAAC+M,EAAO2C,KAC7B,MAAM1pB,EAAIuiD,EAAUC,YACpBrpC,EAAS4N,EAAO2C,GACZ1pB,EAAIuiD,EAAUC,aACdrpC,KAELW,QACG0nC,EAAW,IAAIiB,eAAgBf,IACjC,MAAMlT,EAAQkT,EAAQ,GAChB36B,EAAQynB,EAAMkU,YAAY37B,MAC1B2C,EAAS8kB,EAAMkU,YAAYh5B,OACnB,IAAV3C,GAA0B,IAAX2C,GAGnBvE,EAAO4B,EAAO2C,KAIlB,OAFA83B,EAASM,QAAQS,GAlCrB,SAAuCtiC,EAAOkF,GACrC+8B,GAAmBxtC,MACpBoF,OAAO8f,iBAAiB,SAAUwoB,IAEtCF,GAAmBvoC,IAAIsG,EAAOkF,EAClC,CA8BIw9B,CAA8B1iC,EAAOkF,GAC9Bq8B,CACX,CACA,SAASoB,GAAgB3iC,EAAO9S,EAAMq0C,GAC9BA,GACAA,EAASqB,aAEA,WAAT11C,GApCR,SAAyC8S,GACrCiiC,GAAmB1vB,OAAOvS,GACrBiiC,GAAmBxtC,MACpBoF,OAAO+f,oBAAoB,SAAUuoB,GAE7C,CAgCQU,CAAgC7iC,EAExC,CACA,SAAS8iC,GAAqB9iC,EAAO9S,EAAMgM,GACvC,MAAMmQ,EAASrJ,EAAMqJ,OACfuH,EAAQ7W,GAAWke,IACH,OAAdjY,EAAMuC,KACNrJ,EAtHZ,SAAyB+e,EAAOjY,GAC5B,MAAM9S,EAAOozC,GAAYroB,EAAM/qB,OAAS+qB,EAAM/qB,MACxC,EAAEtM,EAAE,EAAE+S,GAAOqkB,GAAoBC,EAAOjY,GAC9C,MAAO,CACH9S,OACA8S,QACA+iC,OAAQ9qB,EACRr3B,OAAS2N,IAAN3N,EAAkBA,EAAI,KACzB+S,OAASpF,IAANoF,EAAkBA,EAAI,KAEjC,CA4GqBqvC,CAAgB/qB,EAAOjY,KAErCA,GAEH,OApIJ,SAAqBiB,EAAM/T,EAAMgM,GACzB+H,GACAA,EAAK0Y,iBAAiBzsB,EAAMgM,EAAU+nC,GAE9C,CA+HIgC,CAAY55B,EAAQnc,EAAM0jB,GACnBA,CACX,CACC,MAAMsyB,WAAoBpD,GAC1B,cAAAC,CAAe12B,EAAQ0qB,GAChB,MAAMnyB,EAAUyH,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAI1H,GAAWA,EAAQyH,SAAWA,GA/KzC,SAAoBA,EAAQ0qB,GACzB,MAAM5xB,EAAQkH,EAAOlH,MACfghC,EAAe95B,EAAO+5B,aAAa,UACnCC,EAAch6B,EAAO+5B,aAAa,SAcxC,GAbA/5B,EAAOg3B,IAAe,CAClBpiB,QAAS,CACLxU,OAAQ05B,EACRr8B,MAAOu8B,EACPlhC,MAAO,CACH0D,QAAS1D,EAAM0D,QACf4D,OAAQtH,EAAMsH,OACd3C,MAAO3E,EAAM2E,SAIzB3E,EAAM0D,QAAU1D,EAAM0D,SAAW,QACjC1D,EAAMgW,UAAYhW,EAAMgW,WAAa,aACjC6oB,GAAcqC,GAAc,CAC5B,MAAMC,EAAezpB,GAAaxQ,EAAQ,cACrB9a,IAAjB+0C,IACAj6B,EAAOvC,MAAQw8B,EAEvB,CACA,GAAItC,GAAcmC,GACd,GAA4B,KAAxB95B,EAAOlH,MAAMsH,OACbJ,EAAOI,OAASJ,EAAOvC,OAASitB,GAAe,OAC5C,CACH,MAAMwP,EAAgB1pB,GAAaxQ,EAAQ,eACrB9a,IAAlBg1C,IACAl6B,EAAOI,OAAS85B,EAExB,CAGR,CA8IYC,CAAWn6B,EAAQ0qB,GACZnyB,GAEJ,IACX,CACH,cAAAo+B,CAAep+B,GACR,MAAMyH,EAASzH,EAAQyH,OACvB,IAAKA,EAAOg3B,IACR,OAAO,EAEX,MAAMpiB,EAAU5U,EAAOg3B,IAAapiB,QACpC,CACI,SACA,SACF1kB,QAASsV,IACP,MAAMte,EAAQ0tB,EAAQpP,GAClBve,EAAcC,GACd8Y,EAAOo6B,gBAAgB50B,GAEvBxF,EAAOq6B,aAAa70B,EAAMte,KAGlC,MAAM4R,EAAQ8b,EAAQ9b,OAAS,CAAC,EAMhC,OALAnW,OAAOsB,KAAK6U,GAAO5I,QAAS3G,IACxByW,EAAOlH,MAAMvP,GAAOuP,EAAMvP,KAE9ByW,EAAOvC,MAAQuC,EAAOvC,aACfuC,EAAOg3B,KACP,CACX,CACH,gBAAA1mB,CAAiB3Z,EAAO9S,EAAMgM,GACvBjL,KAAK2rB,oBAAoB5Z,EAAO9S,GAChC,MAAMy2C,EAAU3jC,EAAM4jC,WAAa5jC,EAAM4jC,SAAW,CAAC,GAM/CnJ,EALW,CACboJ,OAAQvC,GACRwC,OAAQ9B,GACR98B,OAAQm9B,IAEan1C,IAAS41C,GAClCa,EAAQz2C,GAAQutC,EAAQz6B,EAAO9S,EAAMgM,EACzC,CACH,mBAAA0gB,CAAoB5Z,EAAO9S,GACpB,MAAMy2C,EAAU3jC,EAAM4jC,WAAa5jC,EAAM4jC,SAAW,CAAC,GAC/ChzB,EAAQ+yB,EAAQz2C,GACjB0jB,KAGY,CACbizB,OAAQlB,GACRmB,OAAQnB,GACRz9B,OAAQy9B,IAEaz1C,IAASg0C,IAC1BlhC,EAAO9S,EAAM0jB,GACrB+yB,EAAQz2C,QAAQqB,EACpB,CACA,mBAAAuT,GACI,OAAOjI,OAAO8H,gBAClB,CACH,cAAAs+B,CAAe52B,EAAQvC,EAAO2C,EAAQsqB,GAC/B,ODhsCR,SAAwB1qB,EAAQ06B,EAASC,EAAUjQ,GAC/C,MAAM5xB,EAAQmV,GAAiBjO,GACzB46B,EAAUtsB,GAAmBxV,EAAO,UACpCyL,EAAWsJ,GAAc/U,EAAMyL,SAAUvE,EAAQ,gBAAkBtU,GACnEkhC,EAAY/e,GAAc/U,EAAM8zB,UAAW5sB,EAAQ,iBAAmBtU,GACtEmvC,EAhCV,SAA0B76B,EAAQvC,EAAO2C,GACrC,IAAImE,EAAUqoB,EACd,QAAc1nC,IAAVuY,QAAkCvY,IAAXkb,EAAsB,CAC7C,MAAM64B,EAAYj5B,GAAUyN,GAAezN,GAC3C,GAAKi5B,EAGE,CACH,MAAMx3B,EAAOw3B,EAAU1pB,wBACjBurB,EAAiB7sB,GAAiBgrB,GAClC8B,EAAkBzsB,GAAmBwsB,EAAgB,SAAU,SAC/DE,EAAmB1sB,GAAmBwsB,EAAgB,WAC5Dr9B,EAAQgE,EAAKhE,MAAQu9B,EAAiBv9B,MAAQs9B,EAAgBt9B,MAC9D2C,EAASqB,EAAKrB,OAAS46B,EAAiB56B,OAAS26B,EAAgB36B,OACjEmE,EAAWsJ,GAAcitB,EAAev2B,SAAU00B,EAAW,eAC7DrM,EAAY/e,GAAcitB,EAAelO,UAAWqM,EAAW,eACnE,MAXIx7B,EAAQuC,EAAOk5B,YACf94B,EAASJ,EAAOi7B,YAWxB,CACA,MAAO,CACHx9B,QACA2C,SACAmE,SAAUA,GAAY7Y,GACtBkhC,UAAWA,GAAalhC,GAEhC,CAQ0BwvC,CAAiBl7B,EAAQ06B,EAASC,GACxD,IAAI,MAAEl9B,EAAM,OAAE2C,GAAYy6B,EAC1B,GAAwB,gBAApB/hC,EAAMgW,UAA6B,CACnC,MAAME,EAAUV,GAAmBxV,EAAO,SAAU,SAC9CiW,EAAWT,GAAmBxV,EAAO,WAC3C2E,GAASsR,EAAStR,MAAQuR,EAAQvR,MAClC2C,GAAU2O,EAAS3O,OAAS4O,EAAQ5O,MACxC,CAeA,OAdA3C,EAAQ9oB,KAAKC,IAAI,EAAG6oB,EAAQm9B,EAAQn9B,OACpC2C,EAASzrB,KAAKC,IAAI,EAAG81C,EAAcjtB,EAAQitB,EAActqB,EAASw6B,EAAQx6B,QAC1E3C,EAAQkS,GAAOh7B,KAAKE,IAAI4oB,EAAO8G,EAAUs2B,EAAct2B,WACvDnE,EAASuP,GAAOh7B,KAAKE,IAAIurB,EAAQwsB,EAAWiO,EAAcjO,YACtDnvB,IAAU2C,IAGVA,EAASuP,GAAOlS,EAAQ,UAEOvY,IAAZw1C,QAAsCx1C,IAAby1C,IAC1BjQ,GAAemQ,EAAcz6B,QAAUA,EAASy6B,EAAcz6B,SAChFA,EAASy6B,EAAcz6B,OACvB3C,EAAQkS,GAAOh7B,KAAK8X,MAAM2T,EAASsqB,KAEhC,CACHjtB,QACA2C,SAER,CCiqCew2B,CAAe52B,EAAQvC,EAAO2C,EAAQsqB,EACjD,CACH,UAAAmM,CAAW72B,GACJ,MAAMi5B,EAAYj5B,GAAUyN,GAAezN,GAC3C,SAAUi5B,IAAaA,EAAUkC,YACrC,EAGJ,SAASC,GAAgBp7B,GACrB,OAAKuN,MAAgD,oBAApB8tB,iBAAmCr7B,aAAkBq7B,gBAC3EtE,GAEJ8C,EACX,CAEA,MAAMyB,GACFxf,gBAAkB,CAAC,EACnBA,0BAAuB52B,EACvB3N,EACA+S,EACAsR,QAAS,EACTlS,QACAmvB,YACA,eAAA0iB,CAAgBhK,GACZ,MAAM,EAAEh6C,EAAE,EAAE+S,GAAO1F,KAAKwtC,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACHh6C,IACA+S,IAER,CACA,QAAAkxC,GACI,OAAO7uC,GAAS/H,KAAKrN,IAAMoV,GAAS/H,KAAK0F,EAC7C,CACA,QAAA8nC,CAAS/sB,EAAOo2B,GACZ,MAAMjnB,EAAQ5vB,KAAKi0B,YACnB,IAAK4iB,IAAUjnB,EAEX,OAAO5vB,KAEX,MAAMd,EAAM,CAAC,EAIb,OAHAuhB,EAAMnV,QAASsV,IACX1hB,EAAI0hB,GAAQgP,EAAMhP,IAASgP,EAAMhP,GAAM5J,SAAW4Y,EAAMhP,GAAM8R,IAAM1yB,KAAK4gB,KAEtE1hB,CACX,EA2EH,SAASgnB,GAAKpU,EAAOglC,EAAUjR,EAASkR,EAAYC,GACjD,MAAMptC,EAAQ3G,EAAe8zC,EAAY,GACnCltC,EAAM9Z,KAAKE,IAAIgT,EAAe+zC,EAAUllC,EAAM3T,QAAS2T,EAAM3T,QACnE,IACIA,EAAQnM,EAAGw0B,EADX/Z,EAAQ,EAQZ,IANAo5B,EAAU91C,KAAKknD,KAAKpR,GAChBmR,IACA74C,EAAS64C,EAAWD,EACpBlR,EAAU1nC,EAASpO,KAAK8X,MAAM1J,EAAS0nC,IAE3Crf,EAAO5c,EACD4c,EAAO,GACT/Z,IACA+Z,EAAOz2B,KAAKL,MAAMka,EAAQ6C,EAAQo5B,GAEtC,IAAI7zC,EAAIjC,KAAKC,IAAI4Z,EAAO,GAAI5X,EAAI6X,EAAK7X,IAC7BA,IAAMw0B,IACNswB,EAAS9wC,KAAK8L,EAAM9f,IACpBya,IACA+Z,EAAOz2B,KAAKL,MAAMka,EAAQ6C,EAAQo5B,GAG9C,CAeA,MACMqR,GAAiB,CAAC9hC,EAAO6rB,EAAMppB,IAAkB,QAATopB,GAA2B,SAATA,EAAkB7rB,EAAM6rB,GAAQppB,EAASzC,EAAM6rB,GAAQppB,EACjHs/B,GAAgB,CAACC,EAAaC,IAAgBtnD,KAAKE,IAAIonD,GAAiBD,EAAaA,GAC1F,SAASE,GAAO7yB,EAAK8yB,GAClB,MAAM1tB,EAAS,GACT2tB,EAAY/yB,EAAItmB,OAASo5C,EACzBp4C,EAAMslB,EAAItmB,OAChB,IAAInM,EAAI,EACR,KAAMA,EAAImN,EAAKnN,GAAKwlD,EAChB3tB,EAAO7jB,KAAKye,EAAI10B,KAAK8X,MAAM7V,KAE/B,OAAO63B,CACX,CACC,SAAS4tB,GAAoBriC,EAAO/Q,EAAOqzC,GACxC,MAAMv5C,EAASiX,EAAMtD,MAAM3T,OACrBw5C,EAAa5nD,KAAKE,IAAIoU,EAAOlG,EAAS,GACtCyL,EAAQwL,EAAMwuB,YACd/5B,EAAMuL,EAAMyuB,UACZt8B,EAAU,KAChB,IACIsQ,EADA+/B,EAAYxiC,EAAMgrB,gBAAgBuX,GAEtC,KAAID,IAEI7/B,EADW,IAAX1Z,EACSpO,KAAKC,IAAI4nD,EAAYhuC,EAAOC,EAAM+tC,GAC1B,IAAVvzC,GACG+Q,EAAMgrB,gBAAgB,GAAKwX,GAAa,GAExCA,EAAYxiC,EAAMgrB,gBAAgBuX,EAAa,IAAM,EAEnEC,GAAaD,EAAatzC,EAAQwT,GAAUA,EACxC+/B,EAAYhuC,EAAQrC,GAAWqwC,EAAY/tC,EAAMtC,IAIzD,OAAOqwC,CACX,CAcC,SAASC,GAAkB/yC,GACxB,OAAOA,EAAQuT,UAAYvT,EAAQwT,WAAa,CACpD,CACC,SAASw/B,GAAehzC,EAASmc,GAC9B,IAAKnc,EAAQ8S,QACT,OAAO,EAEX,MAAM5D,EAAOgN,GAAOlc,EAAQkP,KAAMiN,GAC5B1J,EAAUwJ,GAAUjc,EAAQyS,SAElC,OADchlB,EAAQuS,EAAQiU,MAAQjU,EAAQiU,KAAK5a,OAAS,GAC7C6V,EAAKG,WAAaoD,EAAQiE,MAC7C,CAcA,SAASu8B,GAAW7rC,EAAOqgC,EAAU1oC,GAChC,IAAI3E,EAAM+M,GAAmBC,GAI9B,OAHIrI,GAAwB,UAAb0oC,IAAyB1oC,GAAwB,UAAb0oC,KAC/CrtC,EA7Ea,CAACgN,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1E8rC,CAAa94C,IAEhBA,CACX,CAwCA,MAAM+4C,WAAcvB,GAChB,WAAA13C,CAAYizB,GACRiQ,QACCliC,KAAKoC,GAAK6vB,EAAI7vB,GACdpC,KAAKf,KAAOgzB,EAAIhzB,KAChBe,KAAK8E,aAAUxE,EACfN,KAAKsU,IAAM2d,EAAI3d,IACftU,KAAK+R,MAAQkgB,EAAIlgB,MACjB/R,KAAKwX,SAAMlX,EACXN,KAAK0X,YAASpX,EACdN,KAAK2X,UAAOrX,EACZN,KAAKyX,WAAQnX,EACbN,KAAK6Y,WAAQvY,EACbN,KAAKwb,YAASlb,EACfN,KAAKk4C,SAAW,CACZvgC,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEX1X,KAAK2f,cAAWrf,EAChBN,KAAKgoC,eAAY1nC,EACjBN,KAAKm4C,gBAAa73C,EAClBN,KAAKo4C,mBAAgB93C,EACrBN,KAAKq4C,iBAAc/3C,EACnBN,KAAKs4C,kBAAeh4C,EACpBN,KAAKgN,UAAO1M,EACZN,KAAKu4C,mBAAgBj4C,EACtBN,KAAK/P,SAAMqQ,EACXN,KAAKhQ,SAAMsQ,EACXN,KAAKw4C,YAASl4C,EACbN,KAAK8R,MAAQ,GACb9R,KAAKy4C,eAAiB,KACtBz4C,KAAK04C,YAAc,KACnB14C,KAAK24C,YAAc,KACpB34C,KAAKkgC,QAAU,EACflgC,KAAK44C,WAAa,EAClB54C,KAAK64C,kBAAoB,CAAC,EACzB74C,KAAK4jC,iBAActjC,EACnBN,KAAK6jC,eAAYvjC,EAClBN,KAAKosC,gBAAiB,EACtBpsC,KAAK84C,cAAWx4C,EAChBN,KAAK+4C,cAAWz4C,EAChBN,KAAKg5C,mBAAgB14C,EACrBN,KAAKi5C,mBAAgB34C,EACrBN,KAAKk5C,aAAe,EACpBl5C,KAAKm5C,aAAe,EACpBn5C,KAAK2/B,OAAS,CAAC,EACf3/B,KAAKo5C,mBAAoB,EACzBp5C,KAAK63B,cAAWv3B,CACpB,CACH,IAAAorC,CAAK5mC,GACE9E,KAAK8E,QAAUA,EAAQif,WAAW/jB,KAAKqb,cACvCrb,KAAKgN,KAAOlI,EAAQkI,KACpBhN,KAAK+4C,SAAW/4C,KAAK+lB,MAAMjhB,EAAQ7U,KACnC+P,KAAK84C,SAAW94C,KAAK+lB,MAAMjhB,EAAQ9U,KACnCgQ,KAAKi5C,cAAgBj5C,KAAK+lB,MAAMjhB,EAAQu0C,cACxCr5C,KAAKg5C,cAAgBh5C,KAAK+lB,MAAMjhB,EAAQw0C,aAC5C,CACH,KAAAvzB,CAAM+W,EAAKz4B,GACJ,OAAOy4B,CACX,CACH,aAAA3vB,GACO,IAAI,SAAE4rC,EAAS,SAAED,EAAS,cAAEG,EAAc,cAAED,GAAmBh5C,KAK/D,OAJA+4C,EAAWh2C,EAAgBg2C,EAAUl2C,OAAOkE,mBAC5C+xC,EAAW/1C,EAAgB+1C,EAAUj2C,OAAOm5B,mBAC5Cid,EAAgBl2C,EAAgBk2C,EAAep2C,OAAOkE,mBACtDiyC,EAAgBj2C,EAAgBi2C,EAAen2C,OAAOm5B,mBAC/C,CACH/rC,IAAK8S,EAAgBg2C,EAAUE,GAC/BjpD,IAAK+S,EAAgB+1C,EAAUE,GAC/B/rC,WAAYrK,EAAem2C,GAC3B7rC,WAAYtK,EAAek2C,GAEnC,CACH,SAAAnd,CAAUC,GACH,IACIl0B,GADA,IAAEzX,EAAI,IAAED,EAAI,WAAEid,EAAW,WAAEC,GAAgBlN,KAAKmN,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACHjd,MACAD,OAGR,MAAMupD,EAAQv5C,KAAK61B,0BACnB,IAAI,IAAI7jC,EAAI,EAAGiS,EAAOs1C,EAAMp7C,OAAQnM,EAAIiS,IAAQjS,EAC5C0V,EAAQ6xC,EAAMvnD,GAAG+jC,WAAW4F,UAAU37B,KAAM47B,GACvC3uB,IACDhd,EAAMF,KAAKE,IAAIA,EAAKyX,EAAMzX,MAEzBid,IACDld,EAAMD,KAAKC,IAAIA,EAAK0X,EAAM1X,MAKlC,OAFAC,EAAMid,GAAcjd,EAAMD,EAAMA,EAAMC,EACtCD,EAAMid,GAAchd,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,IAAK8S,EAAgB9S,EAAK8S,EAAgB/S,EAAKC,IAC/CD,IAAK+S,EAAgB/S,EAAK+S,EAAgB9S,EAAKD,IAEvD,CACH,UAAA2+C,GACO,MAAO,CACHh3B,KAAM3X,KAAKq4C,aAAe,EAC1B7gC,IAAKxX,KAAKm4C,YAAc,EACxB1gC,MAAOzX,KAAKs4C,cAAgB,EAC5B5gC,OAAQ1X,KAAKo4C,eAAiB,EAEtC,CACH,QAAAoB,GACO,OAAOx5C,KAAK8R,KAChB,CACH,SAAAopB,GACO,MAAMnhB,EAAO/Z,KAAK+R,MAAMgI,KACxB,OAAO/Z,KAAK8E,QAAQm2B,SAAWj7B,KAAKqiC,eAAiBtoB,EAAK0/B,QAAU1/B,EAAK2/B,UAAY3/B,EAAKkhB,QAAU,EACxG,CACH,aAAA0e,CAAc3qB,EAAYhvB,KAAK+R,MAAMid,WAE9B,OADchvB,KAAK04C,cAAgB14C,KAAK04C,YAAc14C,KAAK45C,mBAAmB5qB,GAElF,CACA,YAAAoiB,GACIpxC,KAAK2/B,OAAS,CAAC,EACf3/B,KAAKo5C,mBAAoB,CAC7B,CACA,YAAAS,GACIv2C,EAAStD,KAAK8E,QAAQ+0C,aAAc,CAChC75C,MAER,CACH,MAAA4yB,CAAOjT,EAAUqoB,EAAWgO,GACrB,MAAM,YAAEl+B,EAAY,MAAEG,EAAQnG,MAAOgoC,GAAc95C,KAAK8E,QAClDi1C,EAAaD,EAASC,WAC5B/5C,KAAK65C,eACL75C,KAAK2f,SAAWA,EAChB3f,KAAKgoC,UAAYA,EACjBhoC,KAAKk4C,SAAWlC,EAAUj4C,OAAOC,OAAO,CACpC2Z,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACTs+B,GACHh2C,KAAK8R,MAAQ,KACb9R,KAAK24C,YAAc,KACnB34C,KAAKy4C,eAAiB,KACtBz4C,KAAK04C,YAAc,KACnB14C,KAAKg6C,sBACLh6C,KAAKi6C,gBACLj6C,KAAKk6C,qBACLl6C,KAAK44C,WAAa54C,KAAKqiC,eAAiBriC,KAAK6Y,MAAQm9B,EAAQr+B,KAAOq+B,EAAQv+B,MAAQzX,KAAKwb,OAASw6B,EAAQx+B,IAAMw+B,EAAQt+B,OACnH1X,KAAKo5C,oBACNp5C,KAAKm6C,mBACLn6C,KAAKo6C,sBACLp6C,KAAKq6C,kBACLr6C,KAAKw4C,ODxuEb,SAAmB8B,EAAQriC,EAAOH,GAClC,MAAM,IAAE7nB,EAAI,IAAED,GAASsqD,EACjB3I,EAASzuC,EAAY+U,GAAQjoB,EAAMC,GAAO,GAC1CsqD,EAAW,CAACj4C,EAAO+hB,IAAMvM,GAAyB,IAAVxV,EAAc,EAAIA,EAAQ+hB,EACxE,MAAO,CACHp0B,IAAKsqD,EAAStqD,GAAMF,KAAKyX,IAAImqC,IAC7B3hD,IAAKuqD,EAASvqD,EAAK2hD,GAE3B,CCguE0B6I,CAAUx6C,KAAMiY,EAAOH,GACrC9X,KAAKo5C,mBAAoB,GAE7Bp5C,KAAKy6C,mBACLz6C,KAAK8R,MAAQ9R,KAAK06C,cAAgB,GAClC16C,KAAK26C,kBACL,MAAMC,EAAkBb,EAAa/5C,KAAK8R,MAAM3T,OAChD6B,KAAK66C,sBAAsBD,EAAkBtD,GAAOt3C,KAAK8R,MAAOioC,GAAc/5C,KAAK8R,OACnF9R,KAAKyzB,YACLzzB,KAAK86C,+BACL96C,KAAK+6C,yBACL/6C,KAAKg7C,8BACDlB,EAASliC,UAAYkiC,EAASzgC,UAAgC,SAApBygC,EAASx1C,UACnDtE,KAAK8R,MA3YjB,SAAkBsD,EAAOtD,GACrB,MAAMgoC,EAAW1kC,EAAMtQ,QAAQgN,MACzBmpC,EAyBV,SAA2B7lC,GACvB,MAAMyC,EAASzC,EAAMtQ,QAAQ+S,OACvBS,EAAalD,EAAM8lC,YACnBC,EAAW/lC,EAAM8qB,QAAU5nB,GAAcT,EAAS,EAAI,GACtDujC,EAAWhmC,EAAMwjC,WAAatgC,EACpC,OAAOvoB,KAAK8X,MAAM9X,KAAKE,IAAIkrD,EAAUC,GACzC,CA/B+BC,CAAkBjmC,GACvCkmC,EAAavrD,KAAKE,IAAI6pD,EAASzC,eAAiB4D,EAAoBA,GACpEM,EAAezB,EAASrgC,MAAM+hC,QA6CvC,SAAyB1pC,GACtB,MAAM+X,EAAS,GACf,IAAI73B,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAO6N,EAAM3T,OAAQnM,EAAIiS,EAAMjS,IAClC8f,EAAM9f,GAAGynB,OACToQ,EAAO7jB,KAAKhU,GAGpB,OAAO63B,CACX,CAtDkD4xB,CAAgB3pC,GAAS,GACjE4pC,EAAkBH,EAAap9C,OAC/Bw9C,EAAQJ,EAAa,GACrB3wC,EAAO2wC,EAAaG,EAAkB,GACtC5E,EAAW,GACjB,GAAI4E,EAAkBJ,EAElB,OAgDP,SAAoBxpC,EAAOglC,EAAUyE,EAAc1V,GAChD,IAEI7zC,EAFAya,EAAQ,EACR+Z,EAAO+0B,EAAa,GAGxB,IADA1V,EAAU91C,KAAKknD,KAAKpR,GAChB7zC,EAAI,EAAGA,EAAI8f,EAAM3T,OAAQnM,IACrBA,IAAMw0B,IACNswB,EAAS9wC,KAAK8L,EAAM9f,IACpBya,IACA+Z,EAAO+0B,EAAa9uC,EAAQo5B,GAGxC,CA7DQ+V,CAAW9pC,EAAOglC,EAAUyE,EAAcG,EAAkBJ,GACrDxE,EAEX,MAAMjR,EAqBT,SAA0B0V,EAAczpC,EAAOwpC,GAC5C,MAAMO,EA4DT,SAAwBp3B,GACrB,MAAMtlB,EAAMslB,EAAItmB,OAChB,IAAInM,EAAG45C,EACP,GAAIzsC,EAAM,EACN,OAAO,EAEX,IAAIysC,EAAOnnB,EAAI,GAAIzyB,EAAI,EAAGA,EAAImN,IAAOnN,EACjC,GAAIyyB,EAAIzyB,GAAKyyB,EAAIzyB,EAAI,KAAO45C,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6BkQ,CAAeP,GAClC1V,EAAU/zB,EAAM3T,OAASm9C,EAC/B,IAAKO,EACD,OAAO9rD,KAAKC,IAAI61C,EAAS,GAE7B,MAAMkW,EDtsGN,SAAoBz5C,GACpB,MAAMunB,EAAS,GACT3gB,EAAOnZ,KAAKmZ,KAAK5G,GACvB,IAAItQ,EACJ,IAAIA,EAAI,EAAGA,EAAIkX,EAAMlX,IACbsQ,EAAQtQ,IAAM,IACd63B,EAAO7jB,KAAKhU,GACZ63B,EAAO7jB,KAAK1D,EAAQtQ,IAO5B,OAJIkX,KAAiB,EAAPA,IACV2gB,EAAO7jB,KAAKkD,GAEhB2gB,EAAOkW,KAAK,CAAClvC,EAAGC,IAAID,EAAIC,GAAG8/B,MACpB/G,CACX,CCurGoBmyB,CAAWH,GAC3B,IAAI,IAAI7pD,EAAI,EAAGiS,EAAO83C,EAAQ59C,OAAS,EAAGnM,EAAIiS,EAAMjS,IAAI,CACpD,MAAM6/B,EAASkqB,EAAQ/pD,GACvB,GAAI6/B,EAASgU,EACT,OAAOhU,CAEf,CACA,OAAO9hC,KAAKC,IAAI61C,EAAS,EAC7B,CAnCoBoW,CAAiBV,EAAczpC,EAAOwpC,GACtD,GAAII,EAAkB,EAAG,CACrB,IAAI1pD,EAAGiS,EACP,MAAMi4C,EAAkBR,EAAkB,EAAI3rD,KAAKL,OAAOkb,EAAO+wC,IAAUD,EAAkB,IAAM,KAEnG,IADAx1B,GAAKpU,EAAOglC,EAAUjR,EAASxjC,EAAc65C,GAAmB,EAAIP,EAAQO,EAAiBP,GACzF3pD,EAAI,EAAGiS,EAAOy3C,EAAkB,EAAG1pD,EAAIiS,EAAMjS,IAC7Ck0B,GAAKpU,EAAOglC,EAAUjR,EAAS0V,EAAavpD,GAAIupD,EAAavpD,EAAI,IAGrE,OADAk0B,GAAKpU,EAAOglC,EAAUjR,EAASj7B,EAAMvI,EAAc65C,GAAmBpqC,EAAM3T,OAASyM,EAAOsxC,GACrFpF,CACX,CAEA,OADA5wB,GAAKpU,EAAOglC,EAAUjR,GACfiR,CACX,CAiXyBz9B,CAASrZ,KAAMA,KAAK8R,OACjC9R,KAAK24C,YAAc,KACnB34C,KAAKm8C,iBAELvB,GACA56C,KAAK66C,sBAAsB76C,KAAK8R,OAEpC9R,KAAKo8C,YACLp8C,KAAKq8C,MACLr8C,KAAKs8C,WACLt8C,KAAKu8C,aACT,CACH,SAAA9oB,GACO,IACI4Q,EAAYE,EADZiY,EAAgBx8C,KAAK8E,QAAQjB,QAE7B7D,KAAKqiC,gBACLgC,EAAarkC,KAAK2X,KAClB4sB,EAAWvkC,KAAKyX,QAEhB4sB,EAAarkC,KAAKwX,IAClB+sB,EAAWvkC,KAAK0X,OAChB8kC,GAAiBA,GAErBx8C,KAAK4jC,YAAcS,EACnBrkC,KAAK6jC,UAAYU,EACjBvkC,KAAKosC,eAAiBoQ,EACtBx8C,KAAKkgC,QAAUqE,EAAWF,EAC1BrkC,KAAKy8C,eAAiBz8C,KAAK8E,QAAQ43C,aACvC,CACA,WAAAH,GACIj5C,EAAStD,KAAK8E,QAAQy3C,YAAa,CAC/Bv8C,MAER,CACA,mBAAAg6C,GACI12C,EAAStD,KAAK8E,QAAQk1C,oBAAqB,CACvCh6C,MAER,CACA,aAAAi6C,GACQj6C,KAAKqiC,gBACLriC,KAAK6Y,MAAQ7Y,KAAK2f,SAClB3f,KAAK2X,KAAO,EACZ3X,KAAKyX,MAAQzX,KAAK6Y,QAElB7Y,KAAKwb,OAASxb,KAAKgoC,UACnBhoC,KAAKwX,IAAM,EACXxX,KAAK0X,OAAS1X,KAAKwb,QAEvBxb,KAAKq4C,YAAc,EACnBr4C,KAAKm4C,WAAa,EAClBn4C,KAAKs4C,aAAe,EACpBt4C,KAAKo4C,cAAgB,CACzB,CACA,kBAAA8B,GACI52C,EAAStD,KAAK8E,QAAQo1C,mBAAoB,CACtCl6C,MAER,CACA,UAAA28C,CAAWhnC,GACP3V,KAAK+R,MAAM6qC,cAAcjnC,EAAM3V,KAAKqb,cACpC/X,EAAStD,KAAK8E,QAAQ6Q,GAAO,CACzB3V,MAER,CACA,gBAAAm6C,GACIn6C,KAAK28C,WAAW,mBACpB,CACA,mBAAAvC,GAAuB,CACvB,eAAAC,GACIr6C,KAAK28C,WAAW,kBACpB,CACA,gBAAAlC,GACIz6C,KAAK28C,WAAW,mBACpB,CACH,UAAAjC,GACO,MAAO,EACX,CACA,eAAAC,GACI36C,KAAK28C,WAAW,kBACpB,CACA,2BAAAE,GACIv5C,EAAStD,KAAK8E,QAAQ+3C,4BAA6B,CAC/C78C,MAER,CACH,kBAAA88C,CAAmBhrC,GACZ,MAAMgoC,EAAW95C,KAAK8E,QAAQgN,MAC9B,IAAI9f,EAAGiS,EAAM0sB,EACb,IAAI3+B,EAAI,EAAGiS,EAAO6N,EAAM3T,OAAQnM,EAAIiS,EAAMjS,IACtC2+B,EAAO7e,EAAM9f,GACb2+B,EAAK4L,MAAQj5B,EAASw2C,EAASx2C,SAAU,CACrCqtB,EAAKruB,MACLtQ,EACA8f,GACD9R,KAEX,CACA,0BAAA+8C,GACIz5C,EAAStD,KAAK8E,QAAQi4C,2BAA4B,CAC9C/8C,MAER,CACA,4BAAA86C,GACIx3C,EAAStD,KAAK8E,QAAQg2C,6BAA8B,CAChD96C,MAER,CACA,sBAAA+6C,GACI,MAAMj2C,EAAU9E,KAAK8E,QACfg1C,EAAWh1C,EAAQgN,MACnBkrC,EAAW7F,GAAcn3C,KAAK8R,MAAM3T,OAAQ2G,EAAQgN,MAAMulC,eAC1Dr+B,EAAc8gC,EAAS9gC,aAAe,EACtCC,EAAc6gC,EAAS7gC,YAC7B,IACIV,EAAWyvB,EAAWiV,EADtB1E,EAAgBv/B,EAEpB,IAAKhZ,KAAKk9C,eAAiBpD,EAASliC,SAAWoB,GAAeC,GAAe+jC,GAAY,IAAMh9C,KAAKqiC,eAEhG,YADAriC,KAAKu4C,cAAgBv/B,GAGzB,MAAMmkC,EAAan9C,KAAKo9C,iBAClBC,EAAgBF,EAAWG,OAAOzkC,MAClC0kC,EAAiBJ,EAAWK,QAAQhiC,OACpCmE,EAAWxV,GAAYnK,KAAK+R,MAAM8G,MAAQwkC,EAAe,EAAGr9C,KAAK2f,UACvEpH,EAAYzT,EAAQ+S,OAAS7X,KAAK2f,SAAWq9B,EAAWr9B,GAAYq9B,EAAW,GAC3EK,EAAgB,EAAI9kC,IACpBA,EAAYoH,GAAYq9B,GAAYl4C,EAAQ+S,OAAS,GAAM,IAC3DmwB,EAAYhoC,KAAKgoC,UAAY6P,GAAkB/yC,EAAQoT,MAAQ4hC,EAASviC,QAAUugC,GAAehzC,EAAQgU,MAAO9Y,KAAK+R,MAAMjN,QAAQkP,MACnIipC,EAAmBltD,KAAKmZ,KAAKm0C,EAAgBA,EAAgBE,EAAiBA,GAC9EhF,EAAgB9vC,GAAU1Y,KAAKE,IAAIF,KAAK0tD,KAAKtzC,IAAagzC,EAAWK,QAAQhiC,OAAS,GAAKjD,GAAY,EAAG,IAAKxoB,KAAK0tD,KAAKtzC,GAAY69B,EAAYiV,GAAmB,EAAG,IAAMltD,KAAK0tD,KAAKtzC,GAAYozC,EAAiBN,GAAmB,EAAG,MAC1O1E,EAAgBxoD,KAAKC,IAAIgpB,EAAajpB,KAAKE,IAAIgpB,EAAas/B,KAEhEv4C,KAAKu4C,cAAgBA,CACzB,CACA,2BAAAyC,GACI13C,EAAStD,KAAK8E,QAAQk2C,4BAA6B,CAC/Ch7C,MAER,CACA,aAAAm8C,GAAiB,CACjB,SAAAC,GACI94C,EAAStD,KAAK8E,QAAQs3C,UAAW,CAC7Bp8C,MAER,CACA,GAAAq8C,GACI,MAAMlS,EAAU,CACZtxB,MAAO,EACP2C,OAAQ,IAEN,MAAEzJ,EAAQjN,SAAWgN,MAAOgoC,EAAWhhC,MAAO4kC,EAAYxlC,KAAMylC,IAAiB39C,KACjF4X,EAAU5X,KAAKk9C,aACf7a,EAAeriC,KAAKqiC,eAC1B,GAAIzqB,EAAS,CACT,MAAMgmC,EAAc9F,GAAe4F,EAAW3rC,EAAMjN,QAAQkP,MAQ5D,GAPIquB,GACA8H,EAAQtxB,MAAQ7Y,KAAK2f,SACrBwqB,EAAQ3uB,OAASq8B,GAAkB8F,GAAYC,IAE/CzT,EAAQ3uB,OAASxb,KAAKgoC,UACtBmC,EAAQtxB,MAAQg/B,GAAkB8F,GAAYC,GAE9C9D,EAASliC,SAAW5X,KAAK8R,MAAM3T,OAAQ,CACvC,MAAM,MAAEw9C,EAAM,KAAE/wC,EAAK,OAAE0yC,EAAO,QAAEE,GAAax9C,KAAKo9C,iBAC5CS,EAAiC,EAAnB/D,EAASviC,QACvBumC,EAAev1C,GAAUvI,KAAKu4C,eAC9BjpC,EAAMvf,KAAKuf,IAAIwuC,GACfzvC,EAAMte,KAAKse,IAAIyvC,GACrB,GAAIzb,EAAc,CACd,MAAM0b,EAAcjE,EAAS5gC,OAAS,EAAI7K,EAAMivC,EAAOzkC,MAAQvJ,EAAMkuC,EAAQhiC,OAC7E2uB,EAAQ3uB,OAASzrB,KAAKE,IAAI+P,KAAKgoC,UAAWmC,EAAQ3uB,OAASuiC,EAAcF,EAC7E,KAAO,CACH,MAAMG,EAAalE,EAAS5gC,OAAS,EAAI5J,EAAMguC,EAAOzkC,MAAQxK,EAAMmvC,EAAQhiC,OAC5E2uB,EAAQtxB,MAAQ9oB,KAAKE,IAAI+P,KAAK2f,SAAUwqB,EAAQtxB,MAAQmlC,EAAaH,EACzE,CACA79C,KAAKi+C,kBAAkBtC,EAAO/wC,EAAMyD,EAAKiB,EAC7C,CACJ,CACAtP,KAAKk+C,iBACD7b,GACAriC,KAAK6Y,MAAQ7Y,KAAKkgC,QAAUnuB,EAAM8G,MAAQ7Y,KAAKk4C,SAASvgC,KAAO3X,KAAKk4C,SAASzgC,MAC7EzX,KAAKwb,OAAS2uB,EAAQ3uB,SAEtBxb,KAAK6Y,MAAQsxB,EAAQtxB,MACrB7Y,KAAKwb,OAASxb,KAAKkgC,QAAUnuB,EAAMyJ,OAASxb,KAAKk4C,SAAS1gC,IAAMxX,KAAKk4C,SAASxgC,OAEtF,CACA,iBAAAumC,CAAkBtC,EAAO/wC,EAAMyD,EAAKiB,GAChC,MAAQwC,OAAO,MAAE5F,EAAM,QAAEqL,GAAW,SAAEg1B,GAAcvsC,KAAK8E,QACnDq5C,EAAmC,IAAvBn+C,KAAKu4C,cACjB6F,EAAgC,QAAb7R,GAAoC,MAAdvsC,KAAKgN,KACpD,GAAIhN,KAAKqiC,eAAgB,CACrB,MAAMgc,EAAar+C,KAAKogC,gBAAgB,GAAKpgC,KAAK2X,KAC5C2mC,EAAct+C,KAAKyX,MAAQzX,KAAKogC,gBAAgBpgC,KAAK8R,MAAM3T,OAAS,GAC1E,IAAIk6C,EAAc,EACdC,EAAe,EACf6F,EACIC,GACA/F,EAAc/oC,EAAMqsC,EAAM9iC,MAC1By/B,EAAejqC,EAAMzD,EAAK4Q,SAE1B68B,EAAchqC,EAAMstC,EAAMngC,OAC1B88B,EAAehpC,EAAM1E,EAAKiO,OAEb,UAAV3M,EACPosC,EAAe1tC,EAAKiO,MACH,QAAV3M,EACPmsC,EAAcsD,EAAM9iC,MACH,UAAV3M,IACPmsC,EAAcsD,EAAM9iC,MAAQ,EAC5By/B,EAAe1tC,EAAKiO,MAAQ,GAEhC7Y,KAAKq4C,YAActoD,KAAKC,KAAKqoD,EAAcgG,EAAa9mC,GAAWvX,KAAK6Y,OAAS7Y,KAAK6Y,MAAQwlC,GAAa,GAC3Gr+C,KAAKs4C,aAAevoD,KAAKC,KAAKsoD,EAAegG,EAAc/mC,GAAWvX,KAAK6Y,OAAS7Y,KAAK6Y,MAAQylC,GAAc,EACnH,KAAO,CACH,IAAInG,EAAavtC,EAAK4Q,OAAS,EAC3B48B,EAAgBuD,EAAMngC,OAAS,EACrB,UAAVtP,GACAisC,EAAa,EACbC,EAAgBuD,EAAMngC,QACL,QAAVtP,IACPisC,EAAavtC,EAAK4Q,OAClB48B,EAAgB,GAEpBp4C,KAAKm4C,WAAaA,EAAa5gC,EAC/BvX,KAAKo4C,cAAgBA,EAAgB7gC,CACzC,CACJ,CACH,cAAA2mC,GACWl+C,KAAKk4C,WACLl4C,KAAKk4C,SAASvgC,KAAO5nB,KAAKC,IAAIgQ,KAAKq4C,YAAar4C,KAAKk4C,SAASvgC,MAC9D3X,KAAKk4C,SAAS1gC,IAAMznB,KAAKC,IAAIgQ,KAAKm4C,WAAYn4C,KAAKk4C,SAAS1gC,KAC5DxX,KAAKk4C,SAASzgC,MAAQ1nB,KAAKC,IAAIgQ,KAAKs4C,aAAct4C,KAAKk4C,SAASzgC,OAChEzX,KAAKk4C,SAASxgC,OAAS3nB,KAAKC,IAAIgQ,KAAKo4C,cAAep4C,KAAKk4C,SAASxgC,QAE1E,CACA,QAAA4kC,GACIh5C,EAAStD,KAAK8E,QAAQw3C,SAAU,CAC5Bt8C,MAER,CACH,YAAAqiC,GACO,MAAM,KAAEr1B,EAAK,SAAEu/B,GAAcvsC,KAAK8E,QAClC,MAAoB,QAAbynC,GAAmC,WAAbA,GAAkC,MAATv/B,CAC1D,CACH,UAAAuxC,GACO,OAAOv+C,KAAK8E,QAAQ4qC,QACxB,CACH,qBAAAmL,CAAsB/oC,GAGf,IAAI9f,EAAGiS,EACP,IAHAjE,KAAK68C,8BACL78C,KAAK88C,mBAAmBhrC,GAEpB9f,EAAI,EAAGiS,EAAO6N,EAAM3T,OAAQnM,EAAIiS,EAAMjS,IAClCqQ,EAAcyP,EAAM9f,GAAGuqC,SACvBzqB,EAAMzG,OAAOrZ,EAAG,GAChBiS,IACAjS,KAGRgO,KAAK+8C,4BACT,CACH,cAAAK,GACO,IAAID,EAAan9C,KAAK24C,YACtB,IAAKwE,EAAY,CACb,MAAMpD,EAAa/5C,KAAK8E,QAAQgN,MAAMioC,WACtC,IAAIjoC,EAAQ9R,KAAK8R,MACbioC,EAAajoC,EAAM3T,SACnB2T,EAAQwlC,GAAOxlC,EAAOioC,IAE1B/5C,KAAK24C,YAAcwE,EAAan9C,KAAKw+C,mBAAmB1sC,EAAOA,EAAM3T,OAAQ6B,KAAK8E,QAAQgN,MAAMulC,cACpG,CACA,OAAO8F,CACX,CACH,kBAAAqB,CAAmB1sC,EAAO3T,EAAQk5C,GAC3B,MAAM,IAAE/iC,EAAMukC,kBAAmB4F,GAAYz+C,KACvC0+C,EAAS,GACTC,EAAU,GACVnH,EAAYznD,KAAK8X,MAAM1J,EAASg5C,GAAch5C,EAAQk5C,IAC5D,IAEIrlD,EAAGuN,EAAGmb,EAAM6hB,EAAOqiB,EAAUC,EAAYtkC,EAAOpG,EAAY0E,EAAO2C,EAAQsjC,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAIhtD,EAAI,EAAGA,EAAImM,EAAQnM,GAAKwlD,EAAU,CAUlC,GATAjb,EAAQzqB,EAAM9f,GAAGuqC,MACjBqiB,EAAW5+C,KAAKi/C,wBAAwBjtD,GACxCsiB,EAAIN,KAAO6qC,EAAaD,EAAS1kC,OACjCK,EAAQkkC,EAAOI,GAAcJ,EAAOI,IAAe,CAC/C9kC,KAAM,CAAC,EACPC,GAAI,IAER7F,EAAayqC,EAASzqC,WACtB0E,EAAQ2C,EAAS,EACZnZ,EAAck6B,IAAWhqC,EAAQgqC,IAG/B,GAAIhqC,EAAQgqC,GACf,IAAIh9B,EAAI,EAAGmb,EAAO6hB,EAAMp+B,OAAQoB,EAAImb,IAAQnb,EACxCu/C,EAAeviB,EAAMh9B,GAChB8C,EAAcy8C,IAAiBvsD,EAAQusD,KACxCjmC,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAOimC,GACvDtjC,GAAUrH,QAPlB0E,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAO0jB,GACvD/gB,EAASrH,EAUbuqC,EAAO14C,KAAK6S,GACZ8lC,EAAQ34C,KAAKwV,GACbujC,EAAkBhvD,KAAKC,IAAI6oB,EAAOkmC,GAClCC,EAAmBjvD,KAAKC,IAAIwrB,EAAQwjC,EACxC,EA7iBP,SAAwBP,EAAQtgD,GAC7BwF,EAAK86C,EAASlkC,IACV,MAAMP,EAAKO,EAAMP,GACXc,EAAQd,EAAG7b,OAAS,EAC1B,IAAInM,EACJ,GAAI8oB,EAAQ3c,EAAQ,CAChB,IAAInM,EAAI,EAAGA,EAAI8oB,IAAS9oB,SACbuoB,EAAMR,KAAKC,EAAGhoB,IAEzBgoB,EAAG3O,OAAO,EAAGyP,EACjB,GAER,CAkiBQN,CAAeikC,EAAQtgD,GACvB,MAAMm/C,EAASoB,EAAO95C,QAAQm6C,GACxBvB,EAAUmB,EAAQ/5C,QAAQo6C,GAC1BE,EAAWC,IAAM,CACftmC,MAAO6lC,EAAOS,IAAQ,EACtB3jC,OAAQmjC,EAAQQ,IAAQ,IAEhC,MAAO,CACHxD,MAAOuD,EAAQ,GACft0C,KAAMs0C,EAAQ/gD,EAAS,GACvBm/C,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,SACAC,UAER,CACH,gBAAAniB,CAAiBl6B,GACV,OAAOA,CACX,CACH,gBAAA8K,CAAiB9K,EAAO+B,GACjB,OAAOq3B,GACX,CACH,gBAAA8I,CAAiBxpB,GAAQ,CACzB,eAAAolB,CAAgB/7B,GACT,MAAMyN,EAAQ9R,KAAK8R,MACnB,OAAIzN,EAAQ,GAAKA,EAAQyN,EAAM3T,OAAS,EAC7B,KAEJ6B,KAAKoN,iBAAiB0E,EAAMzN,GAAO/B,MAC9C,CACH,kBAAAgiC,CAAmB8a,GACRp/C,KAAKosC,iBACLgT,EAAU,EAAIA,GAElB,MAAMpkC,EAAQhb,KAAK4jC,YAAcwb,EAAUp/C,KAAKkgC,QAChD,OD1wHG/1B,GC0wHgBnK,KAAKy8C,eAAiB1hC,GAAY/a,KAAK+R,MAAOiJ,EAAO,GAAKA,GD1wHtD,MAAO,MC2wHlC,CACH,kBAAAqkC,CAAmBrkC,GACZ,MAAMokC,GAAWpkC,EAAQhb,KAAK4jC,aAAe5jC,KAAKkgC,QAClD,OAAOlgC,KAAKosC,eAAiB,EAAIgT,EAAUA,CAC/C,CACH,YAAAhd,GACO,OAAOpiC,KAAKoN,iBAAiBpN,KAAKs/C,eACtC,CACH,YAAAA,GACO,MAAM,IAAErvD,EAAI,IAAED,GAASgQ,KACvB,OAAO/P,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CACjE,CACH,UAAAorB,CAAWhX,GACJ,MAAMyN,EAAQ9R,KAAK8R,OAAS,GAC5B,GAAIzN,GAAS,GAAKA,EAAQyN,EAAM3T,OAAQ,CACpC,MAAMwyB,EAAO7e,EAAMzN,GACnB,OAAOssB,EAAKkH,WAAalH,EAAKkH,SAnkB1C,SAA2BzS,EAAQ/gB,EAAOssB,GACtC,OAAOlP,GAAc2D,EAAQ,CACzBuL,OACAtsB,QACApF,KAAM,QAEd,CA6jBqDsgD,CAAkBv/C,KAAKqb,aAAchX,EAAOssB,GACzF,CACA,OAAO3wB,KAAK63B,WAAa73B,KAAK63B,SA1kB3BpW,GA0kByDzhB,KAAK+R,MAAMsJ,aA1kB9C,CACzBjG,MAykBqFpV,KAxkBrFf,KAAM,UAykBV,CACH,SAAAi8C,GACO,MAAMsE,EAAcx/C,KAAK8E,QAAQgN,MAC3B2tC,EAAMl3C,GAAUvI,KAAKu4C,eACrBjpC,EAAMvf,KAAKyX,IAAIzX,KAAKuf,IAAImwC,IACxBpxC,EAAMte,KAAKyX,IAAIzX,KAAKse,IAAIoxC,IACxBtC,EAAan9C,KAAKo9C,iBAClB7lC,EAAUioC,EAAYlmC,iBAAmB,EACzCxnB,EAAIqrD,EAAaA,EAAWG,OAAOzkC,MAAQtB,EAAU,EACrDznB,EAAIqtD,EAAaA,EAAWK,QAAQhiC,OAASjE,EAAU,EAC7D,OAAOvX,KAAKqiC,eAAiBvyC,EAAIwf,EAAMxd,EAAIuc,EAAMvc,EAAIwd,EAAMxf,EAAIue,EAAMve,EAAIue,EAAMvc,EAAIwd,EAAMxf,EAAIwf,EAAMxd,EAAIuc,CAC3G,CACH,UAAA6uC,GACO,MAAMtlC,EAAU5X,KAAK8E,QAAQ8S,QAC7B,MAAgB,SAAZA,IACSA,EAEN5X,KAAK61B,0BAA0B13B,OAAS,CACnD,CACH,qBAAAuhD,CAAsB1wB,GACf,MAAMhiB,EAAOhN,KAAKgN,KACZ+E,EAAQ/R,KAAK+R,MACbjN,EAAU9E,KAAK8E,SACf,KAAEoT,EAAK,SAAEq0B,EAAS,OAAE7zB,GAAY5T,EAChC+S,EAASK,EAAKL,OACdwqB,EAAeriC,KAAKqiC,eAEpB+U,EADQp3C,KAAK8R,MACO3T,QAAU0Z,EAAS,EAAI,GAC3C8nC,EAAK9H,GAAkB3/B,GACvB1M,EAAQ,GACRo0C,EAAalnC,EAAOqL,WAAW/jB,KAAKqb,cACpCwkC,EAAYD,EAAWhoC,QAAUgoC,EAAW/mC,MAAQ,EACpDinC,EAAgBD,EAAY,EAC5BE,EAAmB,SAAS/kC,GAC9B,OAAOD,GAAYhJ,EAAOiJ,EAAO6kC,EACrC,EACA,IAAIG,EAAahuD,EAAG4lD,EAAWqI,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAblU,EACAyT,EAAcD,EAAiB//C,KAAK0X,QACpCyoC,EAAMngD,KAAK0X,OAASioC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB/wB,EAAUxX,KAAOsoC,EACvCW,EAAKzxB,EAAUtX,YACZ,GAAiB,WAAb60B,EACPyT,EAAcD,EAAiB//C,KAAKwX,KACpC+oC,EAAKvxB,EAAUxX,IACfipC,EAAKV,EAAiB/wB,EAAUtX,QAAUooC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMrgD,KAAKwX,IAAMmoC,OACd,GAAiB,SAAbpT,EACPyT,EAAcD,EAAiB//C,KAAKyX,OACpCyoC,EAAMlgD,KAAKyX,MAAQkoC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB/wB,EAAUrX,MAAQmoC,EACxCU,EAAKxxB,EAAUvX,WACZ,GAAiB,UAAb80B,EACPyT,EAAcD,EAAiB//C,KAAK2X,MACpC2oC,EAAKtxB,EAAUrX,KACf6oC,EAAKT,EAAiB/wB,EAAUvX,OAASqoC,EACzCI,EAAMF,EAAcF,EACpBM,EAAMpgD,KAAK2X,KAAOgoC,OACf,GAAa,MAAT3yC,EAAc,CACrB,GAAiB,WAAbu/B,EACAyT,EAAcD,GAAkB/wB,EAAUxX,IAAMwX,EAAUtX,QAAU,EAAI,SACrE,GAAI/U,EAAS4pC,GAAW,CAC3B,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvBV,EAAcD,EAAiB//C,KAAK+R,MAAMsD,OAAOqrC,GAAgBtzC,iBAAiB9K,GACtF,CACAi+C,EAAKvxB,EAAUxX,IACfipC,EAAKzxB,EAAUtX,OACfyoC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,MAAO,GAAa,MAAT3yC,EAAc,CACrB,GAAiB,WAAbu/B,EACAyT,EAAcD,GAAkB/wB,EAAUrX,KAAOqX,EAAUvX,OAAS,QACjE,GAAI9U,EAAS4pC,GAAW,CAC3B,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvBV,EAAcD,EAAiB//C,KAAK+R,MAAMsD,OAAOqrC,GAAgBtzC,iBAAiB9K,GACtF,CACA49C,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKtxB,EAAUrX,KACf6oC,EAAKxxB,EAAUvX,KACnB,CACA,MAAMkpC,EAAQ19C,EAAe6B,EAAQgN,MAAMulC,cAAeD,GACpDwJ,EAAO7wD,KAAKC,IAAI,EAAGD,KAAKknD,KAAKG,EAAcuJ,IACjD,IAAI3uD,EAAI,EAAGA,EAAIolD,EAAaplD,GAAK4uD,EAAK,CAClC,MAAMjtC,EAAU3T,KAAKqb,WAAWrpB,GAC1B6uD,EAAc3oC,EAAK6L,WAAWpQ,GAC9BmtC,EAAoBpoC,EAAOqL,WAAWpQ,GACtCwE,EAAY0oC,EAAY1oC,UACxB4oC,EAAYF,EAAYjgD,MACxB6tB,EAAaqyB,EAAkBnoC,MAAQ,GACvC+V,EAAmBoyB,EAAkBloC,WACrCL,EAAYsoC,EAAYtoC,UACxBE,EAAYooC,EAAYpoC,UACxBuoC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,qBACzCrJ,EAAYH,GAAoBz3C,KAAMhO,EAAG6lB,QACvBvX,IAAds3C,IAGJqI,EAAmBllC,GAAYhJ,EAAO6lC,EAAWz/B,GAC7CkqB,EACA6d,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1Bz0C,EAAMxF,KAAK,CACPk6C,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACA5nC,MAAOV,EACPvX,MAAOmgD,EACPtyB,aACAC,mBACAnW,YACAE,YACAuoC,iBACAC,yBAER,CAGA,OAFAjhD,KAAKk5C,aAAe9B,EACpBp3C,KAAKm5C,aAAe6G,EACbx0C,CACX,CACH,kBAAAouC,CAAmB5qB,GACZ,MAAMhiB,EAAOhN,KAAKgN,KACZlI,EAAU9E,KAAK8E,SACf,SAAEynC,EAAWz6B,MAAO0tC,GAAiB16C,EACrCu9B,EAAeriC,KAAKqiC,eACpBvwB,EAAQ9R,KAAK8R,OACb,MAAE5F,EAAM,WAAEwN,EAAW,QAAEnC,EAAQ,OAAE2B,GAAYsmC,EAC7CG,EAAK9H,GAAkB/yC,EAAQoT,MAC/BgpC,EAAiBvB,EAAKpoC,EACtB4pC,EAAkBjoC,GAAU3B,EAAU2pC,EACtCjlC,GAAY1T,GAAUvI,KAAKu4C,eAC3B/sC,EAAQ,GACd,IAAIxZ,EAAGiS,EAAM0sB,EAAM4L,EAAO5pC,EAAG+S,EAAG4Z,EAAWtE,EAAOhH,EAAMG,EAAYitC,EAAWC,EAC3E9hC,EAAe,SACnB,GAAiB,QAAbgtB,EACA7mC,EAAI1F,KAAK0X,OAASypC,EAClB7hC,EAAYtf,KAAKshD,+BACd,GAAiB,WAAb/U,EACP7mC,EAAI1F,KAAKwX,IAAM2pC,EACf7hC,EAAYtf,KAAKshD,+BACd,GAAiB,SAAb/U,EAAqB,CAC5B,MAAMrtC,EAAMc,KAAKuhD,wBAAwB5B,GACzCrgC,EAAYpgB,EAAIogB,UAChB3sB,EAAIuM,EAAIvM,CACZ,MAAO,GAAiB,UAAb45C,EAAsB,CAC7B,MAAMrtC,EAAMc,KAAKuhD,wBAAwB5B,GACzCrgC,EAAYpgB,EAAIogB,UAChB3sB,EAAIuM,EAAIvM,CACZ,MAAO,GAAa,MAATqa,EAAc,CACrB,GAAiB,WAAbu/B,EACA7mC,GAAKspB,EAAUxX,IAAMwX,EAAUtX,QAAU,EAAIwpC,OAC1C,GAAIv+C,EAAS4pC,GAAW,CAC3B,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvBh7C,EAAI1F,KAAK+R,MAAMsD,OAAOqrC,GAAgBtzC,iBAAiB9K,GAAS4+C,CACpE,CACA5hC,EAAYtf,KAAKshD,yBACrB,MAAO,GAAa,MAATt0C,EAAc,CACrB,GAAiB,WAAbu/B,EACA55C,GAAKq8B,EAAUrX,KAAOqX,EAAUvX,OAAS,EAAIypC,OAC1C,GAAIv+C,EAAS4pC,GAAW,CAC3B,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvB/tD,EAAIqN,KAAK+R,MAAMsD,OAAOqrC,GAAgBtzC,iBAAiB9K,EAC3D,CACAgd,EAAYtf,KAAKuhD,wBAAwB5B,GAAIrgC,SACjD,CACa,MAATtS,IACc,UAAVd,EACAqT,EAAe,MACE,QAAVrT,IACPqT,EAAe,WAGvB,MAAM49B,EAAan9C,KAAKo9C,iBACxB,IAAIprD,EAAI,EAAGiS,EAAO6N,EAAM3T,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC1C2+B,EAAO7e,EAAM9f,GACbuqC,EAAQ5L,EAAK4L,MACb,MAAMskB,EAAcrB,EAAYz7B,WAAW/jB,KAAKqb,WAAWrpB,IAC3DgpB,EAAQhb,KAAKogC,gBAAgBpuC,GAAKwtD,EAAYjmC,YAC9CvF,EAAOhU,KAAKi/C,wBAAwBjtD,GACpCmiB,EAAaH,EAAKG,WAClBitC,EAAY7uD,EAAQgqC,GAASA,EAAMp+B,OAAS,EAC5C,MAAMqjD,EAAYJ,EAAY,EACxBxgD,EAAQigD,EAAYjgD,MACpBwe,EAAcyhC,EAAYznC,gBAC1B+F,EAAc0hC,EAAY1nC,gBAChC,IAuCIsG,EAvCAgiC,EAAgBniC,EAwCpB,GAvCI+iB,GACA1vC,EAAIqoB,EACc,UAAdsE,IAEImiC,EADAzvD,IAAMiS,EAAO,EACIjE,KAAK8E,QAAQjB,QAAoB,OAAV,QAC3B,IAAN7R,EACUgO,KAAK8E,QAAQjB,QAAmB,QAAT,OAExB,UAKhBw9C,EAFS,QAAb9U,EACmB,SAAf7yB,GAAsC,IAAbuC,GACXmlC,EAAYjtC,EAAaA,EAAa,EAC9B,WAAfuF,GACOyjC,EAAWK,QAAQhiC,OAAS,EAAIgmC,EAAYrtC,EAAaA,GAEzDgpC,EAAWK,QAAQhiC,OAASrH,EAAa,EAGxC,SAAfuF,GAAsC,IAAbuC,EACZ9H,EAAa,EACJ,WAAfuF,EACMyjC,EAAWK,QAAQhiC,OAAS,EAAIgmC,EAAYrtC,EAE5CgpC,EAAWK,QAAQhiC,OAAS4lC,EAAYjtC,EAGzD+E,IACAmoC,IAAe,GAEF,IAAbplC,GAAmB4kC,EAAYlnC,oBAC/BhnB,GAAKwhB,EAAa,EAAIpkB,KAAKse,IAAI4N,MAGnCvW,EAAIsV,EACJqmC,GAAc,EAAID,GAAajtC,EAAa,GAG5C0sC,EAAYlnC,kBAAmB,CAC/B,MAAM+nC,EAAe3gC,GAAU8/B,EAAYhnC,iBACrC2B,EAAS2hC,EAAWwB,QAAQ3sD,GAC5B6mB,EAAQskC,EAAWuB,OAAO1sD,GAChC,IAAIwlB,EAAM6pC,EAAaK,EAAalqC,IAChCG,EAAO,EAAI+pC,EAAa/pC,KAC5B,OAAO4H,GACH,IAAK,SACD/H,GAAOgE,EAAS,EAChB,MACJ,IAAK,SACDhE,GAAOgE,EAGf,OAAO8D,GACH,IAAK,SACD3H,GAAQkB,EAAQ,EAChB,MACJ,IAAK,QACDlB,GAAQkB,EACR,MACJ,IAAK,QACG7mB,IAAMiS,EAAO,EACb0T,GAAQkB,EACD7mB,EAAI,IACX2lB,GAAQkB,EAAQ,GAI5B4G,EAAW,CACP9H,OACAH,MACAqB,MAAOA,EAAQ6oC,EAAa7oC,MAC5B2C,OAAQA,EAASkmC,EAAalmC,OAC9B5a,MAAOigD,EAAYjnC,cAE3B,CACApO,EAAMxF,KAAK,CACPu2B,QACAvoB,OACAqtC,aACAv8C,QAAS,CACLmX,WACArb,QACAwe,cACAD,cACAG,UAAWmiC,EACXliC,eACAF,YAAa,CACT1sB,EACA+S,GAEJ+Z,aAGZ,CACA,OAAOjU,CACX,CACA,uBAAA81C,GACI,MAAM,SAAE/U,EAAS,MAAEz6B,GAAW9R,KAAK8E,QAEnC,IADkByD,GAAUvI,KAAKu4C,eAE7B,MAAoB,QAAbhM,EAAqB,OAAS,QAEzC,IAAIrgC,EAAQ,SAQZ,MAPoB,UAAhB4F,EAAM5F,MACNA,EAAQ,OACe,QAAhB4F,EAAM5F,MACbA,EAAQ,QACe,UAAhB4F,EAAM5F,QACbA,EAAQ,SAELA,CACX,CACA,uBAAAq1C,CAAwB5B,GACpB,MAAM,SAAEpT,EAAWz6B,OAAO,WAAE4H,EAAW,OAAER,EAAO,QAAE3B,IAAgBvX,KAAK8E,QAEjEo8C,EAAiBvB,EAAKpoC,EACtB+lC,EAFat9C,KAAKo9C,iBAEEE,OAAOzkC,MACjC,IAAIyG,EACA3sB,EAoDJ,MAnDiB,SAAb45C,EACIrzB,GACAvmB,EAAIqN,KAAKyX,MAAQF,EACE,SAAfmC,EACA4F,EAAY,OACU,WAAf5F,GACP4F,EAAY,SACZ3sB,GAAK2qD,EAAS,IAEdh+B,EAAY,QACZ3sB,GAAK2qD,KAGT3qD,EAAIqN,KAAKyX,MAAQypC,EACE,SAAfxnC,EACA4F,EAAY,QACU,WAAf5F,GACP4F,EAAY,SACZ3sB,GAAK2qD,EAAS,IAEdh+B,EAAY,OACZ3sB,EAAIqN,KAAK2X,OAGG,UAAb40B,EACHrzB,GACAvmB,EAAIqN,KAAK2X,KAAOJ,EACG,SAAfmC,EACA4F,EAAY,QACU,WAAf5F,GACP4F,EAAY,SACZ3sB,GAAK2qD,EAAS,IAEdh+B,EAAY,OACZ3sB,GAAK2qD,KAGT3qD,EAAIqN,KAAK2X,KAAOupC,EACG,SAAfxnC,EACA4F,EAAY,OACU,WAAf5F,GACP4F,EAAY,SACZ3sB,GAAK2qD,EAAS,IAEdh+B,EAAY,QACZ3sB,EAAIqN,KAAKyX,QAIjB6H,EAAY,QAET,CACHA,YACA3sB,IAER,CACH,iBAAAgvD,GACO,GAAI3hD,KAAK8E,QAAQgN,MAAMoH,OACnB,OAEJ,MAAMnH,EAAQ/R,KAAK+R,MACbw6B,EAAWvsC,KAAK8E,QAAQynC,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACH/0B,IAAK,EACLG,KAAM3X,KAAK2X,KACXD,OAAQ3F,EAAMyJ,OACd/D,MAAOzX,KAAKyX,OAGH,QAAb80B,GAAmC,WAAbA,EACf,CACH/0B,IAAKxX,KAAKwX,IACVG,KAAM,EACND,OAAQ1X,KAAK0X,OACbD,MAAO1F,EAAM8G,YALrB,CAQJ,CACH,cAAA+oC,GACO,MAAM,IAAEttC,EAAMxP,SAAS,gBAAEyO,GAAmB,KAAEoE,EAAK,IAAEH,EAAI,MAAEqB,EAAM,OAAE2C,GAAYxb,KAC3EuT,IACAe,EAAImG,OACJnG,EAAIsK,UAAYrL,EAChBe,EAAI0K,SAASrH,EAAMH,EAAKqB,EAAO2C,GAC/BlH,EAAIuG,UAEZ,CACA,oBAAA6pB,CAAqBpiC,GACjB,MAAM4V,EAAOlY,KAAK8E,QAAQoT,KAC1B,IAAKlY,KAAKk9C,eAAiBhlC,EAAKN,QAC5B,OAAO,EAEX,MACMvT,EADQrE,KAAK8R,MACCxE,UAAWlM,GAAIA,EAAEkB,QAAUA,GAC/C,OAAI+B,GAAS,EACI6T,EAAK6L,WAAW/jB,KAAKqb,WAAWhX,IACjC8T,UAET,CACX,CACH,QAAA0pC,CAAS7yB,GACF,MAAM9W,EAAOlY,KAAK8E,QAAQoT,KACpB5D,EAAMtU,KAAKsU,IACX9I,EAAQxL,KAAKy4C,iBAAmBz4C,KAAKy4C,eAAiBz4C,KAAK0/C,sBAAsB1wB,IACvF,IAAIh9B,EAAGiS,EACP,MAAM69C,EAAW,CAACpjD,EAAIC,EAAIuV,KACjBA,EAAM2E,OAAU3E,EAAMtT,QAG3B0T,EAAImG,OACJnG,EAAI6D,UAAYjE,EAAM2E,MACtBvE,EAAIqK,YAAczK,EAAMtT,MACxB0T,EAAIytC,YAAY7tC,EAAMua,YAAc,IACpCna,EAAI0tC,eAAiB9tC,EAAMwa,iBAC3Bpa,EAAIgI,YACJhI,EAAIoI,OAAOhe,EAAG/L,EAAG+L,EAAGgH,GACpB4O,EAAIqI,OAAOhe,EAAGhM,EAAGgM,EAAG+G,GACpB4O,EAAI0I,SACJ1I,EAAIuG,YAER,GAAI3C,EAAKN,QACL,IAAI5lB,EAAI,EAAGiS,EAAOuH,EAAMrN,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC1C,MAAMyU,EAAO+E,EAAMxZ,GACfkmB,EAAKE,iBACL0pC,EAAS,CACLnvD,EAAG8T,EAAK65C,GACR56C,EAAGe,EAAK85C,IACT,CACC5tD,EAAG8T,EAAK+5C,GACR96C,EAAGe,EAAKg6C,IACTh6C,GAEHyR,EAAKG,WACLypC,EAAS,CACLnvD,EAAG8T,EAAKy5C,IACRx6C,EAAGe,EAAK05C,KACT,CACCxtD,EAAG8T,EAAK25C,IACR16C,EAAGe,EAAK45C,KACT,CACCz/C,MAAO6F,EAAKgS,UACZI,MAAOpS,EAAK8R,UACZkW,WAAYhoB,EAAKu6C,eACjBtyB,iBAAkBjoB,EAAKw6C,sBAGnC,CAER,CACH,UAAAgB,GACO,MAAM,MAAElwC,EAAM,IAAEuC,EAAMxP,SAAS,OAAE4T,EAAO,KAAER,IAAalY,KACjD4/C,EAAalnC,EAAOqL,WAAW/jB,KAAKqb,cACpCwkC,EAAYnnC,EAAOd,QAAUgoC,EAAW/mC,MAAQ,EACtD,IAAKgnC,EACD,OAEJ,MAAMqC,EAAgBhqC,EAAK6L,WAAW/jB,KAAKqb,WAAW,IAAIlD,UACpD6nC,EAAchgD,KAAKm5C,aACzB,IAAImH,EAAIE,EAAID,EAAIE,EACZzgD,KAAKqiC,gBACLie,EAAKvlC,GAAYhJ,EAAO/R,KAAK2X,KAAMkoC,GAAaA,EAAY,EAC5DW,EAAKzlC,GAAYhJ,EAAO/R,KAAKyX,MAAOyqC,GAAiBA,EAAgB,EACrE3B,EAAKE,EAAKT,IAEVO,EAAKxlC,GAAYhJ,EAAO/R,KAAKwX,IAAKqoC,GAAaA,EAAY,EAC3DY,EAAK1lC,GAAYhJ,EAAO/R,KAAK0X,OAAQwqC,GAAiBA,EAAgB,EACtE5B,EAAKE,EAAKR,GAEd1rC,EAAImG,OACJnG,EAAI6D,UAAYynC,EAAW/mC,MAC3BvE,EAAIqK,YAAcihC,EAAWh/C,MAC7B0T,EAAIgI,YACJhI,EAAIoI,OAAO4jC,EAAIC,GACfjsC,EAAIqI,OAAO6jC,EAAIC,GACfnsC,EAAI0I,SACJ1I,EAAIuG,SACR,CACH,UAAAsnC,CAAWnzB,GAEJ,IADoBhvB,KAAK8E,QAAQgN,MAChB8F,QACb,OAEJ,MAAMtD,EAAMtU,KAAKsU,IACX4I,EAAOld,KAAK2hD,oBACdzkC,GACAE,GAAS9I,EAAK4I,GAElB,MAAM1R,EAAQxL,KAAK25C,cAAc3qB,GACjC,IAAK,MAAMvoB,KAAQ+E,EAAM,CACrB,MAAM42C,EAAoB37C,EAAK3B,QACzB85C,EAAWn4C,EAAKuN,KAGtBiL,GAAW3K,EAFG7N,EAAK81B,MAEI,EADb91B,EAAK46C,WACczC,EAAUwD,EAC3C,CACIllC,GACAG,GAAW/I,EAEnB,CACH,SAAA+tC,GACO,MAAM,IAAE/tC,EAAMxP,SAAS,SAAEynC,EAAS,MAAEzzB,EAAM,QAAEjV,IAAgB7D,KAC5D,IAAK8Y,EAAMlB,QACP,OAEJ,MAAM5D,EAAOgN,GAAOlI,EAAM9E,MACpBuD,EAAUwJ,GAAUjI,EAAMvB,SAC1BrL,EAAQ4M,EAAM5M,MACpB,IAAI2L,EAAS7D,EAAKG,WAAa,EACd,WAAbo4B,GAAsC,WAAbA,GAAyB5pC,EAAS4pC,IAC3D10B,GAAUN,EAAQG,OACdnlB,EAAQumB,EAAMC,QACdlB,GAAU7D,EAAKG,YAAc2E,EAAMC,KAAK5a,OAAS,KAGrD0Z,GAAUN,EAAQC,IAEtB,MAAM,OAAE8qC,EAAO,OAAEC,EAAO,SAAE5iC,EAAS,SAAE1D,GAnlC7C,SAAmB7G,EAAOyC,EAAQ00B,EAAUrgC,GACxC,MAAM,IAAEsL,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,MAAE1F,GAAWqD,GAC3C,UAAE4Z,EAAU,OAAE3Z,GAAYtD,EAChC,IACI4N,EAAU2iC,EAAQC,EADlBtmC,EAAW,EAEf,MAAMT,EAAS9D,EAASF,EAClBqB,EAAQpB,EAAQE,EACtB,GAAIvC,EAAMitB,eAAgB,CAEtB,GADAigB,EAASn2C,GAAeD,EAAOyL,EAAMF,GACjC9U,EAAS4pC,GAAW,CACpB,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvB6B,EAASltC,EAAOqrC,GAAgBtzC,iBAAiB9K,GAASkZ,EAAS3D,CACvE,MACI0qC,EADoB,WAAbhW,GACGvd,EAAUtX,OAASsX,EAAUxX,KAAO,EAAIgE,EAAS3D,EAElDq/B,GAAe9hC,EAAOm3B,EAAU10B,GAE7C8H,EAAWlI,EAAQE,CACvB,KAAO,CACH,GAAIhV,EAAS4pC,GAAW,CACpB,MAAMmU,EAAiB3iD,OAAOsB,KAAKktC,GAAU,GACvCjqC,EAAQiqC,EAASmU,GACvB4B,EAASjtC,EAAOqrC,GAAgBtzC,iBAAiB9K,GAASuW,EAAQhB,CACtE,MACIyqC,EADoB,WAAb/V,GACGvd,EAAUrX,KAAOqX,EAAUvX,OAAS,EAAIoB,EAAQhB,EAEjDq/B,GAAe9hC,EAAOm3B,EAAU10B,GAE7C0qC,EAASp2C,GAAeD,EAAOwL,EAAQF,GACvCyE,EAAwB,SAAbswB,GAAuBtlC,GAAUA,EAChD,CACA,MAAO,CACHq7C,SACAC,SACA5iC,WACA1D,WAER,CA6iC2DumC,CAAUxiD,KAAM6X,EAAQ00B,EAAUrgC,GACrF+S,GAAW3K,EAAKwE,EAAMC,KAAM,EAAG,EAAG/E,EAAM,CACpCpT,MAAOkY,EAAMlY,MACb+e,WACA1D,WACAqD,UAAWy4B,GAAW7rC,EAAOqgC,EAAU1oC,GACvC0b,aAAc,SACdF,YAAa,CACTijC,EACAC,IAGZ,CACA,IAAA/xB,CAAKxB,GACIhvB,KAAKk9C,eAGVl9C,KAAK4hD,iBACL5hD,KAAK6hD,SAAS7yB,GACdhvB,KAAKiiD,aACLjiD,KAAKqiD,YACLriD,KAAKmiD,WAAWnzB,GACpB,CACH,OAAAkhB,GACO,MAAMhyB,EAAOle,KAAK8E,QACZ29C,EAAKvkC,EAAKpM,OAASoM,EAAKpM,MAAMq+B,GAAK,EACnCuS,EAAKz/C,EAAeib,EAAKhG,MAAQgG,EAAKhG,KAAKi4B,GAAI,GAC/CwS,EAAK1/C,EAAeib,EAAKxF,QAAUwF,EAAKxF,OAAOy3B,EAAG,GACxD,OAAKnwC,KAAKk9C,cAAgBl9C,KAAKwwB,OAASynB,GAAM11C,UAAUiuB,KAUjD,CACH,CACI2f,EAAGuS,EACHlyB,KAAOxB,IACHhvB,KAAK4hD,iBACL5hD,KAAK6hD,SAAS7yB,GACdhvB,KAAKqiD,cAGb,CACIlS,EAAGwS,EACHnyB,KAAM,KACFxwB,KAAKiiD,eAGb,CACI9R,EAAGsS,EACHjyB,KAAOxB,IACHhvB,KAAKmiD,WAAWnzB,MA3BjB,CACH,CACImhB,EAAGsS,EACHjyB,KAAOxB,IACHhvB,KAAKwwB,KAAKxB,KA2B9B,CACH,uBAAA6G,CAAwB52B,GACjB,MAAMs6C,EAAQv5C,KAAK+R,MAAM06B,+BACnBtH,EAASnlC,KAAKgN,KAAO,SACrB6c,EAAS,GACf,IAAI73B,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAOs1C,EAAMp7C,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC1C,MAAMqa,EAAOktC,EAAMvnD,GACfqa,EAAK84B,KAAYnlC,KAAKoC,IAAQnD,GAAQoN,EAAKpN,OAASA,GACpD4qB,EAAO7jB,KAAKqG,EAEpB,CACA,OAAOwd,CACX,CACH,uBAAAo1B,CAAwB56C,GAEjB,OAAO2c,GADMhhB,KAAK8E,QAAQgN,MAAMiS,WAAW/jB,KAAKqb,WAAWhX,IACxC2P,KACvB,CACH,UAAA4uC,GACO,MAAMC,EAAW7iD,KAAKi/C,wBAAwB,GAAG9qC,WACjD,OAAQnU,KAAKqiC,eAAiBriC,KAAK6Y,MAAQ7Y,KAAKwb,QAAUqnC,CAC9D,EAGJ,MAAMC,GACF,WAAA9jD,CAAYC,EAAMiU,EAAOuC,GACrBzV,KAAKf,KAAOA,EACZe,KAAKkT,MAAQA,EACblT,KAAKyV,SAAWA,EAChBzV,KAAKwL,MAAQzN,OAAOyG,OAAO,KAC/B,CACA,SAAAu+C,CAAU9jD,GACN,OAAOlB,OAAOwE,UAAUygD,cAAcvgD,KAAKzC,KAAKf,KAAKsD,UAAWtD,EAAKsD,UACzE,CACH,QAAA0gD,CAASx8C,GACF,MAAM3I,EAAQC,OAAOolB,eAAe1c,GACpC,IAAIy8C,GAiEZ,SAA2BplD,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEYqlD,CAAkBrlD,KAClBolD,EAAcljD,KAAKijD,SAASnlD,IAEhC,MAAM0N,EAAQxL,KAAKwL,MACbpJ,EAAKqE,EAAKrE,GACV8Q,EAAQlT,KAAKkT,MAAQ,IAAM9Q,EACjC,IAAKA,EACD,MAAM,IAAI+hB,MAAM,2BAA6B1d,GAEjD,OAAIrE,KAAMoJ,IAGVA,EAAMpJ,GAAMqE,EAyBpB,SAA0BA,EAAMyM,EAAOgwC,GACnC,MAAME,EAAen+C,EAAMlH,OAAOyG,OAAO,MAAO,CAC5C0+C,EAAc5sC,GAASjF,IAAI6xC,GAAe,CAAC,EAC3C5sC,GAASjF,IAAI6B,GACbzM,EAAK6P,WAETA,GAAS7K,IAAIyH,EAAOkwC,GAChB38C,EAAK48C,eAOb,SAAuBnwC,EAAOowC,GAC1BvlD,OAAOsB,KAAKikD,GAAQh4C,QAAShD,IACzB,MAAMi7C,EAAgBj7C,EAASxC,MAAM,KAC/B09C,EAAaD,EAAc3yB,MAC3B6yB,EAAc,CAChBvwC,GACF4sB,OAAOyjB,GAAen/B,KAAK,KACvBve,EAAQy9C,EAAOh7C,GAAUxC,MAAM,KAC/B+P,EAAahQ,EAAM+qB,MACnBhb,EAAc/P,EAAMue,KAAK,KAC/B9N,GAASZ,MAAM+tC,EAAaD,EAAY5tC,EAAaC,IAE7D,CAlBQ6tC,CAAcxwC,EAAOzM,EAAK48C,eAE1B58C,EAAKqM,aACLwD,GAASd,SAAStC,EAAOzM,EAAKqM,YAEtC,CArCQ6wC,CAAiBl9C,EAAMyM,EAAOgwC,GAC1BljD,KAAKyV,UACLa,GAASb,SAAShP,EAAKrE,GAAIqE,EAAKoM,YALzBK,CAQf,CACH,GAAA7B,CAAIjP,GACG,OAAOpC,KAAKwL,MAAMpJ,EACtB,CACH,UAAAwhD,CAAWn9C,GACJ,MAAM+E,EAAQxL,KAAKwL,MACbpJ,EAAKqE,EAAKrE,GACV8Q,EAAQlT,KAAKkT,MACf9Q,KAAMoJ,UACCA,EAAMpJ,GAEb8Q,GAAS9Q,KAAMkU,GAASpD,YACjBoD,GAASpD,GAAO9Q,GACnBpC,KAAKyV,iBACE5C,GAAUzQ,GAG7B,EAiCJ,MAAMyhD,GACF,WAAA7kD,GACIgB,KAAKsrC,YAAc,IAAIwX,GAAc7rB,GAAmB,YAAY,GACpEj3B,KAAK8T,SAAW,IAAIgvC,GAAcpM,GAAS,YAC3C12C,KAAKkV,QAAU,IAAI4tC,GAAc/kD,OAAQ,WACzCiC,KAAKqV,OAAS,IAAIytC,GAAc7K,GAAO,UACvCj4C,KAAK8jD,iBAAmB,CACpB9jD,KAAKsrC,YACLtrC,KAAKqV,OACLrV,KAAK8T,SAEb,CACH,GAAAuQ,IAAO7gB,GACAxD,KAAK+jD,MAAM,WAAYvgD,EAC3B,CACA,MAAAiuB,IAAUjuB,GACNxD,KAAK+jD,MAAM,aAAcvgD,EAC7B,CACH,cAAAwgD,IAAkBxgD,GACXxD,KAAK+jD,MAAM,WAAYvgD,EAAMxD,KAAKsrC,YACtC,CACH,WAAAlT,IAAe50B,GACRxD,KAAK+jD,MAAM,WAAYvgD,EAAMxD,KAAK8T,SACtC,CACH,UAAAmwC,IAAczgD,GACPxD,KAAK+jD,MAAM,WAAYvgD,EAAMxD,KAAKkV,QACtC,CACH,SAAAgvC,IAAa1gD,GACNxD,KAAK+jD,MAAM,WAAYvgD,EAAMxD,KAAKqV,OACtC,CACH,aAAA8uC,CAAc/hD,GACP,OAAOpC,KAAKokD,KAAKhiD,EAAIpC,KAAKsrC,YAAa,aAC3C,CACH,UAAAD,CAAWjpC,GACJ,OAAOpC,KAAKokD,KAAKhiD,EAAIpC,KAAK8T,SAAU,UACxC,CACH,SAAAuwC,CAAUjiD,GACH,OAAOpC,KAAKokD,KAAKhiD,EAAIpC,KAAKkV,QAAS,SACvC,CACH,QAAAovC,CAASliD,GACF,OAAOpC,KAAKokD,KAAKhiD,EAAIpC,KAAKqV,OAAQ,QACtC,CACH,iBAAAkvC,IAAqB/gD,GACdxD,KAAK+jD,MAAM,aAAcvgD,EAAMxD,KAAKsrC,YACxC,CACH,cAAAkZ,IAAkBhhD,GACXxD,KAAK+jD,MAAM,aAAcvgD,EAAMxD,KAAK8T,SACxC,CACH,aAAA2wC,IAAiBjhD,GACVxD,KAAK+jD,MAAM,aAAcvgD,EAAMxD,KAAKkV,QACxC,CACH,YAAAwvC,IAAgBlhD,GACTxD,KAAK+jD,MAAM,aAAcvgD,EAAMxD,KAAKqV,OACxC,CACH,KAAA0uC,CAAM3wB,EAAQ5vB,EAAMmhD,GACb,IACOnhD,GACL8H,QAASs5C,IACP,MAAMC,EAAMF,GAAiB3kD,KAAK8kD,oBAAoBF,GAClDD,GAAiBE,EAAI9B,UAAU6B,IAAQC,IAAQ7kD,KAAKkV,SAAW0vC,EAAIxiD,GACnEpC,KAAK+kD,MAAM3xB,EAAQyxB,EAAKD,GAExBjhD,EAAKihD,EAAMn+C,IACP,MAAMu+C,EAAUL,GAAiB3kD,KAAK8kD,oBAAoBr+C,GAC1DzG,KAAK+kD,MAAM3xB,EAAQ4xB,EAASv+C,MAI5C,CACH,KAAAs+C,CAAM3xB,EAAQgY,EAAU6Z,GACjB,MAAMC,EAAc/+C,EAAYitB,GAChC9vB,EAAS2hD,EAAU,SAAWC,GAAc,GAAID,GAChD7Z,EAAShY,GAAQ6xB,GACjB3hD,EAAS2hD,EAAU,QAAUC,GAAc,GAAID,EACnD,CACH,mBAAAH,CAAoB7lD,GACb,IAAI,IAAIjN,EAAI,EAAGA,EAAIgO,KAAK8jD,iBAAiB3lD,OAAQnM,IAAI,CACjD,MAAM6yD,EAAM7kD,KAAK8jD,iBAAiB9xD,GAClC,GAAI6yD,EAAI9B,UAAU9jD,GACd,OAAO4lD,CAEf,CACA,OAAO7kD,KAAKkV,OAChB,CACH,IAAAkvC,CAAKhiD,EAAIuiD,EAAe1lD,GACjB,MAAMwH,EAAOk+C,EAActzC,IAAIjP,GAC/B,QAAa9B,IAATmG,EACA,MAAM,IAAI0d,MAAM,IAAM/hB,EAAK,yBAA2BnD,EAAO,KAEjE,OAAOwH,CACX,EAEJ,IAAI2kC,GAA2B,IAAIyY,GAEnC,MAAMsB,GACF,WAAAnmD,GACIgB,KAAKolD,MAAQ,EACjB,CACH,MAAAC,CAAOtzC,EAAOuzC,EAAM9hD,EAAMkhB,GACN,eAAT4gC,IACAtlD,KAAKolD,MAAQplD,KAAKulD,mBAAmBxzC,GAAO,GAC5C/R,KAAK2vB,QAAQ3vB,KAAKolD,MAAOrzC,EAAO,YAEpC,MAAMe,EAAc4R,EAAS1kB,KAAKoT,aAAarB,GAAO2S,OAAOA,GAAU1kB,KAAKoT,aAAarB,GACnF8X,EAAS7pB,KAAK2vB,QAAQ7c,EAAaf,EAAOuzC,EAAM9hD,GAKtD,MAJa,iBAAT8hD,IACAtlD,KAAK2vB,QAAQ7c,EAAaf,EAAO,QACjC/R,KAAK2vB,QAAQ3vB,KAAKolD,MAAOrzC,EAAO,cAE7B8X,CACX,CACH,OAAA8F,CAAQ7c,EAAaf,EAAOuzC,EAAM9hD,GAC3BA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMgiD,KAAc1yC,EAAY,CACjC,MAAM2yC,EAASD,EAAWC,OAO1B,IAAyC,IAArCniD,EANWmiD,EAAOH,GACP,CACXvzC,EACAvO,EACAgiD,EAAW1gD,SAEc2gD,IAAqBjiD,EAAKkiD,WACnD,OAAO,CAEf,CACA,OAAO,CACX,CACA,UAAAC,GACStjD,EAAcrC,KAAK2/B,UACpB3/B,KAAK4lD,UAAY5lD,KAAK2/B,OACtB3/B,KAAK2/B,YAASr/B,EAEtB,CACH,YAAA8S,CAAarB,GACN,GAAI/R,KAAK2/B,OACL,OAAO3/B,KAAK2/B,OAEhB,MAAM7sB,EAAc9S,KAAK2/B,OAAS3/B,KAAKulD,mBAAmBxzC,GAE1D,OADA/R,KAAK6lD,oBAAoB9zC,GAClBe,CACX,CACA,kBAAAyyC,CAAmBxzC,EAAOsiB,GACtB,MAAMf,EAASvhB,GAASA,EAAMuhB,OACxBxuB,EAAU7B,EAAeqwB,EAAOxuB,SAAWwuB,EAAOxuB,QAAQoQ,QAAS,CAAC,GACpEA,EAWb,SAAoBoe,GACjB,MAAMwyB,EAAW,CAAC,EACZ5wC,EAAU,GACV7V,EAAOtB,OAAOsB,KAAK+rC,GAASl2B,QAAQ1J,OAC1C,IAAI,IAAIxZ,EAAI,EAAGA,EAAIqN,EAAKlB,OAAQnM,IAC5BkjB,EAAQlP,KAAKolC,GAASiZ,UAAUhlD,EAAKrN,KAEzC,MAAMokB,EAAQkd,EAAOpe,SAAW,GAChC,IAAI,IAAIljB,EAAI,EAAGA,EAAIokB,EAAMjY,OAAQnM,IAAI,CACjC,MAAMyzD,EAASrvC,EAAMpkB,IACY,IAA7BkjB,EAAQtQ,QAAQ6gD,KAChBvwC,EAAQlP,KAAKy/C,GACbK,EAASL,EAAOrjD,KAAM,EAE9B,CACA,MAAO,CACH8S,UACA4wC,WAER,CA9BwBC,CAAWzyB,GAC3B,OAAmB,IAAZxuB,GAAsBuvB,EAuCrC,SAA2BtiB,GAAO,QAAEmD,EAAQ,SAAE4wC,GAAahhD,EAASuvB,GAChE,MAAMxK,EAAS,GACTlW,EAAU5B,EAAMsJ,aACtB,IAAK,MAAMoqC,KAAUvwC,EAAQ,CACzB,MAAM9S,EAAKqjD,EAAOrjD,GACZ8b,EAAO8nC,GAAQlhD,EAAQ1C,GAAKiyB,GACrB,OAATnW,GAGJ2L,EAAO7jB,KAAK,CACRy/C,SACA3gD,QAASmhD,GAAWl0C,EAAMuhB,OAAQ,CAC9BmyB,SACArvC,MAAO0vC,EAAS1jD,IACjB8b,EAAMvK,IAEjB,CACA,OAAOkW,CACX,CAzDgDq8B,CAAkBn0C,EAAOmD,EAASpQ,EAASuvB,GAAhD,EACvC,CACH,mBAAAwxB,CAAoB9zC,GACb,MAAMo0C,EAAsBnmD,KAAK4lD,WAAa,GACxC9yC,EAAc9S,KAAK2/B,OACnBiM,EAAO,CAAC/6C,EAAGC,IAAID,EAAE6zB,OAAQ/xB,IAAK7B,EAAEs1D,KAAM1gD,GAAI/S,EAAE8yD,OAAOrjD,KAAOsD,EAAE+/C,OAAOrjD,KACzEpC,KAAK2vB,QAAQic,EAAKua,EAAqBrzC,GAAcf,EAAO,QAC5D/R,KAAK2vB,QAAQic,EAAK94B,EAAaqzC,GAAsBp0C,EAAO,QAChE,EAsBJ,SAASi0C,GAAQlhD,EAASuvB,GACtB,OAAKA,IAAmB,IAAZvvB,GAGI,IAAZA,EACO,CAAC,EAELA,EALI,IAMf,CAoBA,SAASmhD,GAAW3yB,GAAQ,OAAEmyB,EAAO,MAAErvC,GAAU8H,EAAMvK,GACnD,MAAMtU,EAAOi0B,EAAO+yB,gBAAgBZ,GAC9B7jC,EAAS0R,EAAOoH,gBAAgBxc,EAAM7e,GAI5C,OAHI+W,GAASqvC,EAAOnvC,UAChBsL,EAAO5b,KAAKy/C,EAAOnvC,UAEhBgd,EAAOqH,eAAe/Y,EAAQjO,EAAS,CAC1C,IACD,CACCoR,YAAY,EACZC,WAAW,EACXH,SAAS,GAEjB,CAEA,SAASyhC,GAAarnD,EAAM6F,GACxB,MAAMyhD,EAAkBjwC,GAAS7C,SAASxU,IAAS,CAAC,EAEpD,QADwB6F,EAAQ2O,UAAY,CAAC,GAAGxU,IAAS,CAAC,GACpCwV,WAAa3P,EAAQ2P,WAAa8xC,EAAgB9xC,WAAa,GACzF,CAaA,SAAS+xC,GAAcpkD,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CACA,SAASqkD,GAAiBla,GACtB,MAAiB,QAAbA,GAAmC,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,CAGJ,CACA,SAASma,GAActkD,KAAOukD,GAC1B,GAAIH,GAAcpkD,GACd,OAAOA,EAEX,IAAK,MAAM8b,KAAQyoC,EAAa,CAC5B,MAAM35C,EAAOkR,EAAKlR,MAAQy5C,GAAiBvoC,EAAKquB,WAAanqC,EAAGjE,OAAS,GAAKqoD,GAAcpkD,EAAG,GAAGtC,eAClG,GAAIkN,EACA,OAAOA,CAEf,CACA,MAAM,IAAImX,MAAM,6BAA6B/hB,uDACjD,CACA,SAASwkD,GAAmBxkD,EAAI4K,EAAMD,GAClC,GAAIA,EAAQC,EAAO,YAAc5K,EAC7B,MAAO,CACH4K,OAGZ,CAgEA,SAAS65C,GAAYvzB,GACjB,MAAMxuB,EAAUwuB,EAAOxuB,UAAYwuB,EAAOxuB,QAAU,CAAC,GACrDA,EAAQoQ,QAAUjS,EAAe6B,EAAQoQ,QAAS,CAAC,GACnDpQ,EAAQuQ,OAzDZ,SAA0Bie,EAAQxuB,GAC9B,MAAMgiD,EAAgBj0C,GAAUygB,EAAOr0B,OAAS,CAC5CoW,OAAQ,CAAC,GAEP0xC,EAAejiD,EAAQuQ,QAAU,CAAC,EAClC2xC,EAAiBV,GAAahzB,EAAOr0B,KAAM6F,GAC3CuQ,EAAStX,OAAOyG,OAAO,MA8C7B,OA7CAzG,OAAOsB,KAAK0nD,GAAcz7C,QAASlJ,IAC/B,MAAM6kD,EAAYF,EAAa3kD,GAC/B,IAAKO,EAASskD,GACV,OAAO/lC,QAAQgmC,MAAM,0CAA0C9kD,KAEnE,GAAI6kD,EAAUtjC,OACV,OAAOzC,QAAQC,KAAK,kDAAkD/e,KAE1E,MAAM4K,EAAO05C,GAActkD,EAAI6kD,EAxBvC,SAAkC7kD,EAAIkxB,GAClC,GAAIA,EAAOvZ,MAAQuZ,EAAOvZ,KAAKtG,SAAU,CACrC,MAAM0zC,EAAU7zB,EAAOvZ,KAAKtG,SAASiR,OAAQ1zB,GAAIA,EAAE0nC,UAAYt2B,GAAMpR,EAAE4nC,UAAYx2B,GACnF,GAAI+kD,EAAQhpD,OACR,OAAOyoD,GAAmBxkD,EAAI,IAAK+kD,EAAQ,KAAOP,GAAmBxkD,EAAI,IAAK+kD,EAAQ,GAE9F,CACA,MAAO,CAAC,CACZ,CAgBkDC,CAAyBhlD,EAAIkxB,GAAShd,GAASjB,OAAO4xC,EAAUhoD,OACpGooD,EA5Dd,SAAmCr6C,EAAMyH,GACrC,OAAOzH,IAASyH,EAAY,UAAY,SAC5C,CA0D0B6yC,CAA0Bt6C,EAAMg6C,GAC5CO,EAAsBT,EAAczxC,QAAU,CAAC,EACrDA,EAAOjT,GAAMiD,EAAQtH,OAAOyG,OAAO,MAAO,CACtC,CACIwI,QAEJi6C,EACAM,EAAoBv6C,GACpBu6C,EAAoBF,OAG5B/zB,EAAOvZ,KAAKtG,SAASnI,QAASyB,IAC1B,MAAM9N,EAAO8N,EAAQ9N,MAAQq0B,EAAOr0B,KAC9BwV,EAAY1H,EAAQ0H,WAAa6xC,GAAarnD,EAAM6F,GAEpDyiD,GADkB10C,GAAU5T,IAAS,CAAC,GACAoW,QAAU,CAAC,EACvDtX,OAAOsB,KAAKkoD,GAAqBj8C,QAASk8C,IACtC,MAAMx6C,EAtFlB,SAAmC5K,EAAIqS,GACnC,IAAIzH,EAAO5K,EAMX,MALW,YAAPA,EACA4K,EAAOyH,EACO,YAAPrS,IACP4K,EAAqB,MAAdyH,EAAoB,IAAM,KAE9BzH,CACX,CA8EyBy6C,CAA0BD,EAAW/yC,GAC5CrS,EAAK2K,EAAQC,EAAO,WAAaA,EACvCqI,EAAOjT,GAAMiT,EAAOjT,IAAOrE,OAAOyG,OAAO,MACzCa,EAAQgQ,EAAOjT,GAAK,CAChB,CACI4K,QAEJ+5C,EAAa3kD,GACbmlD,EAAoBC,SAIhCzpD,OAAOsB,KAAKgW,GAAQ/J,QAAS3G,IACzB,MAAMyQ,EAAQC,EAAO1Q,GACrBU,EAAQ+P,EAAO,CACXkB,GAASjB,OAAOD,EAAMnW,MACtBqX,GAASlB,UAGVC,CACX,CAIqBqyC,CAAiBp0B,EAAQxuB,EAC9C,CACA,SAAS6iD,GAAS5tC,GAId,OAHAA,EAAOA,GAAQ,CAAC,GACXtG,SAAWsG,EAAKtG,UAAY,GACjCsG,EAAKkhB,OAASlhB,EAAKkhB,QAAU,GACtBlhB,CACX,CAOA,MAAM6tC,GAAW,IAAI/2C,IACfg3C,GAAa,IAAIn8C,IACvB,SAASo8C,GAAW72C,EAAU82C,GAC1B,IAAI1oD,EAAOuoD,GAASv2C,IAAIJ,GAMxB,OALK5R,IACDA,EAAO0oD,IACPH,GAASn8C,IAAIwF,EAAU5R,GACvBwoD,GAAWxjC,IAAIhlB,IAEZA,CACX,CACA,MAAM2oD,GAAa,CAACv8C,EAAKrL,EAAKuE,KAC1B,MAAMuZ,EAAOvY,EAAiBvF,EAAKuE,QACtBrE,IAAT4d,GACAzS,EAAI4Y,IAAInG,IAGhB,MAAM+pC,GACF,WAAAjpD,CAAYs0B,GACRtzB,KAAKkoD,QAzBb,SAAoB50B,GAIhB,OAHAA,EAASA,GAAU,CAAC,GACbvZ,KAAO4tC,GAASr0B,EAAOvZ,MAC9B8sC,GAAYvzB,GACLA,CACX,CAoBuB60B,CAAW70B,GAC1BtzB,KAAKooD,YAAc,IAAIv3C,IACvB7Q,KAAKqoD,eAAiB,IAAIx3C,GAC9B,CACA,YAAI+C,GACA,OAAO5T,KAAKkoD,QAAQt0C,QACxB,CACA,QAAI3U,GACA,OAAOe,KAAKkoD,QAAQjpD,IACxB,CACA,QAAIA,CAAKA,GACLe,KAAKkoD,QAAQjpD,KAAOA,CACxB,CACA,QAAI8a,GACA,OAAO/Z,KAAKkoD,QAAQnuC,IACxB,CACA,QAAIA,CAAKA,GACL/Z,KAAKkoD,QAAQnuC,KAAO4tC,GAAS5tC,EACjC,CACA,WAAIjV,GACA,OAAO9E,KAAKkoD,QAAQpjD,OACxB,CACA,WAAIA,CAAQA,GACR9E,KAAKkoD,QAAQpjD,QAAUA,CAC3B,CACA,WAAIoQ,GACA,OAAOlV,KAAKkoD,QAAQhzC,OACxB,CACA,MAAA0d,GACI,MAAMU,EAAStzB,KAAKkoD,QACpBloD,KAAKsoD,aACLzB,GAAYvzB,EAChB,CACA,UAAAg1B,GACItoD,KAAKooD,YAAYG,QACjBvoD,KAAKqoD,eAAeE,OACxB,CACH,gBAAA9tB,CAAiB+tB,GACV,OAAOV,GAAWU,EAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,KAGhB,CACH,yBAAA/qB,CAA0B+qB,EAAahrB,GAChC,OAAOsqB,GAAW,GAAGU,gBAA0BhrB,IAAc,IAAI,CACzD,CACI,YAAYgrB,iBAA2BhrB,IACvC,eAAeA,KAEnB,CACI,YAAYgrB,IACZ,KAGhB,CACH,uBAAAprB,CAAwBorB,EAAatrB,GAC9B,OAAO4qB,GAAW,GAAGU,KAAetrB,IAAe,IAAI,CAC/C,CACI,YAAYsrB,cAAwBtrB,IACpC,YAAYsrB,IACZ,YAAYtrB,IACZ,KAGhB,CACH,eAAAmpB,CAAgBZ,GACT,MAAMrjD,EAAKqjD,EAAOrjD,GAElB,OAAO0lD,GAAW,GADL9nD,KAAKf,eACkBmD,IAAM,IAAI,CACtC,CACI,WAAWA,OACRqjD,EAAOgD,wBAA0B,KAGpD,CACH,aAAAC,CAAcC,EAAWC,GAClB,MAAMR,EAAcpoD,KAAKooD,YACzB,IAAI7tC,EAAQ6tC,EAAY/2C,IAAIs3C,GAK5B,OAJKpuC,IAASquC,IACVruC,EAAQ,IAAI1J,IACZu3C,EAAY38C,IAAIk9C,EAAWpuC,IAExBA,CACX,CACH,eAAAmgB,CAAgBiuB,EAAWE,EAAUD,GAC9B,MAAM,QAAE9jD,EAAQ,KAAE7F,GAAUe,KACtBua,EAAQva,KAAK0oD,cAAcC,EAAWC,GACtC7xB,EAASxc,EAAMlJ,IAAIw3C,GACzB,GAAI9xB,EACA,OAAOA,EAEX,MAAMnV,EAAS,IAAIlW,IACnBm9C,EAASv9C,QAASjM,IACVspD,IACA/mC,EAAOyC,IAAIskC,GACXtpD,EAAKiM,QAAS3G,GAAMqjD,GAAWpmC,EAAQ+mC,EAAWhkD,KAEtDtF,EAAKiM,QAAS3G,GAAMqjD,GAAWpmC,EAAQ9c,EAASH,IAChDtF,EAAKiM,QAAS3G,GAAMqjD,GAAWpmC,EAAQ/O,GAAU5T,IAAS,CAAC,EAAG0F,IAC9DtF,EAAKiM,QAAS3G,GAAMqjD,GAAWpmC,EAAQtL,GAAU3R,IACjDtF,EAAKiM,QAAS3G,GAAMqjD,GAAWpmC,EAAQ9O,GAAanO,MAExD,MAAM0D,EAAQ/V,MAAMmL,KAAKmkB,GAOzB,OANqB,IAAjBvZ,EAAMlK,QACNkK,EAAMrC,KAAKjI,OAAOyG,OAAO,OAEzBqjD,GAAWnhD,IAAImiD,IACftuC,EAAM9O,IAAIo9C,EAAUxgD,GAEjBA,CACX,CACH,iBAAAygD,GACO,MAAM,QAAEhkD,EAAQ,KAAE7F,GAAUe,KAC5B,MAAO,CACH8E,EACA+N,GAAU5T,IAAS,CAAC,EACpBqX,GAAS7C,SAASxU,IAAS,CAAC,EAC5B,CACIA,QAEJqX,GACAxD,GAER,CACH,mBAAAuqB,CAAoBzb,EAAQvkB,EAAOsW,EAASkO,EAAW,CAChD,KAEA,MAAMgI,EAAS,CACXmK,SAAS,IAEP,SAAEpuB,EAAS,YAAEmjD,GAAiBC,GAAYhpD,KAAKqoD,eAAgBzmC,EAAQC,GAC7E,IAAI/c,EAAUc,GAsCtB,SAAqB+c,EAAOtlB,GACxB,MAAM,aAAE4mB,EAAa,YAAEO,GAAiBpR,GAAauP,GACrD,IAAK,MAAM/B,KAAQvjB,EAAM,CACrB,MAAM0nB,EAAad,EAAarD,GAC1BoE,EAAYR,EAAY5D,GACxBte,GAAS0iB,GAAaD,IAAepC,EAAM/B,GACjD,GAAImE,IAAeze,GAAWhE,IAAU2mD,GAAY3mD,KAAW0iB,GAAazyB,EAAQ+P,GAChF,OAAO,CAEf,CACA,OAAO,CACX,EAhDY4mD,CAAYtjD,EAAUvI,KACtBwsB,EAAOmK,SAAU,EAGjBlvB,EAAU0e,GAAe5d,EAFzB+N,EAAUrN,GAAWqN,GAAWA,IAAYA,EACxB3T,KAAK26B,eAAe/Y,EAAQjO,EAASo1C,KAG7D,IAAK,MAAMnoC,KAAQvjB,EACfwsB,EAAOjJ,GAAQ9b,EAAQ8b,GAE3B,OAAOiJ,CACX,CACH,cAAA8Q,CAAe/Y,EAAQjO,EAASkO,EAAW,CACpC,IACD6B,GACC,MAAM,SAAE9d,GAAcojD,GAAYhpD,KAAKqoD,eAAgBzmC,EAAQC,GAC/D,OAAOlf,EAASgR,GAAW6P,GAAe5d,EAAU+N,OAASrT,EAAWojB,GAAsB9d,CAClG,EAEJ,SAASojD,GAAYG,EAAevnC,EAAQC,GACxC,IAAItH,EAAQ4uC,EAAc93C,IAAIuQ,GACzBrH,IACDA,EAAQ,IAAI1J,IACZs4C,EAAc19C,IAAImW,EAAQrH,IAE9B,MAAMtJ,EAAW4Q,EAASuC,OAC1B,IAAI2S,EAASxc,EAAMlJ,IAAIJ,GASvB,OARK8lB,IAEDA,EAAS,CACLnxB,SAFa+b,GAAgBC,EAAQC,GAGrCknC,YAAalnC,EAAS6C,OAAQzjB,IAAKA,EAAEnB,cAAc6S,SAAS,WAEhE4H,EAAM9O,IAAIwF,EAAU8lB,IAEjBA,CACX,CACA,MAAMkyB,GAAe3mD,GAAQK,EAASL,IAAUvE,OAAO61B,oBAAoBtxB,GAAO8jD,KAAMzhD,GAAM2B,GAAWhE,EAAMqC,KAgBzGykD,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqB9c,EAAUv/B,GACpC,MAAoB,QAAbu/B,GAAmC,WAAbA,IAAgE,IAAvC6c,GAAgBxkD,QAAQ2nC,IAA6B,MAATv/B,CACtG,CACA,SAASs8C,GAAcC,EAAIC,GACvB,OAAO,SAAS34D,EAAGC,GACf,OAAOD,EAAE04D,KAAQz4D,EAAEy4D,GAAM14D,EAAE24D,GAAM14D,EAAE04D,GAAM34D,EAAE04D,GAAMz4D,EAAEy4D,EACvD,CACJ,CACA,SAASE,GAAqB91C,GAC1B,MAAM5B,EAAQ4B,EAAQ5B,MAChB2hB,EAAmB3hB,EAAMjN,QAAQwO,UACvCvB,EAAM6qC,cAAc,eACpBt5C,EAASowB,GAAoBA,EAAiBg2B,WAAY,CACtD/1C,GACD5B,EACP,CACA,SAAS43C,GAAoBh2C,GACzB,MAAM5B,EAAQ4B,EAAQ5B,MAChB2hB,EAAmB3hB,EAAMjN,QAAQwO,UACvChQ,EAASowB,GAAoBA,EAAiBk2B,WAAY,CACtDj2C,GACD5B,EACP,CACC,SAAS83C,GAAUpjD,GAShB,OARIkiB,MAAqC,iBAATliB,EAC5BA,EAAOmiB,SAASkhC,eAAerjD,GACxBA,GAAQA,EAAKtI,SACpBsI,EAAOA,EAAK,IAEZA,GAAQA,EAAK2U,SACb3U,EAAOA,EAAK2U,QAET3U,CACX,CACA,MAAMsjD,GAAY,CAAC,EACbC,GAAYrlD,IACd,MAAMyW,EAASyuC,GAAUllD,GACzB,OAAO5G,OAAO4T,OAAOo4C,IAAWrlC,OAAQ3zB,GAAIA,EAAEqqB,SAAWA,GAAQwV,OAErE,SAASq5B,GAAgB7pD,EAAKwJ,EAAOk1B,GACjC,MAAMz/B,EAAOtB,OAAOsB,KAAKe,GACzB,IAAK,MAAMuE,KAAOtF,EAAK,CACnB,MAAM6qD,GAAUvlD,EAChB,GAAIulD,GAAUtgD,EAAO,CACjB,MAAMtH,EAAQlC,EAAIuE,UACXvE,EAAIuE,IACPm6B,EAAO,GAAKorB,EAAStgD,KACrBxJ,EAAI8pD,EAASprB,GAAQx8B,EAE7B,CACJ,CACJ,CAUA,MAAM6nD,GACFjzB,gBAAkB5gB,GAClB4gB,iBAAmB6yB,GACnB7yB,iBAAmBrkB,GACnBqkB,gBAAkBkU,GAClBlU,eA3EU,QA4EVA,gBAAkB8yB,GAClB,eAAO/G,IAAYz3C,GACf4/B,GAAS/mB,OAAO7Y,GAChB4+C,IACJ,CACA,iBAAOxG,IAAcp4C,GACjB4/B,GAAS3Z,UAAUjmB,GACnB4+C,IACJ,CACA,WAAAprD,CAAYyH,EAAM4jD,GACd,MAAM/2B,EAAStzB,KAAKszB,OAAS,IAAI20B,GAAOoC,GAClCC,EAAgBT,GAAUpjD,GAC1B8jD,EAAgBP,GAASM,GAC/B,GAAIC,EACA,MAAM,IAAIpmC,MAAM,4CAA+ComC,EAAcnoD,GAA7D,kDAA6HmoD,EAAcnvC,OAAOhZ,GAAK,oBAE3K,MAAM0C,EAAUwuB,EAAOqH,eAAerH,EAAOw1B,oBAAqB9oD,KAAKqb,cACvErb,KAAK4T,SAAW,IAAK0f,EAAO1f,UAAY4iC,GAAgB8T,IACxDtqD,KAAK4T,SAASs+B,aAAa5e,GAC3B,MAAM3f,EAAU3T,KAAK4T,SAASk+B,eAAewY,EAAexlD,EAAQghC,aAC9D1qB,EAASzH,GAAWA,EAAQyH,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1B3C,EAAQuC,GAAUA,EAAOvC,MAC/B7Y,KAAKoC,GAAKD,IACVnC,KAAKsU,IAAMX,EACX3T,KAAKob,OAASA,EACdpb,KAAK6Y,MAAQA,EACb7Y,KAAKwb,OAASA,EACdxb,KAAKwqD,SAAW1lD,EAChB9E,KAAKyqD,aAAezqD,KAAK8lC,YACzB9lC,KAAKkwC,QAAU,GACflwC,KAAK0qD,UAAY,GACjB1qD,KAAKi2B,aAAU31B,EACfN,KAAKuvC,MAAQ,GACbvvC,KAAKib,6BAA0B3a,EAC/BN,KAAKgvB,eAAY1uB,EACjBN,KAAKywB,QAAU,GACfzwB,KAAK2qD,gBAAarqD,EAClBN,KAAK4qD,WAAa,CAAC,EAClB5qD,KAAK6qD,0BAAuBvqD,EAC7BN,KAAK8qD,gBAAkB,GACvB9qD,KAAKqV,OAAS,CAAC,EACfrV,KAAK+qD,SAAW,IAAI5F,GACpBnlD,KAAK21C,SAAW,CAAC,EACjB31C,KAAKgrD,eAAiB,CAAC,EACvBhrD,KAAKirD,UAAW,EAChBjrD,KAAK69B,yBAAsBv9B,EAC3BN,KAAK63B,cAAWv3B,EAChBN,KAAKkrD,UD39JT,SAAkB3nD,EAAIoT,GACtB,IAAIw0C,EACJ,OAAO,YAAY3nD,GAOf,OANImT,GACAy0C,aAAaD,GACbA,EAAUE,WAAW9nD,EAAIoT,EAAOnT,IAEhCD,EAAGG,MAAM1D,KAAMwD,GAEZmT,CACX,CACJ,CCg9JyB20C,CAAU32C,GAAO3U,KAAK4yB,OAAOje,GAAO7P,EAAQymD,aAAe,GAC5EvrD,KAAKk/B,aAAe,GACpB6qB,GAAU/pD,KAAKoC,IAAMpC,KAChB2T,GAAYyH,GAIjBsW,GAAST,OAAOjxB,KAAM,WAAYypD,IAClC/3B,GAAST,OAAOjxB,KAAM,WAAY2pD,IAClC3pD,KAAKwrD,cACDxrD,KAAKirD,UACLjrD,KAAK4yB,UAPL1R,QAAQgmC,MAAM,oEAStB,CACA,eAAIphB,GACA,MAAQhhC,SAAS,YAAEghC,EAAY,oBAAEhxB,GAAuB,MAAE+D,EAAM,OAAE2C,EAAO,aAAEivC,GAAkBzqD,KAC7F,OAAKqC,EAAcyjC,GAGfhxB,GAAuB21C,EAChBA,EAEJjvC,EAAS3C,EAAQ2C,EAAS,KALtBsqB,CAMf,CACA,QAAI/rB,GACA,OAAO/Z,KAAKszB,OAAOvZ,IACvB,CACA,QAAIA,CAAKA,GACL/Z,KAAKszB,OAAOvZ,KAAOA,CACvB,CACA,WAAIjV,GACA,OAAO9E,KAAKwqD,QAChB,CACA,WAAI1lD,CAAQA,GACR9E,KAAKszB,OAAOxuB,QAAUA,CAC1B,CACA,YAAIsmC,GACA,OAAOA,EACX,CACH,WAAAogB,GASO,OARAxrD,KAAK48C,cAAc,cACf58C,KAAK8E,QAAQqQ,WACbnV,KAAKiX,SAEL+T,GAAYhrB,KAAMA,KAAK8E,QAAQ4O,kBAEnC1T,KAAKyrD,aACLzrD,KAAK48C,cAAc,aACZ58C,IACX,CACA,KAAAuoD,GAEI,OADAptC,GAAYnb,KAAKob,OAAQpb,KAAKsU,KACvBtU,IACX,CACA,IAAAuxB,GAEI,OADAG,GAASH,KAAKvxB,MACPA,IACX,CACH,MAAAiX,CAAO4B,EAAO2C,GACFkW,GAASnB,QAAQvwB,MAGlBA,KAAK0rD,kBAAoB,CACrB7yC,QACA2C,UAJJxb,KAAK2rD,QAAQ9yC,EAAO2C,EAO5B,CACA,OAAAmwC,CAAQ9yC,EAAO2C,GACX,MAAM1W,EAAU9E,KAAK8E,QACfsW,EAASpb,KAAKob,OACd0qB,EAAchhC,EAAQgQ,qBAAuB9U,KAAK8lC,YAClD8lB,EAAU5rD,KAAK4T,SAASo+B,eAAe52B,EAAQvC,EAAO2C,EAAQsqB,GAC9D+lB,EAAW/mD,EAAQ4O,kBAAoB1T,KAAK4T,SAASC,sBACrDc,EAAO3U,KAAK6Y,MAAQ,SAAW,SACrC7Y,KAAK6Y,MAAQ+yC,EAAQ/yC,MACrB7Y,KAAKwb,OAASowC,EAAQpwC,OACtBxb,KAAKyqD,aAAezqD,KAAK8lC,YACpB9a,GAAYhrB,KAAM6rD,GAAU,KAGjC7rD,KAAK48C,cAAc,SAAU,CACzBp2C,KAAMolD,IAEVtoD,EAASwB,EAAQgnD,SAAU,CACvB9rD,KACA4rD,GACD5rD,MACCA,KAAKirD,UACDjrD,KAAKkrD,UAAUv2C,IACf3U,KAAK+rD,SAGjB,CACA,mBAAAC,GAGIroD,EAFgB3D,KAAK8E,QACSuQ,QAAU,CAAC,EACrB,CAAC42C,EAAa9mB,KAC9B8mB,EAAY7pD,GAAK+iC,GAEzB,CACH,mBAAA+mB,GACO,MAAMpnD,EAAU9E,KAAK8E,QACfqnD,EAAYrnD,EAAQuQ,OACpBA,EAASrV,KAAKqV,OACd+2C,EAAUruD,OAAOsB,KAAKgW,GAAQ8b,OAAO,CAAC/wB,EAAKgC,KAC7ChC,EAAIgC,IAAM,EACHhC,GACR,CAAC,GACJ,IAAIoL,EAAQ,GACR2gD,IACA3gD,EAAQA,EAAMs0B,OAAO/hC,OAAOsB,KAAK8sD,GAAW35D,IAAK4P,IAC7C,MAAMukD,EAAewF,EAAU/pD,GACzB4K,EAAO05C,GAActkD,EAAIukD,GACzB0F,EAAoB,MAATr/C,EACXq1B,EAAwB,MAATr1B,EACrB,MAAO,CACHlI,QAAS6hD,EACT2F,UAAWD,EAAW,YAAchqB,EAAe,SAAW,OAC9DkqB,MAAOF,EAAW,eAAiBhqB,EAAe,WAAa,cAI3E1+B,EAAK6H,EAAQ/E,IACT,MAAMkgD,EAAelgD,EAAK3B,QACpB1C,EAAKukD,EAAavkD,GAClB4K,EAAO05C,GAActkD,EAAIukD,GACzB6F,EAAYvpD,EAAe0jD,EAAa1nD,KAAMwH,EAAK8lD,YAC3BjsD,IAA1BqmD,EAAapa,UAA0B8c,GAAqB1C,EAAapa,SAAUv/B,KAAUq8C,GAAqB5iD,EAAK6lD,aACvH3F,EAAapa,SAAW9lC,EAAK6lD,WAEjCF,EAAQhqD,IAAM,EACd,IAAIgT,EAAQ,KACRhT,KAAMiT,GAAUA,EAAOjT,GAAInD,OAASutD,EACpCp3C,EAAQC,EAAOjT,IAGfgT,EAAQ,IADWg2B,GAASkZ,SAASkI,GAC7B,CAAe,CACnBpqD,KACAnD,KAAMutD,EACNl4C,IAAKtU,KAAKsU,IACVvC,MAAO/R,OAEXqV,EAAOD,EAAMhT,IAAMgT,GAEvBA,EAAMs2B,KAAKib,EAAc7hD,KAE7BnB,EAAKyoD,EAAS,CAACK,EAAYrqD,KAClBqqD,UACMp3C,EAAOjT,KAGtBuB,EAAK0R,EAASD,IACV46B,GAAQvc,UAAUzzB,KAAMoV,EAAOA,EAAMtQ,SACrCkrC,GAAQC,OAAOjwC,KAAMoV,IAE7B,CACH,eAAAs3C,GACO,MAAM93B,EAAW50B,KAAK0qD,UAChB/rB,EAAU3+B,KAAK+Z,KAAKtG,SAAStV,OAC7BugC,EAAU9J,EAASz2B,OAEzB,GADAy2B,EAASmL,KAAK,CAAClvC,EAAGC,IAAID,EAAEwT,MAAQvT,EAAEuT,OAC9Bq6B,EAAUC,EAAS,CACnB,IAAI,IAAI3sC,EAAI2sC,EAAS3sC,EAAI0sC,IAAW1sC,EAChCgO,KAAK2sD,oBAAoB36D,GAE7B4iC,EAASvpB,OAAOszB,EAASD,EAAUC,EACvC,CACA3+B,KAAK8qD,gBAAkBl2B,EAASlyB,MAAM,GAAGq9B,KAAKupB,GAAc,QAAS,SACzE,CACH,2BAAAsD,GACO,MAAQlC,UAAW91B,EAAW7a,MAAM,SAAEtG,IAAiBzT,KACnD40B,EAASz2B,OAASsV,EAAStV,eACpB6B,KAAKi2B,QAEhBrB,EAAStpB,QAAQ,CAACe,EAAMhI,KACqC,IAArDoP,EAASiR,OAAQ/xB,GAAIA,IAAM0Z,EAAK68B,UAAU/qC,QAC1C6B,KAAK2sD,oBAAoBtoD,IAGrC,CACA,wBAAAwoD,GACI,MAAMC,EAAiB,GACjBr5C,EAAWzT,KAAK+Z,KAAKtG,SAC3B,IAAIzhB,EAAGiS,EAEP,IADAjE,KAAK4sD,8BACD56D,EAAI,EAAGiS,EAAOwP,EAAStV,OAAQnM,EAAIiS,EAAMjS,IAAI,CAC7C,MAAM+a,EAAU0G,EAASzhB,GACzB,IAAIqa,EAAOrM,KAAKq5B,eAAernC,GAC/B,MAAMiN,EAAO8N,EAAQ9N,MAAQe,KAAKszB,OAAOr0B,KAWzC,GAVIoN,EAAKpN,MAAQoN,EAAKpN,OAASA,IAC3Be,KAAK2sD,oBAAoB36D,GACzBqa,EAAOrM,KAAKq5B,eAAernC,IAE/Bqa,EAAKpN,KAAOA,EACZoN,EAAKoI,UAAY1H,EAAQ0H,WAAa6xC,GAAarnD,EAAMe,KAAK8E,SAC9DuH,EAAK0gD,MAAQhgD,EAAQggD,OAAS,EAC9B1gD,EAAKhI,MAAQrS,EACbqa,EAAKkwB,MAAQ,GAAKxvB,EAAQwvB,MAC1BlwB,EAAK+K,QAAUpX,KAAK0mC,iBAAiB10C,GACjCqa,EAAK0pB,WACL1pB,EAAK0pB,WAAWuC,YAAYtmC,GAC5Bqa,EAAK0pB,WAAWmC,iBACb,CACH,MAAM80B,EAAkB5hB,GAAS+Y,cAAcllD,IACzC,mBAAE84B,EAAmB,gBAAEC,GAAqB1hB,GAAS7C,SAASxU,GACpElB,OAAOC,OAAOgvD,EAAiB,CAC3Bh1B,gBAAiBoT,GAASC,WAAWrT,GACrCD,mBAAoBA,GAAsBqT,GAASC,WAAWtT,KAElE1rB,EAAK0pB,WAAa,IAAIi3B,EAAgBhtD,KAAMhO,GAC5C86D,EAAe9mD,KAAKqG,EAAK0pB,WAC7B,CACJ,CAEA,OADA/1B,KAAK0sD,kBACEI,CACX,CACH,cAAAG,GACOtpD,EAAK3D,KAAK+Z,KAAKtG,SAAU,CAAC1G,EAAS3I,KAC/BpE,KAAKq5B,eAAej1B,GAAc2xB,WAAWyD,SAC9Cx5B,KACP,CACH,KAAAw5B,GACOx5B,KAAKitD,iBACLjtD,KAAK48C,cAAc,QACvB,CACA,MAAAhqB,CAAOje,GACH,MAAM2e,EAAStzB,KAAKszB,OACpBA,EAAOV,SACP,MAAM9tB,EAAU9E,KAAKwqD,SAAWl3B,EAAOqH,eAAerH,EAAOw1B,oBAAqB9oD,KAAKqb,cACjF6xC,EAAgBltD,KAAK69B,qBAAuB/4B,EAAQwO,UAK1D,GAJAtT,KAAKmtD,gBACLntD,KAAKotD,sBACLptD,KAAKqtD,uBACLrtD,KAAK+qD,SAASpF,cAIP,IAHH3lD,KAAK48C,cAAc,eAAgB,CACnCjoC,OACA+wC,YAAY,IAEZ,OAEJ,MAAMoH,EAAiB9sD,KAAK6sD,2BAC5B7sD,KAAK48C,cAAc,wBACnB,IAAItM,EAAa,EACjB,IAAI,IAAIt+C,EAAI,EAAGiS,EAAOjE,KAAK+Z,KAAKtG,SAAStV,OAAQnM,EAAIiS,EAAMjS,IAAI,CAC3D,MAAM,WAAE+jC,GAAgB/1B,KAAKq5B,eAAernC,GACtCwnC,GAAS0zB,IAAyD,IAAxCJ,EAAeloD,QAAQmxB,GACvDA,EAAWoE,sBAAsBX,GACjC8W,EAAavgD,KAAKC,KAAK+lC,EAAWsG,iBAAkBiU,EACxD,CACAA,EAAatwC,KAAKstD,YAAcxoD,EAAQ4pC,OAAOp3B,YAAcg5B,EAAa,EAC1EtwC,KAAKutD,cAAcjd,GACd4c,GACDvpD,EAAKmpD,EAAiB/2B,IAClBA,EAAWyD,UAGnBx5B,KAAKwtD,gBAAgB74C,GACrB3U,KAAK48C,cAAc,cAAe,CAC9BjoC,SAEJ3U,KAAKkwC,QAAQnQ,KAAKupB,GAAc,IAAK,SACrC,MAAM,QAAE74B,EAAQ,WAAEk6B,GAAgB3qD,KAC9B2qD,EACA3qD,KAAKytD,cAAc9C,GAAY,GACxBl6B,EAAQtyB,QACf6B,KAAK0tD,mBAAmBj9B,EAASA,GAAS,GAE9CzwB,KAAK+rD,QACT,CACH,aAAAoB,GACOxpD,EAAK3D,KAAKqV,OAASD,IACf46B,GAAQI,UAAUpwC,KAAMoV,KAE5BpV,KAAKgsD,sBACLhsD,KAAKksD,qBACT,CACH,mBAAAkB,GACO,MAAMtoD,EAAU9E,KAAK8E,QACf6oD,EAAiB,IAAIjiD,IAAI3N,OAAOsB,KAAKW,KAAK4qD,aAC1CgD,EAAY,IAAIliD,IAAI5G,EAAQiP,QAC7BxN,GAAUonD,EAAgBC,MAAgB5tD,KAAK6qD,uBAAyB/lD,EAAQqQ,aACjFnV,KAAK6tD,eACL7tD,KAAKyrD,aAEb,CACH,oBAAA4B,GACO,MAAM,eAAErC,GAAoBhrD,KACtB8tD,EAAU9tD,KAAK+tD,0BAA4B,GACjD,IAAK,MAAM,OAAE36B,EAAO,MAAExpB,EAAM,MAAE6C,KAAYqhD,EAEtC7D,GAAgBe,EAAgBphD,EADR,oBAAXwpB,GAAgC3mB,EAAQA,EAG7D,CACH,sBAAAshD,GACO,MAAM7uB,EAAel/B,KAAKk/B,aAC1B,IAAKA,IAAiBA,EAAa/gC,OAC/B,OAEJ6B,KAAKk/B,aAAe,GACpB,MAAM8uB,EAAehuD,KAAK+Z,KAAKtG,SAAStV,OAClC8vD,EAAW9O,GAAM,IAAIzzC,IAAIwzB,EAAaxa,OAAQ3zB,GAAIA,EAAE,KAAOouD,GAAK3sD,IAAI,CAACzB,EAAGiB,IAAIA,EAAI,IAAMjB,EAAEsa,OAAO,GAAG+Y,KAAK,OACvG8pC,EAAYD,EAAQ,GAC1B,IAAI,IAAIj8D,EAAI,EAAGA,EAAIg8D,EAAch8D,IAC7B,IAAKuU,GAAU2nD,EAAWD,EAAQj8D,IAC9B,OAGR,OAAOM,MAAMmL,KAAKywD,GAAW17D,IAAKzB,GAAIA,EAAE+U,MAAM,MAAMtT,IAAK3B,IAAI,CACrDuiC,OAAQviC,EAAE,GACV+Y,OAAQ/Y,EAAE,GACV4b,OAAQ5b,EAAE,KAEtB,CACH,aAAA08D,CAAcjd,GACP,IAEO,IAFHtwC,KAAK48C,cAAc,eAAgB,CACnC8I,YAAY,IAEZ,OAEJ1V,GAAQpd,OAAO5yB,KAAMA,KAAK6Y,MAAO7Y,KAAKwb,OAAQ80B,GAC9C,MAAMpzB,EAAOld,KAAKgvB,UACZm/B,EAASjxC,EAAKrE,OAAS,GAAKqE,EAAK1B,QAAU,EACjDxb,KAAKkwC,QAAU,GACfvsC,EAAK3D,KAAKuvC,MAAQllB,IACV8jC,GAA2B,cAAjB9jC,EAAIkiB,WAGdliB,EAAIoJ,WACJpJ,EAAIoJ,YAERzzB,KAAKkwC,QAAQlqC,QAAQqkB,EAAI6lB,aAC1BlwC,MACHA,KAAKkwC,QAAQ5kC,QAAQ,CAAC7E,EAAMpC,KACxBoC,EAAK2nD,KAAO/pD,IAEhBrE,KAAK48C,cAAc,cACvB,CACH,eAAA4Q,CAAgB74C,GACT,IAGO,IAHH3U,KAAK48C,cAAc,uBAAwB,CAC3CjoC,OACA+wC,YAAY,IAFhB,CAMA,IAAI,IAAI1zD,EAAI,EAAGiS,EAAOjE,KAAK+Z,KAAKtG,SAAStV,OAAQnM,EAAIiS,IAAQjS,EACzDgO,KAAKq5B,eAAernC,GAAG+jC,WAAWtC,YAEtC,IAAI,IAAIzhC,EAAI,EAAGiS,EAAOjE,KAAK+Z,KAAKtG,SAAStV,OAAQnM,EAAIiS,IAAQjS,EACzDgO,KAAKquD,eAAer8D,EAAGsU,GAAWqO,GAAQA,EAAK,CAC3CvQ,aAAcpS,IACb2iB,GAET3U,KAAK48C,cAAc,sBAAuB,CACtCjoC,QAVJ,CAYJ,CACH,cAAA05C,CAAehqD,EAAOsQ,GACf,MAAMtI,EAAOrM,KAAKq5B,eAAeh1B,GAC3Bb,EAAO,CACT6I,OACAhI,QACAsQ,OACA+wC,YAAY,IAEwC,IAApD1lD,KAAK48C,cAAc,sBAAuBp5C,KAG9C6I,EAAK0pB,WAAW5F,QAAQxb,GACxBnR,EAAKkiD,YAAa,EAClB1lD,KAAK48C,cAAc,qBAAsBp5C,GAC7C,CACA,MAAAuoD,IAGW,IAFH/rD,KAAK48C,cAAc,eAAgB,CACnC8I,YAAY,MAIZh0B,GAAShrB,IAAI1G,MACTA,KAAKirD,WAAav5B,GAASnB,QAAQvwB,OACnC0xB,GAAS9nB,MAAM5J,OAGnBA,KAAKwwB,OACLi5B,GAAqB,CACjB13C,MAAO/R,QAGnB,CACA,IAAAwwB,GACI,IAAIx+B,EACJ,GAAIgO,KAAK0rD,kBAAmB,CACxB,MAAM,MAAE7yC,EAAM,OAAE2C,GAAYxb,KAAK0rD,kBACjC1rD,KAAK0rD,kBAAoB,KACzB1rD,KAAK2rD,QAAQ9yC,EAAO2C,EACxB,CAEA,GADAxb,KAAKuoD,QACDvoD,KAAK6Y,OAAS,GAAK7Y,KAAKwb,QAAU,EAClC,OAEJ,IAEO,IAFHxb,KAAK48C,cAAc,aAAc,CACjC8I,YAAY,IAEZ,OAEJ,MAAM4I,EAAStuD,KAAKkwC,QACpB,IAAIl+C,EAAI,EAAGA,EAAIs8D,EAAOnwD,QAAUmwD,EAAOt8D,GAAGm+C,GAAK,IAAKn+C,EAChDs8D,EAAOt8D,GAAGw+B,KAAKxwB,KAAKgvB,WAGxB,IADAhvB,KAAKuuD,gBACCv8D,EAAIs8D,EAAOnwD,SAAUnM,EACvBs8D,EAAOt8D,GAAGw+B,KAAKxwB,KAAKgvB,WAExBhvB,KAAK48C,cAAc,YACvB,CACH,sBAAA/nB,CAAuBF,GAChB,MAAMC,EAAW50B,KAAK8qD,gBAChBjhC,EAAS,GACf,IAAI73B,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAO2wB,EAASz2B,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC7C,MAAMqa,EAAOuoB,EAAS5iC,GACjB2iC,IAAiBtoB,EAAK+K,SACvByS,EAAO7jB,KAAKqG,EAEpB,CACA,OAAOwd,CACX,CACH,4BAAA4iB,GACO,OAAOzsC,KAAK60B,wBAAuB,EACvC,CACH,aAAA05B,GACO,IAEO,IAFHvuD,KAAK48C,cAAc,qBAAsB,CACzC8I,YAAY,IAEZ,OAEJ,MAAM9wB,EAAW50B,KAAKysC,+BACtB,IAAI,IAAIz6C,EAAI4iC,EAASz2B,OAAS,EAAGnM,GAAK,IAAKA,EACvCgO,KAAKwuD,aAAa55B,EAAS5iC,IAE/BgO,KAAK48C,cAAc,oBACvB,CACH,YAAA4R,CAAaniD,GACN,MAAMiI,EAAMtU,KAAKsU,IACX9Q,EAAO,CACT6I,OACAhI,MAAOgI,EAAKhI,MACZqhD,YAAY,GAEV1tC,EAAOkX,GAAmBlvB,KAAMqM,IACgB,IAAlDrM,KAAK48C,cAAc,oBAAqBp5C,KAGxCwU,GACAoF,GAAS9I,EAAK0D,GAElB3L,EAAK0pB,WAAWvF,OACZxY,GACAqF,GAAW/I,GAEf9Q,EAAKkiD,YAAa,EAClB1lD,KAAK48C,cAAc,mBAAoBp5C,GAC3C,CACH,aAAAopC,CAAcr/B,GACP,OAAO0P,GAAe1P,EAAOvN,KAAKgvB,UAAWhvB,KAAKstD,YACtD,CACA,yBAAAmB,CAA0Bx9D,EAAG0jB,EAAM7P,EAAS6nC,GACxC,MAAMvZ,EAASya,GAAYC,MAAMn5B,GACjC,MAAsB,mBAAXye,EACAA,EAAOpzB,KAAM/O,EAAG6T,EAAS6nC,GAE7B,EACX,CACA,cAAAtT,CAAej1B,GACX,MAAM2I,EAAU/M,KAAK+Z,KAAKtG,SAASrP,GAC7BwwB,EAAW50B,KAAK0qD,UACtB,IAAIr+C,EAAOuoB,EAASlQ,OAAQ/xB,GAAIA,GAAKA,EAAEu2C,WAAan8B,GAAS6jB,MAkB7D,OAjBKvkB,IACDA,EAAO,CACHpN,KAAM,KACN8a,KAAM,GACNhN,QAAS,KACTgpB,WAAY,KACZ+F,OAAQ,KACRpD,QAAS,KACTE,QAAS,KACTm0B,MAAOhgD,GAAWA,EAAQggD,OAAS,EACnC1oD,MAAOD,EACP8kC,SAAUn8B,EACVF,QAAS,GACTH,SAAS,GAEbkoB,EAAS5uB,KAAKqG,IAEXA,CACX,CACA,UAAAgP,GACI,OAAOrb,KAAK63B,WAAa73B,KAAK63B,SAAWpW,GAAc,KAAM,CACzD1P,MAAO/R,KACPf,KAAM,UAEd,CACA,sBAAAorC,GACI,OAAOrqC,KAAKysC,+BAA+BtuC,MAC/C,CACA,gBAAAuoC,CAAiBtiC,GACb,MAAM2I,EAAU/M,KAAK+Z,KAAKtG,SAASrP,GACnC,IAAK2I,EACD,OAAO,EAEX,MAAMV,EAAOrM,KAAKq5B,eAAej1B,GACjC,MAA8B,kBAAhBiI,EAAKyvB,QAAwBzvB,EAAKyvB,QAAU/uB,EAAQ+uB,MACtE,CACA,oBAAA4yB,CAAqBtqD,EAAcgT,GAClBpX,KAAKq5B,eAAej1B,GAC5B03B,QAAU1kB,CACnB,CACA,oBAAA+uB,CAAqB9hC,GACjBrE,KAAKgrD,eAAe3mD,IAAUrE,KAAKgrD,eAAe3mD,EACtD,CACA,iBAAA8/B,CAAkB9/B,GACd,OAAQrE,KAAKgrD,eAAe3mD,EAChC,CACH,iBAAAsqD,CAAkBvqD,EAAcy4B,EAAWzlB,GACpC,MAAMzC,EAAOyC,EAAU,OAAS,OAC1B/K,EAAOrM,KAAKq5B,eAAej1B,GAC3BwrB,EAAQvjB,EAAK0pB,WAAWwH,wBAAmBj9B,EAAWqU,GACxDtO,GAAQw2B,IACRxwB,EAAK0N,KAAK8iB,GAAWf,QAAU1kB,EAC/BpX,KAAK4yB,WAEL5yB,KAAK0uD,qBAAqBtqD,EAAcgT,GACxCwY,EAAMgD,OAAOvmB,EAAM,CACf+K,YAEJpX,KAAK4yB,OAAQte,GAAMA,EAAIlQ,eAAiBA,EAAeuQ,OAAOrU,GAEtE,CACA,IAAA+W,CAAKjT,EAAcy4B,GACf78B,KAAK2uD,kBAAkBvqD,EAAcy4B,GAAW,EACpD,CACA,IAAA3lB,CAAK9S,EAAcy4B,GACf78B,KAAK2uD,kBAAkBvqD,EAAcy4B,GAAW,EACpD,CACH,mBAAA8vB,CAAoBvoD,GACb,MAAMiI,EAAOrM,KAAK0qD,UAAUtmD,GACxBiI,GAAQA,EAAK0pB,YACb1pB,EAAK0pB,WAAW0D,kBAEbz5B,KAAK0qD,UAAUtmD,EAC1B,CACA,KAAAwqD,GACI,IAAI58D,EAAGiS,EAGP,IAFAjE,KAAKuxB,OACLG,GAASD,OAAOzxB,MACZhO,EAAI,EAAGiS,EAAOjE,KAAK+Z,KAAKtG,SAAStV,OAAQnM,EAAIiS,IAAQjS,EACrDgO,KAAK2sD,oBAAoB36D,EAEjC,CACA,OAAA68D,GACI7uD,KAAK48C,cAAc,iBACnB,MAAM,OAAExhC,EAAO,IAAE9G,GAAStU,KAC1BA,KAAK4uD,QACL5uD,KAAKszB,OAAOg1B,aACRltC,IACApb,KAAK6tD,eACL1yC,GAAYC,EAAQ9G,GACpBtU,KAAK4T,SAASm+B,eAAez9B,GAC7BtU,KAAKob,OAAS,KACdpb,KAAKsU,IAAM,aAERy1C,GAAU/pD,KAAKoC,IACtBpC,KAAK48C,cAAc,eACvB,CACA,aAAAkS,IAAiBtrD,GACb,OAAOxD,KAAKob,OAAO2zC,aAAavrD,EACpC,CACH,UAAAioD,GACOzrD,KAAKgvD,iBACDhvD,KAAK8E,QAAQqQ,WACbnV,KAAKivD,uBAELjvD,KAAKirD,UAAW,CAExB,CACH,cAAA+D,GACO,MAAM5jD,EAAYpL,KAAK4qD,WACjBh3C,EAAW5T,KAAK4T,SAChBs7C,EAAO,CAACjwD,EAAMgM,KAChB2I,EAAS8X,iBAAiB1rB,KAAMf,EAAMgM,GACtCG,EAAUnM,GAAQgM,GAEhBA,EAAW,CAACha,EAAG0B,EAAG+S,KACpBzU,EAAEs5B,QAAU53B,EACZ1B,EAAEu5B,QAAU9kB,EACZ1F,KAAKytD,cAAcx8D,IAEvB0S,EAAK3D,KAAK8E,QAAQiP,OAAS9U,GAAOiwD,EAAKjwD,EAAMgM,GACjD,CACH,oBAAAgkD,GACYjvD,KAAK6qD,uBACN7qD,KAAK6qD,qBAAuB,CAAC,GAEjC,MAAMz/C,EAAYpL,KAAK6qD,qBACjBj3C,EAAW5T,KAAK4T,SAChBs7C,EAAO,CAACjwD,EAAMgM,KAChB2I,EAAS8X,iBAAiB1rB,KAAMf,EAAMgM,GACtCG,EAAUnM,GAAQgM,GAEhBkkD,EAAU,CAAClwD,EAAMgM,KACfG,EAAUnM,KACV2U,EAAS+X,oBAAoB3rB,KAAMf,EAAMgM,UAClCG,EAAUnM,KAGnBgM,EAAW,CAAC4N,EAAO2C,KACjBxb,KAAKob,QACLpb,KAAKiX,OAAO4B,EAAO2C,IAG3B,IAAI4zC,EACJ,MAAMnE,EAAW,KACbkE,EAAQ,SAAUlE,GAClBjrD,KAAKirD,UAAW,EAChBjrD,KAAKiX,SACLi4C,EAAK,SAAUjkD,GACfikD,EAAK,SAAUE,IAEnBA,EAAW,KACPpvD,KAAKirD,UAAW,EAChBkE,EAAQ,SAAUlkD,GAClBjL,KAAK4uD,QACL5uD,KAAK2rD,QAAQ,EAAG,GAChBuD,EAAK,SAAUjE,IAEfr3C,EAASq+B,WAAWjyC,KAAKob,QACzB6vC,IAEAmE,GAER,CACH,YAAAvB,GACOlqD,EAAK3D,KAAK4qD,WAAY,CAAC3/C,EAAUhM,KAC7Be,KAAK4T,SAAS+X,oBAAoB3rB,KAAMf,EAAMgM,KAElDjL,KAAK4qD,WAAa,CAAC,EACnBjnD,EAAK3D,KAAK6qD,qBAAsB,CAAC5/C,EAAUhM,KACvCe,KAAK4T,SAAS+X,oBAAoB3rB,KAAMf,EAAMgM,KAElDjL,KAAK6qD,0BAAuBvqD,CAChC,CACA,gBAAA+uD,CAAiB7jD,EAAOmJ,EAAM6mC,GAC1B,MAAM54B,EAAS44B,EAAU,MAAQ,SACjC,IAAInvC,EAAM5F,EAAMzU,EAAGiS,EAKnB,IAJa,YAAT0Q,IACAtI,EAAOrM,KAAKq5B,eAAe7tB,EAAM,GAAGpH,cACpCiI,EAAK0pB,WAAW,IAAMnT,EAAS,wBAE/B5wB,EAAI,EAAGiS,EAAOuH,EAAMrN,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC1CyU,EAAO+E,EAAMxZ,GACb,MAAM+jC,EAAatvB,GAAQzG,KAAKq5B,eAAe5yB,EAAKrC,cAAc2xB,WAC9DA,GACAA,EAAWnT,EAAS,cAAcnc,EAAK6iB,QAAS7iB,EAAKrC,aAAcqC,EAAKpC,MAEhF,CACJ,CACH,iBAAAirD,GACO,OAAOtvD,KAAKywB,SAAW,EAC3B,CACH,iBAAA8+B,CAAkBC,GACX,MAAMC,EAAazvD,KAAKywB,SAAW,GAC7BzZ,EAASw4C,EAAeh9D,IAAI,EAAG4R,eAAeC,YAChD,MAAMgI,EAAOrM,KAAKq5B,eAAej1B,GACjC,IAAKiI,EACD,MAAM,IAAI8X,MAAM,6BAA+B/f,GAEnD,MAAO,CACHA,eACAklB,QAASjd,EAAK0N,KAAK1V,GACnBA,YAGSP,EAAekT,EAAQy4C,KAEpCzvD,KAAKywB,QAAUzZ,EACfhX,KAAK2qD,WAAa,KAClB3qD,KAAK0tD,mBAAmB12C,EAAQy4C,GAExC,CACH,aAAA7S,CAAc0I,EAAM9hD,EAAMkhB,GACnB,OAAO1kB,KAAK+qD,SAAS1F,OAAOrlD,KAAMslD,EAAM9hD,EAAMkhB,EAClD,CACH,eAAA2T,CAAgBq3B,GACT,OAA6E,IAAtE1vD,KAAK+qD,SAASprB,OAAOjb,OAAQzjB,GAAIA,EAAEwkD,OAAOrjD,KAAOstD,GAAUvxD,MACtE,CACH,kBAAAuvD,CAAmB12C,EAAQy4C,EAAYE,GAChC,MAAMC,EAAe5vD,KAAK8E,QAAQsP,MAC5Bw3B,EAAO,CAAC/6C,EAAGC,IAAID,EAAE6zB,OAAQ/xB,IAAK7B,EAAEs1D,KAAM1gD,GAAI/S,EAAEyR,eAAiBsB,EAAEtB,cAAgBzR,EAAE0R,QAAUqB,EAAErB,QAC7FwrD,EAAcjkB,EAAK6jB,EAAYz4C,GAC/B84C,EAAYH,EAAS34C,EAAS40B,EAAK50B,EAAQy4C,GAC7CI,EAAY1xD,QACZ6B,KAAKqvD,iBAAiBQ,EAAaD,EAAaj7C,MAAM,GAEtDm7C,EAAU3xD,QAAUyxD,EAAaj7C,MACjC3U,KAAKqvD,iBAAiBS,EAAWF,EAAaj7C,MAAM,EAE5D,CACH,aAAA84C,CAAcx8D,EAAG0+D,GACV,MAAMnsD,EAAO,CACTwmB,MAAO/4B,EACP0+D,SACAjK,YAAY,EACZqK,YAAa/vD,KAAK4sC,cAAc37C,IAE9B++D,EAAevK,IAAUA,EAAO3gD,QAAQiP,QAAU/T,KAAK8E,QAAQiP,QAAQpB,SAAS1hB,EAAE6jD,OAAO71C,MAC/F,IAA6D,IAAzDe,KAAK48C,cAAc,cAAep5C,EAAMwsD,GACxC,OAEJ,MAAM9hD,EAAUlO,KAAKiwD,aAAah/D,EAAG0+D,EAAQnsD,EAAKusD,aAMlD,OALAvsD,EAAKkiD,YAAa,EAClB1lD,KAAK48C,cAAc,aAAcp5C,EAAMwsD,IACnC9hD,GAAW1K,EAAK0K,UAChBlO,KAAK+rD,SAEF/rD,IACX,CACH,YAAAiwD,CAAah/D,EAAG0+D,EAAQI,GACjB,MAAQt/B,QAASg/B,EAAa,GAAG,QAAE3qD,GAAa9E,KAC1C2sC,EAAmBgjB,EACnB34C,EAAShX,KAAKkwD,mBAAmBj/D,EAAGw+D,EAAYM,EAAapjB,GAC7DwjB,EDj/LV,SAAuBl/D,GACvB,MAAkB,YAAXA,EAAEgO,MAAiC,UAAXhO,EAAEgO,MAA+B,gBAAXhO,EAAEgO,IAC3D,CC++LwBmxD,CAAcn/D,GACxBo/D,EA1xBb,SAA4Bp/D,EAAGo/D,EAAWN,EAAaI,GACpD,OAAKJ,GAA0B,aAAX9+D,EAAEgO,KAGlBkxD,EACOE,EAEJp/D,EALI,IAMf,CAkxB0Bq/D,CAAmBr/D,EAAG+O,KAAK2qD,WAAYoF,EAAaI,GAClEJ,IACA/vD,KAAK2qD,WAAa,KAClBrnD,EAASwB,EAAQiQ,QAAS,CACtB9jB,EACA+lB,EACAhX,MACDA,MACCmwD,GACA7sD,EAASwB,EAAQkQ,QAAS,CACtB/jB,EACA+lB,EACAhX,MACDA,OAGX,MAAMkO,GAAWpK,EAAekT,EAAQy4C,GAMxC,OALIvhD,GAAWyhD,KACX3vD,KAAKywB,QAAUzZ,EACfhX,KAAK0tD,mBAAmB12C,EAAQy4C,EAAYE,IAEhD3vD,KAAK2qD,WAAa0F,EACXniD,CACX,CACH,kBAAAgiD,CAAmBj/D,EAAGw+D,EAAYM,EAAapjB,GACxC,GAAe,aAAX17C,EAAEgO,KACF,MAAO,GAEX,IAAK8wD,EACD,OAAON,EAEX,MAAMG,EAAe5vD,KAAK8E,QAAQsP,MAClC,OAAOpU,KAAKyuD,0BAA0Bx9D,EAAG2+D,EAAaj7C,KAAMi7C,EAAcjjB,EAC9E,EAEJ,SAASyd,KACL,OAAOzmD,EAAKwmD,GAAMJ,UAAYh4C,GAAQA,EAAMg5C,SAASpF,aACzD,CAgFI,SAAS4K,GAAWr+D,EAAGs+D,EAAO79D,EAAG+S,GACjC,MAAO,CACH/S,EAAGA,EAAIT,EAAInC,KAAKuf,IAAIkhD,GACpB9qD,EAAGA,EAAIxT,EAAInC,KAAKse,IAAImiD,GAE5B,CAcI,SAASC,GAAQn8C,EAAKgV,EAASzR,EAAQguB,EAASh8B,EAAKkgC,GACrD,MAAM,EAAEp3C,EAAE,EAAE+S,EAAIyhC,WAAYv9B,EAAM,YAAE8mD,EAActqB,YAAauqB,GAAYrnC,EACrE+c,EAAct2C,KAAKC,IAAIs5B,EAAQ+c,YAAcR,EAAUhuB,EAAS64C,EAAa,GAC7EtqB,EAAcuqB,EAAS,EAAIA,EAAS9qB,EAAUhuB,EAAS64C,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAMnwD,EAAQoJ,EAAMD,EACpB,GAAIi8B,EAAS,CAIT,MAEMgrB,IAFuBF,EAAS,EAAIA,EAAS9qB,EAAU,IAChCQ,EAAc,EAAIA,EAAcR,EAAU,IACI,EAE3E+qB,GAAiBnwD,GAD4B,IAAvBowD,EAA2BpwD,EAAQowD,GAAsBA,EAAqBhrB,GAAWplC,IACrE,CAC9C,CACA,MACMqwD,GAAerwD,EADR1Q,KAAKC,IAAI,KAAOyQ,EAAQ4lC,EAAcxuB,EAASlR,IAAM0/B,GAC7B,EAC/Bc,EAAav9B,EAAQknD,EAAcF,EACnCxpB,EAAWv9B,EAAMinD,EAAcF,GAC/B,WAAEG,EAAW,SAAEC,EAAS,WAAEC,EAAW,SAAEC,GA/D7C,SAA6B10C,EAAK4pB,EAAaC,EAAa8qB,GAC5D,MAAM1rD,EAVC+a,GAUmBhE,EAAI1X,QAAQssD,aAVN,CAC5B,aACA,WACA,aACA,aAOEC,GAAiBhrB,EAAcD,GAAe,EAC9CkrB,EAAavhE,KAAKE,IAAIohE,EAAeF,EAAa/qB,EAAc,GAQhEmrB,EAAqB9vD,IACvB,MAAM+vD,GAAiBnrB,EAAct2C,KAAKE,IAAIohE,EAAe5vD,IAAQ0vD,EAAa,EAClF,OAAOhnD,GAAY1I,EAAK,EAAG1R,KAAKE,IAAIohE,EAAeG,KAEvD,MAAO,CACHT,WAAYQ,EAAkB9rD,EAAEsrD,YAChCC,SAAUO,EAAkB9rD,EAAEurD,UAC9BC,WAAY9mD,GAAY1E,EAAEwrD,WAAY,EAAGK,GACzCJ,SAAU/mD,GAAY1E,EAAEyrD,SAAU,EAAGI,GAE7C,CA0C+DG,CAAoBnoC,EAAS8c,EAAaC,EAAae,EAAWD,GACvHuqB,EAA2BrrB,EAAc0qB,EACzCY,EAAyBtrB,EAAc2qB,EACvCY,EAA0BzqB,EAAa4pB,EAAaW,EACpDG,EAAwBzqB,EAAW4pB,EAAWW,EAC9CG,EAA2B1rB,EAAc6qB,EACzCc,EAAyB3rB,EAAc8qB,EACvCc,EAA0B7qB,EAAa8pB,EAAaa,EACpDG,EAAwB7qB,EAAW8pB,EAAWa,EAEpD,GADAz9C,EAAIgI,YACAytB,EAAU,CAEV,MAAMmoB,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHAv9C,EAAIkI,IAAI7pB,EAAG+S,EAAG2gC,EAAaurB,EAAyBM,GACpD59C,EAAIkI,IAAI7pB,EAAG+S,EAAG2gC,EAAa6rB,EAAuBL,GAE9Cb,EAAW,EAAG,CACd,MAAMmB,EAAU5B,GAAWoB,EAAwBE,EAAuBl/D,EAAG+S,GAC7E4O,EAAIkI,IAAI21C,EAAQx/D,EAAGw/D,EAAQzsD,EAAGsrD,EAAUa,EAAuBzqB,EAAWngC,GAC9E,CAEA,MAAMmrD,EAAK7B,GAAWwB,EAAwB3qB,EAAUz0C,EAAG+S,GAG3D,GAFA4O,EAAIqI,OAAOy1C,EAAGz/D,EAAGy/D,EAAG1sD,GAEhBwrD,EAAW,EAAG,CACd,MAAMiB,EAAU5B,GAAWwB,EAAwBE,EAAuBt/D,EAAG+S,GAC7E4O,EAAIkI,IAAI21C,EAAQx/D,EAAGw/D,EAAQzsD,EAAGwrD,EAAU9pB,EAAWngC,GAASgrD,EAAwBliE,KAAK4W,GAC7F,CAEA,MAAM0rD,GAAyBjrB,EAAW8pB,EAAW9qB,GAAee,EAAa8pB,EAAa7qB,IAAgB,EAI9G,GAHA9xB,EAAIkI,IAAI7pB,EAAG+S,EAAG0gC,EAAagB,EAAW8pB,EAAW9qB,EAAaisB,GAAuB,GACrF/9C,EAAIkI,IAAI7pB,EAAG+S,EAAG0gC,EAAaisB,EAAuBlrB,EAAa8pB,EAAa7qB,GAAa,GAErF6qB,EAAa,EAAG,CAChB,MAAMkB,EAAU5B,GAAWuB,EAA0BE,EAAyBr/D,EAAG+S,GACjF4O,EAAIkI,IAAI21C,EAAQx/D,EAAGw/D,EAAQzsD,EAAGurD,EAAYe,EAA0BjiE,KAAK4W,GAAIwgC,EAAalgC,GAC9F,CAEA,MAAMqrD,EAAK/B,GAAWmB,EAA0BvqB,EAAYx0C,EAAG+S,GAG/D,GAFA4O,EAAIqI,OAAO21C,EAAG3/D,EAAG2/D,EAAG5sD,GAEhBqrD,EAAa,EAAG,CAChB,MAAMoB,EAAU5B,GAAWmB,EAA0BE,EAAyBj/D,EAAG+S,GACjF4O,EAAIkI,IAAI21C,EAAQx/D,EAAGw/D,EAAQzsD,EAAGqrD,EAAY5pB,EAAalgC,GAAS2qD,EACpE,CACJ,KAAO,CACHt9C,EAAIoI,OAAO/pB,EAAG+S,GACd,MAAM6sD,EAAcxiE,KAAKuf,IAAIsiD,GAA2BvrB,EAAc1zC,EAChE6/D,EAAcziE,KAAKse,IAAIujD,GAA2BvrB,EAAc3gC,EACtE4O,EAAIqI,OAAO41C,EAAaC,GACxB,MAAMC,EAAY1iE,KAAKuf,IAAIuiD,GAAyBxrB,EAAc1zC,EAC5D+/D,EAAY3iE,KAAKse,IAAIwjD,GAAyBxrB,EAAc3gC,EAClE4O,EAAIqI,OAAO81C,EAAWC,EAC1B,CACAp+C,EAAImI,WACR,CAsDA,MAAMk2C,WAAmBjc,GACrBxf,UAAY,MACZA,gBAAkB,CACd2R,YAAa,SACbr1B,YAAa,OACbib,WAAY,GACZC,iBAAkB,EAClBC,qBAAiBruB,EACjB8wD,aAAc,EACdr0C,YAAa,EACblF,OAAQ,EACRguB,QAAS,EACT18B,WAAO7I,EACPypC,UAAU,EACV6oB,UAAU,GAEd17B,qBAAuB,CACnB3jB,gBAAiB,mBAErB2jB,mBAAqB,CACjB3gB,aAAa,EACbE,WAAad,GAAgB,eAATA,GAExBiwB,cACAwB,SACAyrB,YACAzsB,YACAC,YACAqqB,YACAvpB,WACA,WAAAnoC,CAAYizB,GACRiQ,QACAliC,KAAK8E,aAAUxE,EACfN,KAAK4lC,mBAAgBtlC,EACrBN,KAAKmnC,gBAAa7mC,EAClBN,KAAKonC,cAAW9mC,EAChBN,KAAKomC,iBAAc9lC,EACnBN,KAAKqmC,iBAAc/lC,EACnBN,KAAK0wD,YAAc,EACnB1wD,KAAK6yD,YAAc,EACf5gC,GACAl0B,OAAOC,OAAOgC,KAAMiyB,EAE5B,CACA,OAAA4a,CAAQimB,EAAQC,EAAQpmB,GACpB,MAAMp/B,EAAQvN,KAAKwtC,SAAS,CACxB,IACA,KACDb,IACG,MAAExjC,EAAM,SAAEE,GAAcT,GAAkB2E,EAAO,CACnD5a,EAAGmgE,EACHptD,EAAGqtD,KAED,WAAE5rB,EAAW,SAAEC,EAAS,YAAEhB,EAAY,YAAEC,EAAY,cAAET,GAAmB5lC,KAAKwtC,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDb,GACGqmB,GAAWhzD,KAAK8E,QAAQ+gC,QAAU7lC,KAAK8E,QAAQiY,aAAe,EAC9DwrB,EAAiBtlC,EAAe2iC,EAAewB,EAAWD,GAC1D8rB,EAAiBtpD,GAAcR,EAAOg+B,EAAYC,IAAaD,IAAeC,EAC9E8rB,EAAgB3qB,GAAkB3hC,IAAOqsD,EACzCE,EAAe/oD,GAAWf,EAAU+8B,EAAc4sB,EAAS3sB,EAAc2sB,GAC/E,OAAOE,GAAiBC,CAC5B,CACA,cAAA7lB,CAAeX,GACX,MAAM,EAAEh6C,EAAE,EAAE+S,EAAE,WAAEyhC,EAAW,SAAEC,EAAS,YAAEhB,EAAY,YAAEC,GAAiBrmC,KAAKwtC,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDb,IACG,OAAE90B,EAAO,QAAEguB,GAAa7lC,KAAK8E,QAC7BsuD,GAAajsB,EAAaC,GAAY,EACtCisB,GAAcjtB,EAAcC,EAAcR,EAAUhuB,GAAU,EACpE,MAAO,CACHllB,EAAGA,EAAI5C,KAAKuf,IAAI8jD,GAAaC,EAC7B3tD,EAAGA,EAAI3V,KAAKse,IAAI+kD,GAAaC,EAErC,CACA,eAAA1c,CAAgBhK,GACZ,OAAO3sC,KAAKstC,eAAeX,EAC/B,CACA,IAAAnc,CAAKlc,GACD,MAAM,QAAExP,EAAQ,cAAE8gC,GAAmB5lC,KAC/B6X,GAAU/S,EAAQ+S,QAAU,GAAK,EACjCguB,GAAW/gC,EAAQ+gC,SAAW,GAAK,EACnCkE,EAAWjlC,EAAQilC,SAGzB,GAFA/pC,KAAK0wD,YAAsC,UAAxB5rD,EAAQ+jC,YAA0B,IAAO,EAC5D7oC,KAAK6yD,YAAcjtB,EAAgBh/B,GAAM7W,KAAK8X,MAAM+9B,EAAgBh/B,IAAO,EACrD,IAAlBg/B,GAAuB5lC,KAAKomC,YAAc,GAAKpmC,KAAKqmC,YAAc,EAClE,OAEJ/xB,EAAImG,OACJ,MAAM24C,GAAapzD,KAAKmnC,WAAannC,KAAKonC,UAAY,EACtD9yB,EAAI8H,UAAUrsB,KAAKuf,IAAI8jD,GAAav7C,EAAQ9nB,KAAKse,IAAI+kD,GAAav7C,GAClE,MACMy7C,EAAez7C,GADT,EAAI9nB,KAAKse,IAAIte,KAAKE,IAAI0W,GAAIi/B,GAAiB,KAEvDtxB,EAAIsK,UAAY9Z,EAAQyO,gBACxBe,EAAIqK,YAAc7Z,EAAQ0O,YA5JlC,SAAiBc,EAAKgV,EAASzR,EAAQguB,EAASkE,GAC5C,MAAM,YAAE8oB,EAAY,WAAE1rB,EAAW,cAAEvB,GAAmBtc,EACtD,IAAI8d,EAAW9d,EAAQ8d,SACvB,GAAIyrB,EAAa,CACbpC,GAAQn8C,EAAKgV,EAASzR,EAAQguB,EAASuB,EAAU2C,GACjD,IAAI,IAAI/3C,EAAI,EAAGA,EAAI6gE,IAAe7gE,EAC9BsiB,EAAIwI,OAEH3U,MAAMy9B,KACPwB,EAAWD,GAAcvB,EAAgBh/B,IAAOA,IAExD,CACA6pD,GAAQn8C,EAAKgV,EAASzR,EAAQguB,EAASuB,EAAU2C,GACjDz1B,EAAIwI,MAER,CA8IQy2C,CAAQj/C,EAAKtU,KAAMszD,EAAcztB,EAASkE,GA7IlD,SAAoBz1B,EAAKgV,EAASzR,EAAQguB,EAASkE,GAC/C,MAAM,YAAE8oB,EAAY,WAAE1rB,EAAW,cAAEvB,EAAc,QAAE9gC,GAAawkB,GAC1D,YAAEvM,EAAY,gBAAE4R,EAAgB,WAAEF,EAAW,iBAAEC,EAAiB,aAAE0iC,GAAkBtsD,EACpF0uD,EAAgC,UAAxB1uD,EAAQ+jC,YACtB,IAAK9rB,EACD,OAEJzI,EAAIytC,YAAYtzB,GAAc,IAC9Bna,EAAI0tC,eAAiBtzB,EACjB8kC,GACAl/C,EAAI6D,UAA0B,EAAd4E,EAChBzI,EAAIm/C,SAAW9kC,GAAmB,UAElCra,EAAI6D,UAAY4E,EAChBzI,EAAIm/C,SAAW9kC,GAAmB,SAEtC,IAAIyY,EAAW9d,EAAQ8d,SACvB,GAAIyrB,EAAa,CACbpC,GAAQn8C,EAAKgV,EAASzR,EAAQguB,EAASuB,EAAU2C,GACjD,IAAI,IAAI/3C,EAAI,EAAGA,EAAI6gE,IAAe7gE,EAC9BsiB,EAAI0I,SAEH7U,MAAMy9B,KACPwB,EAAWD,GAAcvB,EAAgBh/B,IAAOA,IAExD,CACI4sD,GA3LR,SAAiBl/C,EAAKgV,EAAS8d,GAC3B,MAAM,WAAED,EAAW,YAAEupB,EAAY,EAAE/9D,EAAE,EAAE+S,EAAE,YAAE2gC,EAAY,YAAED,GAAiB9c,EAC1E,IAAIoqC,EAAchD,EAAcrqB,EAGhC/xB,EAAIgI,YACJhI,EAAIkI,IAAI7pB,EAAG+S,EAAG2gC,EAAac,EAAausB,EAAatsB,EAAWssB,GAC5DttB,EAAcsqB,GACdgD,EAAchD,EAActqB,EAC5B9xB,EAAIkI,IAAI7pB,EAAG+S,EAAG0gC,EAAagB,EAAWssB,EAAavsB,EAAausB,GAAa,IAE7Ep/C,EAAIkI,IAAI7pB,EAAG+S,EAAGgrD,EAAatpB,EAAWngC,GAASkgC,EAAalgC,IAEhEqN,EAAImI,YACJnI,EAAI0D,MACR,CA6KQ27C,CAAQr/C,EAAKgV,EAAS8d,GAEtBtiC,EAAQ8tD,UAAYxrB,EAAWD,GAAcxgC,IAAuB,IAAjByqD,GAA0C,UAApBziC,GA1NjF,SAAkBra,EAAKgV,EAAS8d,GAC5B,MAAM,WAAED,EAAW,EAAEx0C,EAAE,EAAE+S,EAAE,YAAE2gC,EAAY,YAAED,EAAY,QAAEthC,GAAawkB,GAChE,YAAEvM,EAAY,gBAAE4R,GAAqB7pB,EACrC8uD,EAAiB7jE,KAAKE,IAAI8sB,EAAcspB,EAAa38B,GAAgBy9B,EAAaC,IAGxF,GAFA9yB,EAAIgI,YACJhI,EAAIkI,IAAI7pB,EAAG+S,EAAG2gC,EAActpB,EAAc,EAAGoqB,EAAaysB,EAAiB,EAAGxsB,EAAWwsB,EAAiB,GACtGxtB,EAAc,EAAG,CACjB,MAAMytB,EAAiB9jE,KAAKE,IAAI8sB,EAAcqpB,EAAa18B,GAAgBy9B,EAAaC,IACxF9yB,EAAIkI,IAAI7pB,EAAG+S,EAAG0gC,EAAcrpB,EAAc,EAAGqqB,EAAWysB,EAAiB,EAAG1sB,EAAa0sB,EAAiB,GAAG,EACjH,KAAO,CACH,MAAMC,EAAY/jE,KAAKE,IAAI8sB,EAAc,EAAGspB,EAAc38B,GAAgBy9B,EAAaC,IACvF,GAAwB,UAApBzY,EACAra,EAAIkI,IAAI7pB,EAAG+S,EAAGouD,EAAW1sB,EAAWzgC,GAAK,EAAGwgC,EAAaxgC,GAAK,GAAG,QAC9D,GAAwB,UAApBgoB,EAA6B,CACpC,MAAMz8B,EAAI,EAAI4hE,EAAYA,EACpBvsB,GAAQr1C,EAAInC,KAAKuf,IAAI83B,EAAWzgC,GAAK,GAAKhU,EAC1C60C,GAAQt1C,EAAInC,KAAKse,IAAI+4B,EAAWzgC,GAAK,GAAKjB,EAC1C2hC,EAASn1C,EAAInC,KAAKuf,IAAI63B,EAAaxgC,GAAK,GAAKhU,EAC7C20C,EAASp1C,EAAInC,KAAKse,IAAI84B,EAAaxgC,GAAK,GAAKjB,EACnD4O,EAAIqI,OAAO4qB,EAAMC,GACjBlzB,EAAIqI,OAAO0qB,EAAQC,EACvB,CACJ,CACAhzB,EAAImI,YACJnI,EAAIoI,OAAO,EAAG,GACdpI,EAAIuI,KAAK,EAAG,EAAGvI,EAAI8G,OAAOvC,MAAOvE,EAAI8G,OAAOI,QAC5ClH,EAAI0D,KAAK,UACb,CAgMQ+7C,CAASz/C,EAAKgV,EAAS8d,GAEtByrB,IACDpC,GAAQn8C,EAAKgV,EAASzR,EAAQguB,EAASuB,EAAU2C,GACjDz1B,EAAI0I,SAEZ,CA0GQilC,CAAW3tC,EAAKtU,KAAMszD,EAAcztB,EAASkE,GAC7Cz1B,EAAIuG,SACR,EAGJ,SAASm5C,GAAS1/C,EAAKxP,EAASoP,EAAQpP,GACpCwP,EAAI2/C,QAAUhxD,EAAeiR,EAAMsa,eAAgB1pB,EAAQ0pB,gBAC3Dla,EAAIytC,YAAY9+C,EAAeiR,EAAMua,WAAY3pB,EAAQ2pB,aACzDna,EAAI0tC,eAAiB/+C,EAAeiR,EAAMwa,iBAAkB5pB,EAAQ4pB,kBACpEpa,EAAIm/C,SAAWxwD,EAAeiR,EAAMya,gBAAiB7pB,EAAQ6pB,iBAC7Dra,EAAI6D,UAAYlV,EAAeiR,EAAM6I,YAAajY,EAAQiY,aAC1DzI,EAAIqK,YAAc1b,EAAeiR,EAAMV,YAAa1O,EAAQ0O,YAChE,CACA,SAASmJ,GAAOrI,EAAKiJ,EAAUhZ,GAC3B+P,EAAIqI,OAAOpY,EAAO5R,EAAG4R,EAAOmB,EAChC,CAUA,SAASwuD,GAAS5nD,EAAQqhB,EAAS8gB,EAAS,CAAC,GACzC,MAAMhiC,EAAQH,EAAOnO,QACbyL,MAAOuqD,EAAc,EAAItqD,IAAKuqD,EAAY3nD,EAAQ,GAAOgiC,GACzD7kC,MAAOyqD,EAAexqD,IAAKyqD,GAAgB3mC,EAC7C/jB,EAAQ7Z,KAAKC,IAAImkE,EAAaE,GAC9BxqD,EAAM9Z,KAAKE,IAAImkE,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACH7nD,QACA7C,QACAkN,KAAM6W,EAAQ7W,KACd7S,KAAM4F,EAAMD,IAAU2qD,EAAU9nD,EAAQ5C,EAAMD,EAAQC,EAAMD,EAEpE,CACC,SAAS4qD,GAAYlgD,EAAK2J,EAAM0P,EAAS8gB,GACtC,MAAM,OAAEniC,EAAO,QAAExH,GAAamZ,GACxB,MAAExR,EAAM,MAAE7C,EAAM,KAAEkN,EAAK,KAAE7S,GAAUiwD,GAAS5nD,EAAQqhB,EAAS8gB,GAC7DgmB,EA1BT,SAAuB3vD,GACpB,OAAIA,EAAQ4vD,QACDp3C,GAEPxY,EAAQwjB,SAA8C,aAAnCxjB,EAAQqiB,uBACpBzJ,GAEJf,EACX,CAkBuBg4C,CAAc7vD,GACjC,IACI9S,EAAGub,EAAO8a,GADV,KAAEyW,GAAM,EAAK,QAAEj7B,GAAa4qC,GAAU,CAAC,EAE3C,IAAIz8C,EAAI,EAAGA,GAAKiS,IAAQjS,EACpBub,EAAQjB,GAAQ1C,GAAS/F,EAAUI,EAAOjS,EAAIA,IAAMya,GAChDc,EAAM2Y,OAEC4Y,GACPxqB,EAAIoI,OAAOnP,EAAM5a,EAAG4a,EAAM7H,GAC1Bo5B,GAAO,GAEP21B,EAAWngD,EAAK+T,EAAM9a,EAAO1J,EAASiB,EAAQ4vD,SAElDrsC,EAAO9a,GAMX,OAJIuJ,IACAvJ,EAAQjB,GAAQ1C,GAAS/F,EAAUI,EAAO,IAAMwI,GAChDgoD,EAAWngD,EAAK+T,EAAM9a,EAAO1J,EAASiB,EAAQ4vD,YAEzC59C,CACb,CACC,SAAS89C,GAAgBtgD,EAAK2J,EAAM0P,EAAS8gB,GAC1C,MAAMniC,EAAS2R,EAAK3R,QACd,MAAEG,EAAM,MAAE7C,EAAM,KAAE3F,GAAUiwD,GAAS5nD,EAAQqhB,EAAS8gB,IACtD,KAAE3P,GAAM,EAAK,QAAEj7B,GAAa4qC,GAAU,CAAC,EAC7C,IAEIz8C,EAAGub,EAAOsnD,EAAO/sB,EAAMF,EAAMktB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc5wD,IAASuF,GAAS/F,EAAUI,EAAOI,EAAQA,IAAUoI,EACnEyoD,EAAQ,KACNptB,IAASF,IACTtzB,EAAIqI,OAAOo4C,EAAMntB,GACjBtzB,EAAIqI,OAAOo4C,EAAMjtB,GACjBxzB,EAAIqI,OAAOo4C,EAAMD,KAOzB,IAJIh2B,IACAvxB,EAAQjB,EAAO2oD,EAAW,IAC1B3gD,EAAIoI,OAAOnP,EAAM5a,EAAG4a,EAAM7H,IAE1B1T,EAAI,EAAGA,GAAKiS,IAAQjS,EAAE,CAEtB,GADAub,EAAQjB,EAAO2oD,EAAWjjE,IACtBub,EAAM2Y,KACN,SAEJ,MAAMvzB,EAAI4a,EAAM5a,EACV+S,EAAI6H,EAAM7H,EACVyvD,EAAa,EAAJxiE,EACXwiE,IAAWN,GACPnvD,EAAIoiC,EACJA,EAAOpiC,EACAA,EAAIkiC,IACXA,EAAOliC,GAEXqvD,GAAQC,EAASD,EAAOpiE,KAAOqiE,IAE/BE,IACA5gD,EAAIqI,OAAOhqB,EAAG+S,GACdmvD,EAAQM,EACRH,EAAS,EACTltB,EAAOF,EAAOliC,GAElBovD,EAAQpvD,CACZ,CACAwvD,GACJ,CACC,SAASE,GAAkBn3C,GACxB,MAAMC,EAAOD,EAAKnZ,QACZ2pB,EAAavQ,EAAKuQ,YAAcvQ,EAAKuQ,WAAWtwB,OAEtD,OADqB8f,EAAKmrB,YAAenrB,EAAKqU,OAAUpU,EAAKoK,SAA2C,aAAhCpK,EAAKiJ,wBAA0CjJ,EAAKw2C,SAAYjmC,EACjG+lC,GAAlBI,EACzB,CAoCA,MAAMS,GAA8B,mBAAXC,OAQzB,MAAMC,WAAoB7e,GACtBxf,UAAY,OACfA,gBAAkB,CACX1I,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjB5R,YAAa,EACbwL,iBAAiB,EACjBpB,uBAAwB,UACxBrK,MAAM,EACNhQ,UAAU,EACV4nD,SAAS,EACTpsC,QAAS,GAEhB4O,qBAAuB,CAChB3jB,gBAAiB,kBACjBC,YAAa,eAEjB0jB,mBAAqB,CACjB3gB,aAAa,EACbE,WAAad,GAAgB,eAATA,GAAkC,SAATA,GAEjD,WAAA3W,CAAYizB,GACRiQ,QACAliC,KAAKqpC,UAAW,EAChBrpC,KAAK8E,aAAUxE,EACfN,KAAKuzB,YAASjzB,EACdN,KAAKsyB,WAAQhyB,EACbN,KAAKgrC,eAAY1qC,EACjBN,KAAKw1D,WAAQl1D,EACbN,KAAKy1D,aAAUn1D,EACfN,KAAK01D,eAAYp1D,EACjBN,KAAKopC,YAAa,EAClBppC,KAAK21D,gBAAiB,EACtB31D,KAAKmpC,mBAAgB7oC,EACjB2xB,GACAl0B,OAAOC,OAAOgC,KAAMiyB,EAE5B,CACA,mBAAA2X,CAAoB5a,EAAWva,GAC3B,MAAM3P,EAAU9E,KAAK8E,QACrB,IAAKA,EAAQwjB,SAA8C,aAAnCxjB,EAAQqiB,0BAA2CriB,EAAQ4vD,UAAY10D,KAAK21D,eAAgB,CAChH,MAAM7+C,EAAOhS,EAAQgI,SAAW9M,KAAKsyB,MAAQtyB,KAAKgrC,UAClD/jB,GAA2BjnB,KAAKy1D,QAAS3wD,EAASkqB,EAAWlY,EAAMrC,GACnEzU,KAAK21D,gBAAiB,CAC1B,CACJ,CACA,UAAIrpD,CAAOA,GACPtM,KAAKy1D,QAAUnpD,SACRtM,KAAK01D,iBACL11D,KAAKw1D,MACZx1D,KAAK21D,gBAAiB,CAC1B,CACA,UAAIrpD,GACA,OAAOtM,KAAKy1D,OAChB,CACA,YAAIpnC,GACA,OAAOruB,KAAK01D,YAAc11D,KAAK01D,UD9vItC,SAA0Bz3C,EAAM23C,GAC7B,MAAMtpD,EAAS2R,EAAK3R,OACdQ,EAAWmR,EAAKnZ,QAAQgI,SACxBL,EAAQH,EAAOnO,OACrB,IAAKsO,EACD,MAAO,GAEX,MAAMqK,IAASmH,EAAKqU,OACd,MAAE1oB,EAAM,IAAEC,GAnEnB,SAAyByC,EAAQG,EAAOqK,EAAMhK,GAC3C,IAAIlD,EAAQ,EACRC,EAAM4C,EAAQ,EAClB,GAAIqK,IAAShK,EACT,KAAMlD,EAAQ6C,IAAUH,EAAO1C,GAAOsc,MAClCtc,IAGR,KAAMA,EAAQ6C,GAASH,EAAO1C,GAAOsc,MACjCtc,IAMJ,IAJAA,GAAS6C,EACLqK,IACAjN,GAAOD,GAELC,EAAMD,GAAS0C,EAAOzC,EAAM4C,GAAOyZ,MACrCrc,IAGJ,OADAA,GAAO4C,EACA,CACH7C,QACAC,MAER,CA4C6BgsD,CAAgBvpD,EAAQG,EAAOqK,EAAMhK,GAC9D,OAaH,SAAuBmR,EAAMoQ,EAAU/hB,EAAQspD,GAC5C,OAAKA,GAAmBA,EAAe7xC,YAAezX,EAKzD,SAAyB2R,EAAMoQ,EAAU/hB,EAAQspD,GAC9C,MAAME,EAAe73C,EAAKsV,OAAOlY,aAC3B06C,EAAYxnC,GAAUtQ,EAAKnZ,UACzBqkC,cAAe/kC,EAAeU,SAAS,SAAEgI,IAAiBmR,EAC5DxR,EAAQH,EAAOnO,OACf0rB,EAAS,GACf,IAAIgF,EAAYknC,EACZnsD,EAAQykB,EAAS,GAAGzkB,MACpB5X,EAAI4X,EACR,SAASosD,EAASvkE,EAAGR,EAAGpB,EAAGomE,GACvB,MAAMC,EAAMppD,GAAY,EAAI,EAC5B,GAAIrb,IAAMR,EAAV,CAIA,IADAQ,GAAKgb,EACCH,EAAO7a,EAAIgb,GAAOyZ,MACpBz0B,GAAKykE,EAET,KAAM5pD,EAAOrb,EAAIwb,GAAOyZ,MACpBj1B,GAAKilE,EAELzkE,EAAIgb,IAAUxb,EAAIwb,IAClBod,EAAO7jB,KAAK,CACR4D,MAAOnY,EAAIgb,EACX5C,IAAK5Y,EAAIwb,EACTqK,KAAMjnB,EACNqkB,MAAO+hD,IAEXpnC,EAAYonC,EACZrsD,EAAQ3Y,EAAIwb,EAhBhB,CAkBJ,CACA,IAAK,MAAMkhB,KAAWU,EAAS,CAC3BzkB,EAAQkD,EAAWlD,EAAQ+jB,EAAQ/jB,MACnC,IACIsK,EADAmU,EAAO/b,EAAO1C,EAAQ6C,GAE1B,IAAIza,EAAI4X,EAAQ,EAAG5X,GAAK27B,EAAQ9jB,IAAK7X,IAAI,CACrC,MAAMg1B,EAAK1a,EAAOta,EAAIya,GACtByH,EAAQqa,GAAUqnC,EAAe7xC,WAAWtC,GAAcq0C,EAAc,CACpE72D,KAAM,UACNk3D,GAAI9tC,EACJ3pB,GAAIsoB,EACJovC,aAAcpkE,EAAI,GAAKya,EACvB4pD,YAAarkE,EAAIya,EACjBrI,mBAEAwqB,GAAa1a,EAAO2a,IACpBmnC,EAASpsD,EAAO5X,EAAI,EAAG27B,EAAQ7W,KAAM+X,GAEzCxG,EAAOrB,EACP6H,EAAY3a,CAChB,CACItK,EAAQ5X,EAAI,GACZgkE,EAASpsD,EAAO5X,EAAI,EAAG27B,EAAQ7W,KAAM+X,EAE7C,CACA,OAAOhF,CACX,CA3DWysC,CAAgBr4C,EAAMoQ,EAAU/hB,EAAQspD,GAFpCvnC,CAGf,CAjBekoC,CAAct4C,GADR,IAAbnR,EAC2B,CACvB,CACIlD,QACAC,MACAiN,SAjDf,SAAuBxK,EAAQ1C,EAAO5Z,EAAK8mB,GACxC,MAAMrK,EAAQH,EAAOnO,OACf0rB,EAAS,GACf,IAEIhgB,EAFAe,EAAOhB,EACPye,EAAO/b,EAAO1C,GAElB,IAAIC,EAAMD,EAAQ,EAAGC,GAAO7Z,IAAO6Z,EAAI,CACnC,MAAMwnB,EAAM/kB,EAAOzC,EAAM4C,GACrB4kB,EAAInL,MAAQmL,EAAIE,KACXlJ,EAAKnC,OACNpP,GAAO,EACP+S,EAAO7jB,KAAK,CACR4D,MAAOA,EAAQ6C,EACf5C,KAAMA,EAAM,GAAK4C,EACjBqK,SAEJlN,EAAQgB,EAAOymB,EAAIE,KAAO1nB,EAAM,OAGpCe,EAAOf,EACHwe,EAAKnC,OACLtc,EAAQC,IAGhBwe,EAAOgJ,CACX,CAQA,OAPa,OAATzmB,GACAif,EAAO7jB,KAAK,CACR4D,MAAOA,EAAQ6C,EACf5C,IAAKe,EAAO6B,EACZqK,SAGD+S,CACX,CAqB+B2sC,CAAclqD,EAAQ1C,EAFrCC,EAAMD,EAAQC,EAAM4C,EAAQ5C,IACjBoU,EAAK+sB,WAAuB,IAAVphC,GAAeC,IAAQ4C,EAAQ,GAHjEH,EAAQspD,EAKnB,CCyuImDa,CAAiBz2D,KAAMA,KAAK8E,QAAQ6oB,SACnF,CACH,KAAAguB,GACO,MAAMttB,EAAWruB,KAAKquB,SAChB/hB,EAAStM,KAAKsM,OACpB,OAAO+hB,EAASlwB,QAAUmO,EAAO+hB,EAAS,GAAGzkB,MACjD,CACH,IAAAgB,GACO,MAAMyjB,EAAWruB,KAAKquB,SAChB/hB,EAAStM,KAAKsM,OACdG,EAAQ4hB,EAASlwB,OACvB,OAAOsO,GAASH,EAAO+hB,EAAS5hB,EAAQ,GAAG5C,IAC/C,CACH,WAAA1I,CAAYoM,EAAOjF,GACZ,MAAMxD,EAAU9E,KAAK8E,QACfxC,EAAQiL,EAAMjF,GACdgE,EAAStM,KAAKsM,OACd+hB,EAAWD,GAAepuB,KAAM,CAClCsI,WACAsB,MAAOtH,EACPuH,IAAKvH,IAET,IAAK+rB,EAASlwB,OACV,OAEJ,MAAM0rB,EAAS,GACT6sC,EA/Hb,SAAiC5xD,GAC9B,OAAIA,EAAQ4vD,QACDzoC,GAEPnnB,EAAQwjB,SAA8C,aAAnCxjB,EAAQqiB,uBACpB+E,GAEJF,EACX,CAuH6B2qC,CAAwB7xD,GAC7C,IAAI9S,EAAGiS,EACP,IAAIjS,EAAI,EAAGiS,EAAOoqB,EAASlwB,OAAQnM,EAAIiS,IAAQjS,EAAE,CAC7C,MAAM,MAAE4X,EAAM,IAAEC,GAASwkB,EAASr8B,GAC5B0M,EAAK4N,EAAO1C,GACZjL,EAAK2N,EAAOzC,GAClB,GAAInL,IAAOC,EAAI,CACXkrB,EAAO7jB,KAAKtH,GACZ,QACJ,CACA,MACMk4D,EAAeF,EAAah4D,EAAIC,EAD5B5O,KAAKyX,KAAKlF,EAAQ5D,EAAG4J,KAAc3J,EAAG2J,GAAY5J,EAAG4J,KAClBxD,EAAQ4vD,SACrDkC,EAAatuD,GAAYiF,EAAMjF,GAC/BuhB,EAAO7jB,KAAK4wD,EAChB,CACA,OAAyB,IAAlB/sC,EAAO1rB,OAAe0rB,EAAO,GAAKA,CAC7C,CACH,WAAA2qC,CAAYlgD,EAAKqZ,EAAS8gB,GAEnB,OADsB2mB,GAAkBp1D,KACjC62D,CAAcviD,EAAKtU,KAAM2tB,EAAS8gB,EAC7C,CACH,IAAAqoB,CAAKxiD,EAAK1K,EAAO6C,GACV,MAAM4hB,EAAWruB,KAAKquB,SAChBwoC,EAAgBzB,GAAkBp1D,MACxC,IAAI8W,EAAO9W,KAAKsyB,MAChB1oB,EAAQA,GAAS,EACjB6C,EAAQA,GAASzM,KAAKsM,OAAOnO,OAASyL,EACtC,IAAK,MAAM+jB,KAAWU,EAClBvX,GAAQ+/C,EAAcviD,EAAKtU,KAAM2tB,EAAS,CACtC/jB,QACAC,IAAKD,EAAQ6C,EAAQ,IAG7B,QAASqK,CACb,CACH,IAAA0Z,CAAKlc,EAAK0a,EAAWplB,EAAO6C,GACrB,MAAM3H,EAAU9E,KAAK8E,SAAW,CAAC,GAClB9E,KAAKsM,QAAU,IACnBnO,QAAU2G,EAAQiY,cACzBzI,EAAImG,OAlIhB,SAAcnG,EAAK2J,EAAMrU,EAAO6C,GACxB4oD,KAAcp3C,EAAKnZ,QAAQ6oB,QA5BnC,SAA6BrZ,EAAK2J,EAAMrU,EAAO6C,GAC3C,IAAIqqD,EAAO74C,EAAKu3C,MACXsB,IACDA,EAAO74C,EAAKu3C,MAAQ,IAAIF,OACpBr3C,EAAK64C,KAAKA,EAAMltD,EAAO6C,IACvBqqD,EAAKr6C,aAGbu3C,GAAS1/C,EAAK2J,EAAKnZ,SACnBwP,EAAI0I,OAAO85C,EACf,CAmBQC,CAAoBziD,EAAK2J,EAAMrU,EAAO6C,GAlB9C,SAA0B6H,EAAK2J,EAAMrU,EAAO6C,GACxC,MAAM,SAAE4hB,EAAS,QAAEvpB,GAAamZ,EAC1B44C,EAAgBzB,GAAkBn3C,GACxC,IAAK,MAAM0P,KAAWU,EAClB2lC,GAAS1/C,EAAKxP,EAAS6oB,EAAQzZ,OAC/BI,EAAIgI,YACAu6C,EAAcviD,EAAK2J,EAAM0P,EAAS,CAClC/jB,QACAC,IAAKD,EAAQ6C,EAAQ,KAErB6H,EAAImI,YAERnI,EAAI0I,QAEZ,CAMQg6C,CAAiB1iD,EAAK2J,EAAMrU,EAAO6C,EAE3C,CA6HY+jB,CAAKlc,EAAKtU,KAAM4J,EAAO6C,GACvB6H,EAAIuG,WAEJ7a,KAAKqpC,WACLrpC,KAAK21D,gBAAiB,EACtB31D,KAAKw1D,WAAQl1D,EAErB,EAGJ,SAAS22D,GAAUprC,EAAI/B,EAAK9c,EAAM2/B,GAC9B,MAAM7nC,EAAU+mB,EAAG/mB,SACX,CAACkI,GAAO1K,GAAWupB,EAAG2hB,SAAS,CACnCxgC,GACD2/B,GACH,OAAO58C,KAAKyX,IAAIsiB,EAAMxnB,GAASwC,EAAQoX,OAASpX,EAAQoyD,SAC5D,CACA,MAAMC,WAAqBzgB,GACvBxf,UAAY,QACZpR,OACAI,KACAqL,KAGE2F,gBAAkB,CAChBna,YAAa,EACbm6C,UAAW,EACXpuB,iBAAkB,EAClBsuB,YAAa,EACbp7C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAIZib,qBAAuB,CACrB3jB,gBAAiB,kBACjBC,YAAa,eAEjB,WAAAxU,CAAYizB,GACRiQ,QACAliC,KAAK8E,aAAUxE,EACfN,KAAK8lB,YAASxlB,EACdN,KAAKkmB,UAAO5lB,EACZN,KAAKuxB,UAAOjxB,EACR2xB,GACAl0B,OAAOC,OAAOgC,KAAMiyB,EAE5B,CACA,OAAA4a,CAAQwqB,EAAQC,EAAQ3qB,GACpB,MAAM7nC,EAAU9E,KAAK8E,SACf,EAAEnS,EAAE,EAAE+S,GAAO1F,KAAKwtC,SAAS,CAC7B,IACA,KACDb,GACH,OAAO58C,KAAKyN,IAAI65D,EAAS1kE,EAAG,GAAK5C,KAAKyN,IAAI85D,EAAS5xD,EAAG,GAAK3V,KAAKyN,IAAIsH,EAAQoyD,UAAYpyD,EAAQoX,OAAQ,EAC5G,CACA,QAAAq7C,CAASF,EAAQ1qB,GACb,OAAOsqB,GAAUj3D,KAAMq3D,EAAQ,IAAK1qB,EACxC,CACA,QAAA6qB,CAASF,EAAQ3qB,GACb,OAAOsqB,GAAUj3D,KAAMs3D,EAAQ,IAAK3qB,EACxC,CACA,cAAAW,CAAeX,GACX,MAAM,EAAEh6C,EAAE,EAAE+S,GAAO1F,KAAKwtC,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACHh6C,IACA+S,IAER,CACA,IAAAc,CAAK1B,GAED,IAAIoX,GADJpX,EAAUA,GAAW9E,KAAK8E,SAAW,CAAC,GACjBoX,QAAU,EAG/B,OAFAA,EAASnsB,KAAKC,IAAIksB,EAAQA,GAAUpX,EAAQsyD,aAAe,GAE3B,GAAxBl7C,GADYA,GAAUpX,EAAQiY,aAAe,GAEzD,CACA,IAAAyT,CAAKlc,EAAK4I,GACN,MAAMpY,EAAU9E,KAAK8E,QACjB9E,KAAKkmB,MAAQphB,EAAQoX,OAAS,KAAQe,GAAejd,KAAMkd,EAAMld,KAAKwG,KAAK1B,GAAW,KAG1FwP,EAAIqK,YAAc7Z,EAAQ0O,YAC1Bc,EAAI6D,UAAYrT,EAAQiY,YACxBzI,EAAIsK,UAAY9Z,EAAQyO,gBACxBkI,GAAUnH,EAAKxP,EAAS9E,KAAKrN,EAAGqN,KAAK0F,GACzC,CACA,QAAA2mC,GACI,MAAMvnC,EAAU9E,KAAK8E,SAAW,CAAC,EAEjC,OAAOA,EAAQoX,OAASpX,EAAQoyD,SACpC,EAGJ,SAASO,GAAaC,EAAK/qB,GACvB,MAAM,EAAEh6C,EAAE,EAAE+S,EAAE,KAAEu0B,EAAK,MAAEphB,EAAM,OAAE2C,GAAak8C,EAAIlqB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDb,GACH,IAAIh1B,EAAMF,EAAOD,EAAKE,EAAQigD,EAc9B,OAbID,EAAIv2B,YACJw2B,EAAOn8C,EAAS,EAChB7D,EAAO5nB,KAAKE,IAAI0C,EAAGsnC,GACnBxiB,EAAQ1nB,KAAKC,IAAI2C,EAAGsnC,GACpBziB,EAAM9R,EAAIiyD,EACVjgD,EAAShS,EAAIiyD,IAEbA,EAAO9+C,EAAQ,EACflB,EAAOhlB,EAAIglE,EACXlgD,EAAQ9kB,EAAIglE,EACZngD,EAAMznB,KAAKE,IAAIyV,EAAGu0B,GAClBviB,EAAS3nB,KAAKC,IAAI0V,EAAGu0B,IAElB,CACHtiB,OACAH,MACAC,QACAC,SAER,CACA,SAASkgD,GAAY1xC,EAAM5jB,EAAOrS,EAAKD,GACnC,OAAOk2B,EAAO,EAAI/b,GAAY7H,EAAOrS,EAAKD,EAC9C,CAwDA,SAAS68C,GAAQ6qB,EAAK/kE,EAAG+S,EAAGinC,GACxB,MAAMkrB,EAAc,OAANllE,EACRmlE,EAAc,OAANpyD,EAERqS,EAAS2/C,KADEG,GAASC,IACSL,GAAaC,EAAK/qB,GACrD,OAAO50B,IAAW8/C,GAASztD,GAAWzX,EAAGolB,EAAOJ,KAAMI,EAAON,UAAYqgD,GAAS1tD,GAAW1E,EAAGqS,EAAOP,IAAKO,EAAOL,QACvH,CAIC,SAASqgD,GAAkBzjD,EAAKuI,GAC7BvI,EAAIuI,KAAKA,EAAKlqB,EAAGkqB,EAAKnX,EAAGmX,EAAK/qB,EAAG+qB,EAAK/sB,EAC1C,CACA,SAASkoE,GAAYn7C,EAAMo7C,EAAQC,EAAU,CAAC,GAC1C,MAAMvlE,EAAIkqB,EAAKlqB,IAAMulE,EAAQvlE,GAAKslE,EAAS,EACrCvyD,EAAImX,EAAKnX,IAAMwyD,EAAQxyD,GAAKuyD,EAAS,EACrCnmE,GAAK+qB,EAAKlqB,EAAIkqB,EAAK/qB,IAAMomE,EAAQvlE,EAAIulE,EAAQpmE,EAAImmE,EAAS,GAAKtlE,EAC/D7C,GAAK+sB,EAAKnX,EAAImX,EAAK/sB,IAAMooE,EAAQxyD,EAAIwyD,EAAQpoE,EAAImoE,EAAS,GAAKvyD,EACrE,MAAO,CACH/S,EAAGkqB,EAAKlqB,EAAIA,EACZ+S,EAAGmX,EAAKnX,EAAIA,EACZ5T,EAAG+qB,EAAK/qB,EAAIA,EACZhC,EAAG+sB,EAAK/sB,EAAIA,EACZosB,OAAQW,EAAKX,OAErB,CACA,MAAMi8C,WAAmBzhB,GACrBxf,UAAY,MACfA,gBAAkB,CACXgK,cAAe,QACfnkB,YAAa,EACbq0C,aAAc,EACdzvB,cAAe,OACf3lB,gBAAY1b,GAEnB42B,qBAAuB,CAChB3jB,gBAAiB,kBACjBC,YAAa,eAEjB,WAAAxU,CAAYizB,GACRiQ,QACAliC,KAAK8E,aAAUxE,EACfN,KAAKmhC,gBAAa7gC,EAClBN,KAAKi6B,UAAO35B,EACZN,KAAK6Y,WAAQvY,EACbN,KAAKwb,YAASlb,EACdN,KAAK2hC,mBAAgBrhC,EACjB2xB,GACAl0B,OAAOC,OAAOgC,KAAMiyB,EAE5B,CACA,IAAAzB,CAAKlc,GACD,MAAM,cAAEqtB,EAAgB78B,SAAS,YAAE0O,EAAY,gBAAED,IAAwBvT,MACnE,MAAEwzD,EAAM,MAAE4E,GAjFxB,SAAuBV,GACnB,MAAM3/C,EAAS0/C,GAAaC,GACtB7+C,EAAQd,EAAON,MAAQM,EAAOJ,KAC9B6D,EAASzD,EAAOL,OAASK,EAAOP,IAChCkB,EA/BV,SAA0Bg/C,EAAKW,EAAMC,GACjC,MAAMh2D,EAAQo1D,EAAI5yD,QAAQiY,YACpBmJ,EAAOwxC,EAAIx2B,cACXz7B,EAAIob,GAAOve,GACjB,MAAO,CACHlB,EAAGw2D,GAAY1xC,EAAK1O,IAAK/R,EAAE+R,IAAK,EAAG8gD,GACnCpmE,EAAG0lE,GAAY1xC,EAAKzO,MAAOhS,EAAEgS,MAAO,EAAG4gD,GACvCvnE,EAAG8mE,GAAY1xC,EAAKxO,OAAQjS,EAAEiS,OAAQ,EAAG4gD,GACzCzoE,EAAG+nE,GAAY1xC,EAAKvO,KAAMlS,EAAEkS,KAAM,EAAG0gD,GAE7C,CAqBmBE,CAAiBb,EAAK7+C,EAAQ,EAAG2C,EAAS,GACnDU,EArBV,SAA2Bw7C,EAAKW,EAAMC,GAClC,MAAM,mBAAEj3B,GAAwBq2B,EAAIlqB,SAAS,CACzC,uBAEElrC,EAAQo1D,EAAI5yD,QAAQssD,aACpB3rD,EAAIqb,GAAcxe,GAClBk2D,EAAOzoE,KAAKE,IAAIooE,EAAMC,GACtBpyC,EAAOwxC,EAAIx2B,cACXu3B,EAAep3B,GAAsB1+B,EAASL,GACpD,MAAO,CACHwd,QAAS83C,IAAaa,GAAgBvyC,EAAK1O,KAAO0O,EAAKvO,KAAMlS,EAAEqa,QAAS,EAAG04C,GAC3Ev4C,SAAU23C,IAAaa,GAAgBvyC,EAAK1O,KAAO0O,EAAKzO,MAAOhS,EAAEwa,SAAU,EAAGu4C,GAC9Ez4C,WAAY63C,IAAaa,GAAgBvyC,EAAKxO,QAAUwO,EAAKvO,KAAMlS,EAAEsa,WAAY,EAAGy4C,GACpFx4C,YAAa43C,IAAaa,GAAgBvyC,EAAKxO,QAAUwO,EAAKzO,MAAOhS,EAAEua,YAAa,EAAGw4C,GAE/F,CAMmBE,CAAkBhB,EAAK7+C,EAAQ,EAAG2C,EAAS,GAC1D,MAAO,CACH48C,MAAO,CACHzlE,EAAGolB,EAAOJ,KACVjS,EAAGqS,EAAOP,IACV1lB,EAAG+mB,EACH/oB,EAAG0rB,EACHU,UAEJs3C,MAAO,CACH7gE,EAAGolB,EAAOJ,KAAOe,EAAO7oB,EACxB6V,EAAGqS,EAAOP,IAAMkB,EAAOtX,EACvBtP,EAAG+mB,EAAQH,EAAO7oB,EAAI6oB,EAAOxmB,EAC7BpC,EAAG0rB,EAAS9C,EAAOtX,EAAIsX,EAAO5nB,EAC9BorB,OAAQ,CACJ4D,QAAS/vB,KAAKC,IAAI,EAAGksB,EAAO4D,QAAU/vB,KAAKC,IAAI0oB,EAAOtX,EAAGsX,EAAO7oB,IAChEowB,SAAUlwB,KAAKC,IAAI,EAAGksB,EAAO+D,SAAWlwB,KAAKC,IAAI0oB,EAAOtX,EAAGsX,EAAOxmB,IAClE6tB,WAAYhwB,KAAKC,IAAI,EAAGksB,EAAO6D,WAAahwB,KAAKC,IAAI0oB,EAAO5nB,EAAG4nB,EAAO7oB,IACtEmwB,YAAajwB,KAAKC,IAAI,EAAGksB,EAAO8D,YAAcjwB,KAAKC,IAAI0oB,EAAO5nB,EAAG4nB,EAAOxmB,MAIxF,CAsDmCymE,CAAc34D,MACnC44D,GA/CK18C,EA+CmBk8C,EAAMl8C,QA9C1B4D,SAAW5D,EAAO+D,UAAY/D,EAAO6D,YAAc7D,EAAO8D,YA8CtBH,GAAqBk4C,GA/C3E,IAAmB77C,EAgDX5H,EAAImG,OACA29C,EAAMtmE,IAAM0hE,EAAM1hE,GAAKsmE,EAAMtoE,IAAM0jE,EAAM1jE,IACzCwkB,EAAIgI,YACJs8C,EAAYtkD,EAAK0jD,GAAYI,EAAOz2B,EAAe6xB,IACnDl/C,EAAI0D,OACJ4gD,EAAYtkD,EAAK0jD,GAAYxE,GAAQ7xB,EAAey2B,IACpD9jD,EAAIsK,UAAYpL,EAChBc,EAAIwI,KAAK,YAEbxI,EAAIgI,YACJs8C,EAAYtkD,EAAK0jD,GAAYxE,EAAO7xB,IACpCrtB,EAAIsK,UAAYrL,EAChBe,EAAIwI,OACJxI,EAAIuG,SACR,CACA,OAAAgyB,CAAQwqB,EAAQC,EAAQ3qB,GACpB,OAAOE,GAAQ7sC,KAAMq3D,EAAQC,EAAQ3qB,EACzC,CACA,QAAA4qB,CAASF,EAAQ1qB,GACb,OAAOE,GAAQ7sC,KAAMq3D,EAAQ,KAAM1qB,EACvC,CACA,QAAA6qB,CAASF,EAAQ3qB,GACb,OAAOE,GAAQ7sC,KAAM,KAAMs3D,EAAQ3qB,EACvC,CACA,cAAAW,CAAeX,GACX,MAAM,EAAEh6C,EAAE,EAAE+S,EAAE,KAAEu0B,EAAK,WAAEkH,GAAiBnhC,KAAKwtC,SAAS,CAClD,IACA,IACA,OACA,cACDb,GACH,MAAO,CACHh6C,EAAGwuC,GAAcxuC,EAAIsnC,GAAQ,EAAItnC,EACjC+S,EAAGy7B,EAAaz7B,GAAKA,EAAIu0B,GAAQ,EAEzC,CACA,QAAAoS,CAASr/B,GACL,MAAgB,MAATA,EAAehN,KAAK6Y,MAAQ,EAAI7Y,KAAKwb,OAAS,CACzD,EAGJ,IAAI,GAAwBzd,OAAOu/B,OAAO,CAC1CiO,UAAW,KACXonB,WAAYA,GACZwF,WAAYA,GACZ5C,YAAaA,GACb4B,aAAcA,KAGd,MAAM0B,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAcrmE,IAAKoO,GAAQA,EAAMlB,QAAQ,OAAQ,SAASA,QAAQ,IAAK,WACjH,SAASq5D,GAAe/mE,GACpB,OAAO6mE,GAAc7mE,EAAI6mE,GAAc16D,OAC3C,CACA,SAAS66D,GAAmBhnE,GACxB,OAAO8mE,GAAkB9mE,EAAI8mE,GAAkB36D,OACnD,CA2BA,SAAS86D,GAA0BnmD,GAC/B,IAAInhB,EACJ,IAAIA,KAAKmhB,EACL,GAAIA,EAAYnhB,GAAG6hB,aAAeV,EAAYnhB,GAAG4hB,gBAC7C,OAAO,EAGf,OAAO,CACX,CAOA,IAAI2lD,GAAgB,CAChB92D,GAAI,SACJkU,SAAU,CACNklC,SAAS,EACT2d,eAAe,GAEnB,YAAA/nB,CAAcr/B,EAAOqnD,EAAOt0D,GACxB,IAAKA,EAAQ02C,QACT,OAEJ,MAAQzhC,MAAM,SAAEtG,GAAc3O,QAASu0D,GAAkBtnD,EAAMuhB,QACzD,SAAExf,GAAculD,EAChBC,EAA0BL,GAA0BxlD,KAlBhC+xC,EAkBsE6T,KAjB9E7T,EAAWhyC,aAAegyC,EAAWjyC,kBAiB0DO,GAAYmlD,GAA0BnlD,IAd3H,oBAAzBwC,GAAS9C,aAAkE,oBAA7B8C,GAAS/C,gBAJlE,IAAkCiyC,EAmB1B,IAAK1gD,EAAQq0D,eAAiBG,EAC1B,OAEJ,MAAMC,EA5Cd,SAAsBxnD,GAClB,IAAI/f,EAAI,EACR,MAAO,CAAC+a,EAAS3I,KACb,MAAM2xB,EAAahkB,EAAMsnB,eAAej1B,GAAc2xB,WAClDA,aAAsByP,GACtBxzC,EAbZ,SAAiC+a,EAAS/a,GAEtC,OADA+a,EAAQwG,gBAAkBxG,EAAQgN,KAAKvnB,IAAI,IAAIumE,GAAe/mE,MACvDA,CACX,CAUgBwnE,CAAwBzsD,EAAS/a,GAC9B+jC,aAAsB8T,GAC7B73C,EAXZ,SAAkC+a,EAAS/a,GAEvC,OADA+a,EAAQwG,gBAAkBxG,EAAQgN,KAAKvnB,IAAI,IAAIwmE,GAAmBhnE,MAC3DA,CACX,CAQgBynE,CAAyB1sD,EAAS/a,GAC/B+jC,IACP/jC,EAtBZ,SAAgC+a,EAAS/a,GAGrC,OAFA+a,EAAQyG,YAAculD,GAAe/mE,GACrC+a,EAAQwG,gBAAkBylD,GAAmBhnE,KACpCA,CACb,CAkBgB0nE,CAAuB3sD,EAAS/a,IAGhD,CAgC0B2nE,CAAa5nD,GAC/B0B,EAASnI,QAAQiuD,EACrB,GAmGJ,SAASK,GAAsB7sD,GAC3B,GAAIA,EAAQq8B,WAAY,CACpB,MAAMrvB,EAAOhN,EAAQuqB,aACdvqB,EAAQq8B,kBACRr8B,EAAQuqB,MACfv5B,OAAOi8B,eAAejtB,EAAS,OAAQ,CACnC+X,cAAc,EACd3O,YAAY,EACZD,UAAU,EACV5T,MAAOyX,GAEf,CACJ,CACA,SAAS8/C,GAAmB9nD,GACxBA,EAAMgI,KAAKtG,SAASnI,QAASyB,IACzB6sD,GAAsB7sD,IAE9B,CAoBA,IAAI+sD,GAAoB,CACpB13D,GAAI,aACJkU,SAAU,CACNyjD,UAAW,UACXve,SAAS,GAEbwe,qBAAsB,CAACjoD,EAAOvO,EAAMsB,KAChC,IAAKA,EAAQ02C,QAET,YADAqe,GAAmB9nD,GAGvB,MAAMw+B,EAAiBx+B,EAAM8G,MAC7B9G,EAAMgI,KAAKtG,SAASnI,QAAQ,CAACyB,EAAS3I,KAClC,MAAM,MAAEkzB,EAAM,UAAE7iB,GAAe1H,EACzBV,EAAO0F,EAAMsnB,eAAej1B,GAC5B2V,EAAOud,GAASvqB,EAAQgN,KAC9B,GAGO,MAHHsH,GAAQ,CACR5M,EACA1C,EAAMjN,QAAQ2P,YAEd,OAEJ,IAAKpI,EAAK0pB,WAAW6B,mBACjB,OAEJ,MAAMqiC,EAAQloD,EAAMsD,OAAOhJ,EAAKqsB,SAChC,GAAmB,WAAfuhC,EAAMh7D,MAAoC,SAAfg7D,EAAMh7D,KACjC,OAEJ,GAAI8S,EAAMjN,QAAQmQ,QACd,OAEJ,IAoBIilD,GApBA,MAAEtwD,EAAM,MAAE6C,GAnD1B,SAAmDJ,EAAMC,GACrD,MAAME,EAAaF,EAAOnO,OAC1B,IACIsO,EADA7C,EAAQ,EAEZ,MAAM,OAAE+C,GAAYN,GACd,IAAEpc,EAAI,IAAED,EAAI,WAAEid,EAAW,WAAEC,GAAgBP,EAAOQ,gBASxD,OARIF,IACArD,EAAQO,GAAYQ,GAAa2B,EAAQK,EAAOK,KAAM/c,GAAKya,GAAI,EAAG8B,EAAa,IAG/EC,EADAS,EACQ/C,GAAYQ,GAAa2B,EAAQK,EAAOK,KAAMhd,GAAKya,GAAK,EAAGb,EAAO4C,GAAc5C,EAEhF4C,EAAa5C,EAElB,CACHA,QACA6C,QAER,CAiCqC0tD,CAA0C9tD,EAAM0N,GAEzE,GAAItN,IADc3H,EAAQs1D,WAAa,EAAI7pB,GAEvCqpB,GAAsB7sD,OAD1B,CAmBA,OAfI1K,EAAci1B,KACdvqB,EAAQuqB,MAAQvd,SACThN,EAAQgN,KACfhc,OAAOi8B,eAAejtB,EAAS,OAAQ,CACnC+X,cAAc,EACd3O,YAAY,EACZ9E,IAAK,WACD,OAAOrR,KAAKopC,UAChB,EACA39B,IAAK,SAASza,GACVgP,KAAKs3B,MAAQtmC,CACjB,KAID8T,EAAQi1D,WACX,IAAK,OACDG,EA5LpB,SAAwBngD,EAAMnQ,EAAO6C,EAAO8jC,EAAgBzrC,GAC3D,MAAMu1D,EAAUv1D,EAAQu1D,SAAW9pB,EAChC,GAAI8pB,GAAW5tD,EACX,OAAOsN,EAAKrX,MAAMkH,EAAOA,EAAQ6C,GAErC,MAAMytD,EAAY,GACZI,GAAe7tD,EAAQ,IAAM4tD,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAW5wD,EAAQ6C,EAAQ,EACjC,IACIza,EAAGyoE,EAAcC,EAASx9C,EAAMy9C,EADhC9pE,EAAI+Y,EAGR,IADAswD,EAAUK,KAAkBxgD,EAAKlpB,GAC7BmB,EAAI,EAAGA,EAAIqoE,EAAU,EAAGroE,IAAI,CAC5B,IAEIuN,EAFAw1D,EAAO,EACP6F,EAAO,EAEX,MAAMC,EAAgB9qE,KAAK8X,OAAO7V,EAAI,GAAKsoE,GAAe,EAAI1wD,EACxDkxD,EAAc/qE,KAAKE,IAAIF,KAAK8X,OAAO7V,EAAI,GAAKsoE,GAAe,EAAG7tD,GAAS7C,EACvEmxD,EAAiBD,EAAcD,EACrC,IAAIt7D,EAAIs7D,EAAet7D,EAAIu7D,EAAav7D,IACpCw1D,GAAQh7C,EAAKxa,GAAG5M,EAChBioE,GAAQ7gD,EAAKxa,GAAGmG,EAEpBqvD,GAAQgG,EACRH,GAAQG,EACR,MAAMC,EAAYjrE,KAAK8X,MAAM7V,EAAIsoE,GAAe,EAAI1wD,EAC9CqxD,EAAUlrE,KAAKE,IAAIF,KAAK8X,OAAO7V,EAAI,GAAKsoE,GAAe,EAAG7tD,GAAS7C,GACjEjX,EAAGuoE,EAAUx1D,EAAGy1D,GAAaphD,EAAKlpB,GAE1C,IADA6pE,EAAUx9C,GAAQ,EACd3d,EAAIy7D,EAAWz7D,EAAI07D,EAAS17D,IAC5B2d,EAAO,GAAMntB,KAAKyX,KAAK0zD,EAAUnG,IAASh7C,EAAKxa,GAAGmG,EAAIy1D,IAAYD,EAAUnhD,EAAKxa,GAAG5M,IAAMioE,EAAOO,IAC7Fj+C,EAAOw9C,IACPA,EAAUx9C,EACVu9C,EAAe1gD,EAAKxa,GACpBo7D,EAAQp7D,GAGhB26D,EAAUK,KAAkBE,EAC5B5pE,EAAI8pE,CACR,CAEA,OADAT,EAAUK,KAAkBxgD,EAAKygD,GAC1BN,CACX,CAkJgCkB,CAAerhD,EAAMnQ,EAAO6C,EAAO8jC,EAAgBzrC,GAC/D,MACJ,IAAK,UACDo1D,EApJpB,SAA0BngD,EAAMnQ,EAAO6C,EAAO8jC,GAC1C,IAEIv+C,EAAGub,EAAO5a,EAAG+S,EAAGmvD,EAAOwG,EAAUC,EAAUC,EAAYzzB,EAAMF,EAF7DmtB,EAAO,EACPC,EAAS,EAEb,MAAMkF,EAAY,GACZM,EAAW5wD,EAAQ6C,EAAQ,EAC3B+uD,EAAOzhD,EAAKnQ,GAAOjX,EAEnB8oE,EADO1hD,EAAKygD,GAAU7nE,EACV6oE,EAClB,IAAIxpE,EAAI4X,EAAO5X,EAAI4X,EAAQ6C,IAASza,EAAE,CAClCub,EAAQwM,EAAK/nB,GACbW,GAAK4a,EAAM5a,EAAI6oE,GAAQC,EAAKlrB,EAC5B7qC,EAAI6H,EAAM7H,EACV,MAAMyvD,EAAa,EAAJxiE,EACf,GAAIwiE,IAAWN,EACPnvD,EAAIoiC,GACJA,EAAOpiC,EACP21D,EAAWrpE,GACJ0T,EAAIkiC,IACXA,EAAOliC,EACP41D,EAAWtpE,GAEf+iE,GAAQC,EAASD,EAAOxnD,EAAM5a,KAAOqiE,MAClC,CACH,MAAM0G,EAAY1pE,EAAI,EACtB,IAAKqQ,EAAcg5D,KAAch5D,EAAci5D,GAAW,CACtD,MAAMK,EAAqB5rE,KAAKE,IAAIorE,EAAUC,GACxCM,EAAqB7rE,KAAKC,IAAIqrE,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC5DxB,EAAUl0D,KAAK,IACR+T,EAAK4hD,GACRhpE,EAAGoiE,IAGP6G,IAAuBL,GAAcK,IAAuBF,GAC5DxB,EAAUl0D,KAAK,IACR+T,EAAK6hD,GACRjpE,EAAGoiE,GAGf,CACI/iE,EAAI,GAAK0pE,IAAcH,GACvBrB,EAAUl0D,KAAK+T,EAAK2hD,IAExBxB,EAAUl0D,KAAKuH,GACfsnD,EAAQM,EACRH,EAAS,EACTltB,EAAOF,EAAOliC,EACd21D,EAAWC,EAAWC,EAAavpE,CACvC,CACJ,CACA,OAAOkoE,CACX,CAgGgC2B,CAAiB9hD,EAAMnQ,EAAO6C,EAAO8jC,GACjD,MACJ,QACI,MAAM,IAAIpsB,MAAM,qCAAqCrf,EAAQi1D,cAErEhtD,EAAQq8B,WAAa8wB,CA1BrB,KA6BR,OAAArL,CAAS98C,GACL8nD,GAAmB9nD,EACvB,GAyCJ,SAAS+pD,GAAWxzD,EAAUqzC,EAAO/wC,EAAMkM,GACvC,GAAIA,EACA,OAEJ,IAAIlN,EAAQ+xC,EAAMrzC,GACduB,EAAMe,EAAKtC,GAKf,MAJiB,UAAbA,IACAsB,EAAQF,GAAgBE,GACxBC,EAAMH,GAAgBG,IAEnB,CACHvB,WACAsB,QACAC,MAER,CA+BA,SAASkyD,GAAgBnyD,EAAOC,EAAKyC,GACjC,KAAMzC,EAAMD,EAAOC,IAAM,CACrB,MAAM0D,EAAQjB,EAAOzC,GACrB,IAAK1B,MAAMoF,EAAM5a,KAAOwV,MAAMoF,EAAM7H,GAChC,KAER,CACA,OAAOmE,CACX,CACA,SAASmyD,GAASnrE,EAAGC,EAAG8vB,EAAMrd,GAC1B,OAAI1S,GAAKC,EACEyS,EAAG1S,EAAE+vB,GAAO9vB,EAAE8vB,IAElB/vB,EAAIA,EAAE+vB,GAAQ9vB,EAAIA,EAAE8vB,GAAQ,CACvC,CAEA,SAASq7C,GAAoBC,EAAUj+C,GACnC,IAAI3R,EAAS,GACTgmB,GAAQ,EAOZ,OANI//B,EAAQ2pE,IACR5pC,GAAQ,EACRhmB,EAAS4vD,GAET5vD,EArDR,SAA6B4vD,EAAUj+C,GACnC,MAAM,EAAEtrB,EAAG,KAAK,EAAE+S,EAAG,MAAUw2D,GAAY,CAAC,EACtCC,EAAal+C,EAAK3R,OAClBA,EAAS,GAyBf,OAxBA2R,EAAKoQ,SAAS/iB,QAAQ,EAAG1B,QAAQC,UAC7BA,EAAMkyD,GAAgBnyD,EAAOC,EAAKsyD,GAClC,MAAMxgB,EAAQwgB,EAAWvyD,GACnBgB,EAAOuxD,EAAWtyD,GACd,OAANnE,GACA4G,EAAOtG,KAAK,CACRrT,EAAGgpD,EAAMhpD,EACT+S,MAEJ4G,EAAOtG,KAAK,CACRrT,EAAGiY,EAAKjY,EACR+S,OAES,OAAN/S,IACP2Z,EAAOtG,KAAK,CACRrT,IACA+S,EAAGi2C,EAAMj2C,IAEb4G,EAAOtG,KAAK,CACRrT,IACA+S,EAAGkF,EAAKlF,OAIb4G,CACX,CAwBiB8vD,CAAoBF,EAAUj+C,GAEpC3R,EAAOnO,OAAS,IAAIo3D,GAAY,CACnCjpD,SACAxH,QAAS,CACLwjB,QAAS,GAEbgK,QACA0Y,UAAW1Y,IACV,IACT,CACA,SAAS+pC,GAAiB/3D,GACtB,OAAOA,IAA0B,IAAhBA,EAAOwY,IAC5B,CAEA,SAASw/C,GAAep3D,EAASb,EAAOk4D,GAEpC,IAAIz/C,EADW5X,EAAQb,GACLyY,KAClB,MAAM0/C,EAAU,CACZn4D,GAEJ,IAAIE,EACJ,IAAKg4D,EACD,OAAOz/C,EAEX,MAAe,IAATA,IAA6C,IAA3B0/C,EAAQ53D,QAAQkY,IAAa,CACjD,IAAKla,EAAeka,GAChB,OAAOA,EAGX,GADAvY,EAASW,EAAQ4X,IACZvY,EACD,OAAO,EAEX,GAAIA,EAAO6S,QACP,OAAO0F,EAEX0/C,EAAQx2D,KAAK8W,GACbA,EAAOvY,EAAOuY,IAClB,CACA,OAAO,CACX,CACC,SAAS2/C,GAAYx+C,EAAM5Z,EAAOoI,GAC9B,MAAMqQ,EAmDV,SAAyBmB,GACtB,MAAMnZ,EAAUmZ,EAAKnZ,QACf43D,EAAa53D,EAAQgY,KAC3B,IAAIA,EAAO7Z,EAAey5D,GAAcA,EAAWn4D,OAAQm4D,GAI3D,YAHap8D,IAATwc,IACAA,IAAShY,EAAQyO,kBAER,IAATuJ,GAA2B,OAATA,KAGT,IAATA,EACO,SAEJA,EACX,CAjEkB6/C,CAAgB1+C,GAC9B,GAAItb,EAASma,GACT,OAAO3U,MAAM2U,EAAKxa,QAAiBwa,EAEvC,IAAIvY,EAASlB,WAAWyZ,GACxB,OAAIla,EAAe2B,IAAWxU,KAAK8X,MAAMtD,KAAYA,EAWzD,SAA2Bq4D,EAASv4D,EAAOE,EAAQkI,GAI/C,MAHgB,MAAZmwD,GAA+B,MAAZA,IACnBr4D,EAASF,EAAQE,KAEjBA,IAAWF,GAASE,EAAS,GAAKA,GAAUkI,IAGzClI,CACX,CAlBes4D,CAAkB//C,EAAK,GAAIzY,EAAOE,EAAQkI,GAE9C,CACH,SACA,QACA,MACA,QACA,SACF7H,QAAQkY,IAAS,GAAKA,CAC5B,CAuFC,SAASggD,GAAexwD,EAAQywD,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAI19D,EAAI,EAAGA,EAAIy9D,EAAW7+D,OAAQoB,IAAI,CACtC,MAAM0e,EAAO++C,EAAWz9D,IAClB,MAAEo8C,EAAM,KAAE/wC,EAAK,MAAE2C,GAAW2vD,GAAUj/C,EAAM8+C,EAAa,KAC/D,MAAKxvD,GAASouC,GAAS/wC,GAGvB,GAAI+wC,EACAshB,EAAUE,QAAQ5vD,QAGlB,GADAjB,EAAOtG,KAAKuH,IACP3C,EACD,KAGZ,CACA0B,EAAOtG,QAAQi3D,EACnB,CACC,SAASC,GAAUj/C,EAAM8+C,EAAaz0D,GACnC,MAAMiF,EAAQ0Q,EAAK9c,YAAY47D,EAAaz0D,GAC5C,IAAKiF,EACD,MAAO,CAAC,EAEZ,MAAM6vD,EAAa7vD,EAAMjF,GACnB+lB,EAAWpQ,EAAKoQ,SAChB8tC,EAAal+C,EAAK3R,OACxB,IAAIqvC,GAAQ,EACR/wC,GAAO,EACX,IAAI,IAAI5Y,EAAI,EAAGA,EAAIq8B,EAASlwB,OAAQnM,IAAI,CACpC,MAAM27B,EAAUU,EAASr8B,GACnBqrE,EAAalB,EAAWxuC,EAAQ/jB,OAAOtB,GACvCg1D,EAAYnB,EAAWxuC,EAAQ9jB,KAAKvB,GAC1C,GAAI8B,GAAWgzD,EAAYC,EAAYC,GAAY,CAC/C3hB,EAAQyhB,IAAeC,EACvBzyD,EAAOwyD,IAAeE,EACtB,KACJ,CACJ,CACA,MAAO,CACH3hB,QACA/wC,OACA2C,QAER,CAEA,MAAMgwD,GACF,WAAAv+D,CAAYkf,GACRle,KAAKrN,EAAIurB,EAAKvrB,EACdqN,KAAK0F,EAAIwY,EAAKxY,EACd1F,KAAKkc,OAASgC,EAAKhC,MACvB,CACA,WAAAs4C,CAAYlgD,EAAKyD,EAAQmG,GACrB,MAAM,EAAEvrB,EAAE,EAAE+S,EAAE,OAAEwW,GAAYlc,KAM5B,OALA+X,EAASA,GAAU,CACfnO,MAAO,EACPC,IAAKjD,IAET0N,EAAIkI,IAAI7pB,EAAG+S,EAAGwW,EAAQnE,EAAOlO,IAAKkO,EAAOnO,OAAO,IACxCsU,EAAKnG,MACjB,CACA,WAAA5W,CAAYoM,GACR,MAAM,EAAE5a,EAAE,EAAE+S,EAAE,OAAEwW,GAAYlc,KACtBmJ,EAAQoE,EAAMpE,MACpB,MAAO,CACHxW,EAAGA,EAAI5C,KAAKuf,IAAInG,GAAS+S,EACzBxW,EAAGA,EAAI3V,KAAKse,IAAIlF,GAAS+S,EACzB/S,QAER,EAiEJ,SAASq0D,GAAUlpD,EAAKhQ,EAAQ4Y,GAC5B,MAAM3Y,EA/DV,SAAoBD,GAChB,MAAM,MAAEyN,EAAM,KAAE+K,EAAK,KAAEmB,GAAU3Z,EACjC,GAAI1B,EAAeka,GACf,OAcP,SAAwB/K,EAAO1N,GAC5B,MAAMgI,EAAO0F,EAAMsnB,eAAeh1B,GAElC,OADgBgI,GAAQ0F,EAAM20B,iBAAiBriC,GAC9BgI,EAAKU,QAAU,IACpC,CAlBe0wD,CAAe1rD,EAAO+K,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyBxY,GACrB,MAAM,MAAE8Q,EAAM,MAAE/Q,EAAM,KAAE4Z,GAAU3Z,EAC5BgI,EAAS,GACT+hB,EAAWpQ,EAAKoQ,SAChBqvC,EAAez/C,EAAK3R,OACpB0wD,EAgBT,SAAuB5nD,EAAO/Q,GAC3B,MAAMs5D,EAAQ,GACRpkB,EAAQnkC,EAAMygB,wBAAwB,QAC5C,IAAI,IAAI7jC,EAAI,EAAGA,EAAIunD,EAAMp7C,OAAQnM,IAAI,CACjC,MAAMqa,EAAOktC,EAAMvnD,GACnB,GAAIqa,EAAKhI,QAAUA,EACf,MAECgI,EAAKyvB,QACN6hC,EAAMR,QAAQ9wD,EAAKU,QAE3B,CACA,OAAO4wD,CACX,CA7BuBC,CAAcxoD,EAAO/Q,GACxC24D,EAAWh3D,KAAKi2D,GAAoB,CAChCtpE,EAAG,KACH+S,EAAG0P,EAAMsC,QACVuG,IACH,IAAI,IAAIjsB,EAAI,EAAGA,EAAIq8B,EAASlwB,OAAQnM,IAAI,CACpC,MAAM27B,EAAUU,EAASr8B,GACzB,IAAI,IAAIuN,EAAIouB,EAAQ/jB,MAAOrK,GAAKouB,EAAQ9jB,IAAKtK,IACzCu9D,GAAexwD,EAAQoxD,EAAan+D,GAAIy9D,EAEhD,CACA,OAAO,IAAIzH,GAAY,CACnBjpD,SACAxH,QAAS,CAAC,GAElB,CA6Fe+4D,CAAgBv5D,GAE3B,GAAa,UAATwY,EACA,OAAO,EAEX,MAAMo/C,EAWV,SAAyB53D,GAErB,OADcA,EAAO8Q,OAAS,CAAC,GACrB81B,yBAiBd,SAAiC5mC,GAC7B,MAAM,MAAE8Q,EAAM,KAAE0H,GAAUxY,EACpBQ,EAAUsQ,EAAMtQ,QAChB3G,EAASiX,EAAM8lB,YAAY/8B,OAC3ByL,EAAQ9E,EAAQjB,QAAUuR,EAAMplB,IAAMolB,EAAMnlB,IAC5CqS,EAtLT,SAAyBwa,EAAM1H,EAAOmrB,GACnC,IAAIj+B,EAUJ,OARIA,EADS,UAATwa,EACQyjB,EACQ,QAATzjB,EACC1H,EAAMtQ,QAAQjB,QAAUuR,EAAMnlB,IAAMmlB,EAAMplB,IAC3C2S,EAASma,GACRA,EAAKxa,MAEL8S,EAAMkqC,eAEXh9C,CACX,CA0KkBw7D,CAAgBhhD,EAAM1H,EAAOxL,GACrCrF,EAAS,GACf,GAAIO,EAAQoT,KAAK6xB,SAAU,CACvB,MAAMlH,EAASztB,EAAM81B,yBAAyB,EAAGthC,GACjD,OAAO,IAAI2zD,GAAU,CACjB5qE,EAAGkwC,EAAOlwC,EACV+S,EAAGm9B,EAAOn9B,EACVwW,OAAQ9G,EAAMy1B,8BAA8BvoC,IAEpD,CACA,IAAI,IAAItQ,EAAI,EAAGA,EAAImM,IAAUnM,EACzBuS,EAAOyB,KAAKoP,EAAM81B,yBAAyBl5C,EAAGsQ,IAElD,OAAOiC,CACX,CAnCew5D,CAAwBz5D,GAIvC,SAA+BA,GAC3B,MAAM,MAAE8Q,EAAO,CAAC,EAAE,KAAE0H,GAAUxY,EACxB0W,EApLT,SAAyB8B,EAAM1H,GAC5B,IAAI4F,EAAQ,KAUZ,MATa,UAAT8B,EACA9B,EAAQ5F,EAAMsC,OACE,QAAToF,EACP9B,EAAQ5F,EAAMoC,IACP7U,EAASma,GAChB9B,EAAQ5F,EAAMhI,iBAAiB0P,EAAKxa,OAC7B8S,EAAMgtB,eACbpnB,EAAQ5F,EAAMgtB,gBAEXpnB,CACX,CAwKkBgjD,CAAgBlhD,EAAM1H,GACpC,GAAIxS,EAAeoY,GAAQ,CACvB,MAAMmmB,EAAa/rB,EAAMitB,eACzB,MAAO,CACH1vC,EAAGwuC,EAAanmB,EAAQ,KACxBtV,EAAGy7B,EAAa,KAAOnmB,EAE/B,CACA,OAAO,IACX,CAbWijD,CAAsB35D,EACjC,CAjBqB45D,CAAgB55D,GACjC,OAAI43D,aAAoBqB,GACbrB,EAEJD,GAAoBC,EAAUj+C,EACzC,CA+CmBqE,CAAWhe,IACpB,MAAEyN,EAAM,MAAE1N,EAAM,KAAE4Z,EAAK,MAAE7I,EAAM,KAAEpI,GAAU1I,EAC3C65D,EAAWlgD,EAAKnZ,QAChB43D,EAAayB,EAASrhD,KACtBlc,EAAQu9D,EAAS5qD,iBACjB,MAAE6qD,EAAOx9D,EAAM,MAAE+8D,EAAO/8D,GAAW87D,GAAc,CAAC,EAClDrwD,EAAO0F,EAAMsnB,eAAeh1B,GAC5B2T,EAAOkX,GAAmBnd,EAAO1F,GACnC9H,GAAU0Z,EAAK3R,OAAOnO,SACtBif,GAAS9I,EAAK4I,GActB,SAAgB5I,EAAK2d,GACjB,MAAM,KAAEhU,EAAK,OAAE1Z,EAAO,MAAE65D,EAAM,MAAET,EAAM,KAAEzgD,EAAK,MAAE9H,EAAM,KAAE4C,GAAUia,EAC3D3pB,EAAW2V,EAAKqU,MAAQ,QAAUL,EAAIjlB,KAC5CsH,EAAImG,OACJ,IAAI4jD,EAAYV,EACZA,IAAUS,IACO,MAAb91D,GACAg2D,GAAahqD,EAAK/P,EAAQ2Y,EAAK1F,KAC/BsF,GAAKxI,EAAK,CACN2J,OACA1Z,SACA3D,MAAOw9D,EACPhpD,QACA9M,WACA0P,SAEJ1D,EAAIuG,UACJvG,EAAImG,OACJ6jD,GAAahqD,EAAK/P,EAAQ2Y,EAAKxF,SACX,MAAbpP,IACPi2D,GAAejqD,EAAK/P,EAAQ2Y,EAAKvF,MACjCmF,GAAKxI,EAAK,CACN2J,OACA1Z,SACA3D,MAAO+8D,EACPvoD,QACA9M,WACA0P,SAEJ1D,EAAIuG,UACJvG,EAAImG,OACJ8jD,GAAejqD,EAAK/P,EAAQ2Y,EAAKzF,OACjC4mD,EAAYD,IAGpBthD,GAAKxI,EAAK,CACN2J,OACA1Z,SACA3D,MAAOy9D,EACPjpD,QACA9M,WACA0P,SAEJ1D,EAAIuG,SACR,CAzDQ2jD,CAAOlqD,EAAK,CACR2J,OACA1Z,SACA65D,QACAT,QACAzgD,OACA9H,QACApI,OACAgL,SAEJqF,GAAW/I,GAEnB,CA8CA,SAASgqD,GAAahqD,EAAK/P,EAAQk6D,GAC/B,MAAM,SAAEpwC,EAAS,OAAE/hB,GAAY/H,EAC/B,IAAIo3C,GAAQ,EACR+iB,GAAW,EACfpqD,EAAIgI,YACJ,IAAK,MAAMqR,KAAWU,EAAS,CAC3B,MAAM,MAAEzkB,EAAM,IAAEC,GAAS8jB,EACnBtH,EAAa/Z,EAAO1C,GACpB+/B,EAAYr9B,EAAOyvD,GAAgBnyD,EAAOC,EAAKyC,IACjDqvC,GACArnC,EAAIoI,OAAO2J,EAAW1zB,EAAG0zB,EAAW3gB,GACpCi2C,GAAQ,IAERrnC,EAAIqI,OAAO0J,EAAW1zB,EAAG8rE,GACzBnqD,EAAIqI,OAAO0J,EAAW1zB,EAAG0zB,EAAW3gB,IAExCg5D,IAAan6D,EAAOiwD,YAAYlgD,EAAKqZ,EAAS,CAC1CmR,KAAM4/B,IAENA,EACApqD,EAAImI,YAEJnI,EAAIqI,OAAOgtB,EAAUh3C,EAAG8rE,EAEhC,CACAnqD,EAAIqI,OAAOpY,EAAOo3C,QAAQhpD,EAAG8rE,GAC7BnqD,EAAImI,YACJnI,EAAI0D,MACR,CACA,SAASumD,GAAejqD,EAAK/P,EAAQo6D,GACjC,MAAM,SAAEtwC,EAAS,OAAE/hB,GAAY/H,EAC/B,IAAIo3C,GAAQ,EACR+iB,GAAW,EACfpqD,EAAIgI,YACJ,IAAK,MAAMqR,KAAWU,EAAS,CAC3B,MAAM,MAAEzkB,EAAM,IAAEC,GAAS8jB,EACnBtH,EAAa/Z,EAAO1C,GACpB+/B,EAAYr9B,EAAOyvD,GAAgBnyD,EAAOC,EAAKyC,IACjDqvC,GACArnC,EAAIoI,OAAO2J,EAAW1zB,EAAG0zB,EAAW3gB,GACpCi2C,GAAQ,IAERrnC,EAAIqI,OAAOgiD,EAAOt4C,EAAW3gB,GAC7B4O,EAAIqI,OAAO0J,EAAW1zB,EAAG0zB,EAAW3gB,IAExCg5D,IAAan6D,EAAOiwD,YAAYlgD,EAAKqZ,EAAS,CAC1CmR,KAAM4/B,IAENA,EACApqD,EAAImI,YAEJnI,EAAIqI,OAAOgiD,EAAOh1B,EAAUjkC,EAEpC,CACA4O,EAAIqI,OAAOgiD,EAAOp6D,EAAOo3C,QAAQj2C,GACjC4O,EAAImI,YACJnI,EAAI0D,MACR,CACA,SAAS8E,GAAKxI,EAAK2d,GACf,MAAM,KAAEhU,EAAK,OAAE1Z,EAAO,SAAE+D,EAAS,MAAE1H,EAAM,MAAEwU,EAAM,KAAE4C,GAAUia,EACvD5D,EAlgBV,SAAmBpQ,EAAM1Z,EAAQ+D,GAC7B,MAAM+lB,EAAWpQ,EAAKoQ,SAChB/hB,EAAS2R,EAAK3R,OACdsyD,EAAUr6D,EAAO+H,OACjBzG,EAAQ,GACd,IAAK,MAAM8nB,KAAWU,EAAS,CAC3B,IAAI,MAAEzkB,EAAM,IAAEC,GAAS8jB,EACvB9jB,EAAMkyD,GAAgBnyD,EAAOC,EAAKyC,GAClC,MAAMyL,EAAS+jD,GAAWxzD,EAAUgE,EAAO1C,GAAQ0C,EAAOzC,GAAM8jB,EAAQ7W,MACxE,IAAKvS,EAAO8pB,SAAU,CAClBxoB,EAAMG,KAAK,CACP1B,OAAQqpB,EACRppB,OAAQwT,EACRnO,MAAO0C,EAAO1C,GACdC,IAAKyC,EAAOzC,KAEhB,QACJ,CACA,MAAMg1D,EAAiBzwC,GAAe7pB,EAAQwT,GAC9C,IAAK,MAAM+mD,KAAOD,EAAe,CAC7B,MAAME,EAAYjD,GAAWxzD,EAAUs2D,EAAQE,EAAIl1D,OAAQg1D,EAAQE,EAAIj1D,KAAMi1D,EAAIhoD,MAC3EkoD,EAActxC,GAAcC,EAASrhB,EAAQyyD,GACnD,IAAK,MAAME,KAAcD,EACrBn5D,EAAMG,KAAK,CACP1B,OAAQ26D,EACR16D,OAAQu6D,EACRl1D,MAAO,CACH,CAACtB,GAAW0zD,GAASjkD,EAAQgnD,EAAW,QAAShvE,KAAKC,MAE1D6Z,IAAK,CACD,CAACvB,GAAW0zD,GAASjkD,EAAQgnD,EAAW,MAAOhvE,KAAKE,OAIpE,CACJ,CACA,OAAO4V,CACX,CA6dqB6vD,CAAUz3C,EAAM1Z,EAAQ+D,GACzC,IAAK,MAAQhE,OAAQ46D,EAAM36D,OAAQu6D,EAAI,MAAEl1D,EAAM,IAAEC,KAAUwkB,EAAS,CAChE,MAAQna,OAAO,gBAAEX,EAAiB3S,GAAW,CAAC,GAAOs+D,EAC/CC,GAAsB,IAAX56D,EACjB+P,EAAImG,OACJnG,EAAIsK,UAAYrL,EAChB6rD,GAAW9qD,EAAKc,EAAO4C,EAAMmnD,GAAYrD,GAAWxzD,EAAUsB,EAAOC,IACrEyK,EAAIgI,YACJ,MAAMoiD,IAAazgD,EAAKu2C,YAAYlgD,EAAK4qD,GACzC,IAAIpoD,EACJ,GAAIqoD,EAAU,CACNT,EACApqD,EAAImI,YAEJ4iD,GAAmB/qD,EAAK/P,EAAQsF,EAAKvB,GAEzC,MAAMg3D,IAAe/6D,EAAOiwD,YAAYlgD,EAAKwqD,EAAK,CAC9ChgC,KAAM4/B,EACN76D,SAAS,IAEbiT,EAAO4nD,GAAYY,EACdxoD,GACDuoD,GAAmB/qD,EAAK/P,EAAQqF,EAAOtB,EAE/C,CACAgM,EAAImI,YACJnI,EAAIwI,KAAKhG,EAAO,UAAY,WAC5BxC,EAAIuG,SACR,CACJ,CACA,SAASukD,GAAW9qD,EAAKc,EAAO4C,EAAMD,GAClC,MAAMiX,EAAY5Z,EAAMrD,MAAMid,WACxB,SAAE1mB,EAAS,MAAEsB,EAAM,IAAEC,GAASkO,GAAU,CAAC,EAC/C,GAAiB,MAAbzP,GAAiC,MAAbA,EAAkB,CACtC,IAAIqP,EAAMH,EAAKC,EAAOC,EACL,MAAbpP,GACAqP,EAAO/N,EACP4N,EAAMwX,EAAUxX,IAChBC,EAAQ5N,EACR6N,EAASsX,EAAUtX,SAEnBC,EAAOqX,EAAUrX,KACjBH,EAAM5N,EACN6N,EAAQuX,EAAUvX,MAClBC,EAAS7N,GAEbyK,EAAIgI,YACAtE,IACAL,EAAO5nB,KAAKC,IAAI2nB,EAAMK,EAAKL,MAC3BF,EAAQ1nB,KAAKE,IAAIwnB,EAAOO,EAAKP,OAC7BD,EAAMznB,KAAKC,IAAIwnB,EAAKQ,EAAKR,KACzBE,EAAS3nB,KAAKE,IAAIynB,EAAQM,EAAKN,SAEnCpD,EAAIuI,KAAKlF,EAAMH,EAAKC,EAAQE,EAAMD,EAASF,GAC3ClD,EAAI0D,MACR,CACJ,CACA,SAASqnD,GAAmB/qD,EAAK/P,EAAQgJ,EAAOjF,GAC5C,MAAMi3D,EAAoBh7D,EAAOpD,YAAYoM,EAAOjF,GAChDi3D,GACAjrD,EAAIqI,OAAO4iD,EAAkB5sE,EAAG4sE,EAAkB75D,EAE1D,CAEA,IAAIrB,GAAQ,CACRjC,GAAI,SACJ,mBAAAo9D,CAAqBztD,EAAOqnD,EAAOt0D,GAC/B,MAAM2H,GAASsF,EAAMgI,KAAKtG,UAAY,IAAItV,OACpC+G,EAAU,GAChB,IAAImH,EAAMra,EAAGisB,EAAM3Z,EACnB,IAAItS,EAAI,EAAGA,EAAIya,IAASza,EACpBqa,EAAO0F,EAAMsnB,eAAernC,GAC5BisB,EAAO5R,EAAKU,QACZzI,EAAS,KACL2Z,GAAQA,EAAKnZ,SAAWmZ,aAAgBs3C,KACxCjxD,EAAS,CACL8S,QAASrF,EAAM20B,iBAAiB10C,GAChCqS,MAAOrS,EACP8qB,KAAM2/C,GAAYx+C,EAAMjsB,EAAGya,GAC3BsF,QACA/E,KAAMX,EAAK0pB,WAAWjxB,QAAQ2P,UAC9BW,MAAO/I,EAAKO,OACZqR,SAGR5R,EAAKozD,QAAUn7D,EACfY,EAAQc,KAAK1B,GAEjB,IAAItS,EAAI,EAAGA,EAAIya,IAASza,EACpBsS,EAASY,EAAQlT,GACZsS,IAA0B,IAAhBA,EAAOwY,OAGtBxY,EAAOwY,KAAOw/C,GAAep3D,EAASlT,EAAG8S,EAAQy3D,WAEzD,EACA,UAAAmD,CAAY3tD,EAAOqnD,EAAOt0D,GACtB,MAAM0rB,EAA4B,eAArB1rB,EAAQ66D,SACf/qC,EAAW7iB,EAAM06B,+BACjBvvB,EAAOnL,EAAMid,UACnB,IAAI,IAAIh9B,EAAI4iC,EAASz2B,OAAS,EAAGnM,GAAK,IAAKA,EAAE,CACzC,MAAMsS,EAASswB,EAAS5iC,GAAGytE,QACtBn7D,IAGLA,EAAO2Z,KAAK2rB,oBAAoB1sB,EAAM5Y,EAAO0I,MACzCwjB,GAAQlsB,EAAOwY,MACf0gD,GAAUzrD,EAAMuC,IAAKhQ,EAAQ4Y,GAErC,CACJ,EACA,kBAAA0iD,CAAoB7tD,EAAOqnD,EAAOt0D,GAC9B,GAAyB,uBAArBA,EAAQ66D,SACR,OAEJ,MAAM/qC,EAAW7iB,EAAM06B,+BACvB,IAAI,IAAIz6C,EAAI4iC,EAASz2B,OAAS,EAAGnM,GAAK,IAAKA,EAAE,CACzC,MAAMsS,EAASswB,EAAS5iC,GAAGytE,QACvBpD,GAAiB/3D,IACjBk5D,GAAUzrD,EAAMuC,IAAKhQ,EAAQyN,EAAMid,UAE3C,CACJ,EACA,iBAAA6wC,CAAmB9tD,EAAOvO,EAAMsB,GAC5B,MAAMR,EAASd,EAAK6I,KAAKozD,QACpBpD,GAAiB/3D,IAAgC,sBAArBQ,EAAQ66D,UAGzCnC,GAAUzrD,EAAMuC,IAAKhQ,EAAQyN,EAAMid,UACvC,EACA1Y,SAAU,CACNimD,WAAW,EACXoD,SAAU,sBAIlB,MAAMG,GAAa,CAACC,EAAWld,KAC3B,IAAI,UAAEmd,EAAWnd,EAAS,SAAEod,EAAUpd,GAAckd,EAKpD,OAJIA,EAAUG,gBACVF,EAAYjwE,KAAKE,IAAI+vE,EAAWnd,GAChCod,EAAWF,EAAUI,iBAAmBpwE,KAAKE,IAAIgwE,EAAUpd,IAExD,CACHod,WACAD,YACAI,WAAYrwE,KAAKC,IAAI6yD,EAAUmd,KAIvC,MAAMK,WAAe3pB,GACpB,WAAA13C,CAAYs0B,GACL4O,QACAliC,KAAKsgE,QAAS,EACdtgE,KAAKugE,eAAiB,GAC7BvgE,KAAKwgE,aAAe,KACbxgE,KAAKygE,cAAe,EACpBzgE,KAAK+R,MAAQuhB,EAAOvhB,MACpB/R,KAAK8E,QAAUwuB,EAAOxuB,QACtB9E,KAAKsU,IAAMgf,EAAOhf,IAClBtU,KAAK0gE,iBAAcpgE,EACnBN,KAAK2gE,iBAAcrgE,EACnBN,KAAK4gE,gBAAatgE,EAClBN,KAAKgoC,eAAY1nC,EACjBN,KAAK2f,cAAWrf,EAChBN,KAAKwX,SAAMlX,EACXN,KAAK0X,YAASpX,EACdN,KAAK2X,UAAOrX,EACZN,KAAKyX,WAAQnX,EACbN,KAAKwb,YAASlb,EACdN,KAAK6Y,WAAQvY,EACbN,KAAKk4C,cAAW53C,EAChBN,KAAKusC,cAAWjsC,EAChBN,KAAKa,YAASP,EACdN,KAAK0vC,cAAWpvC,CACpB,CACA,MAAAsyB,CAAOjT,EAAUqoB,EAAWgO,GACxBh2C,KAAK2f,SAAWA,EAChB3f,KAAKgoC,UAAYA,EACjBhoC,KAAKk4C,SAAWlC,EAChBh2C,KAAKi6C,gBACLj6C,KAAK6gE,cACL7gE,KAAKq8C,KACT,CACA,aAAApC,GACQj6C,KAAKqiC,gBACLriC,KAAK6Y,MAAQ7Y,KAAK2f,SAClB3f,KAAK2X,KAAO3X,KAAKk4C,SAASvgC,KAC1B3X,KAAKyX,MAAQzX,KAAK6Y,QAElB7Y,KAAKwb,OAASxb,KAAKgoC,UACnBhoC,KAAKwX,IAAMxX,KAAKk4C,SAAS1gC,IACzBxX,KAAK0X,OAAS1X,KAAKwb,OAE3B,CACA,WAAAqlD,GACI,MAAMd,EAAY//D,KAAK8E,QAAQm2B,QAAU,CAAC,EAC1C,IAAIylC,EAAcp9D,EAASy8D,EAAU/5B,eAAgB,CACjDhmC,KAAK+R,OACN/R,OAAS,GACR+/D,EAAUr7C,SACVg8C,EAAcA,EAAYh8C,OAAQje,GAAOs5D,EAAUr7C,OAAOje,EAAMzG,KAAK+R,MAAMgI,QAE3EgmD,EAAUhgC,OACV2gC,EAAcA,EAAY3gC,KAAK,CAAClvC,EAAGC,IAAIivE,EAAUhgC,KAAKlvC,EAAGC,EAAGkP,KAAK+R,MAAMgI,QAEvE/Z,KAAK8E,QAAQjB,SACb68D,EAAY78D,UAEhB7D,KAAK0gE,YAAcA,CACvB,CACA,GAAArkB,GACI,MAAM,QAAEv3C,EAAQ,IAAEwP,GAAStU,KAC3B,IAAK8E,EAAQ8S,QAET,YADA5X,KAAK6Y,MAAQ7Y,KAAKwb,OAAS,GAG/B,MAAMukD,EAAYj7D,EAAQm2B,OACpB6lC,EAAY9/C,GAAO++C,EAAU/rD,MAC7B6uC,EAAWie,EAAUt6D,KACrBo3C,EAAc59C,KAAK+gE,uBACnB,SAAEd,EAAS,WAAEG,GAAgBN,GAAWC,EAAWld,GACzD,IAAIhqC,EAAO2C,EACXlH,EAAIN,KAAO8sD,EAAU5mD,OACjBla,KAAKqiC,gBACLxpB,EAAQ7Y,KAAK2f,SACbnE,EAASxb,KAAKghE,SAASpjB,EAAaiF,EAAUod,EAAUG,GAAc,KAEtE5kD,EAASxb,KAAKgoC,UACdnvB,EAAQ7Y,KAAKihE,SAASrjB,EAAakjB,EAAWb,EAAUG,GAAc,IAE1EpgE,KAAK6Y,MAAQ9oB,KAAKE,IAAI4oB,EAAO/T,EAAQ6a,UAAY3f,KAAK2f,UACtD3f,KAAKwb,OAASzrB,KAAKE,IAAIurB,EAAQ1W,EAAQkjC,WAAahoC,KAAKgoC,UAC7D,CACH,QAAAg5B,CAASpjB,EAAaiF,EAAUod,EAAUG,GACnC,MAAM,IAAE9rD,EAAI,SAAEqL,EAAW7a,SAAWm2B,QAAQ,QAAE1jB,KAAmBvX,KAC3DkhE,EAAWlhE,KAAKugE,eAAiB,GACjCK,EAAa5gE,KAAK4gE,WAAa,CACjC,GAEEzsD,EAAaisD,EAAa7oD,EAChC,IAAI4pD,EAAcvjB,EAClBtpC,EAAIgL,UAAY,OAChBhL,EAAIiL,aAAe,SACnB,IAAI6hD,GAAO,EACP5pD,GAAOrD,EAkBX,OAjBAnU,KAAK0gE,YAAYp1D,QAAQ,CAAC46B,EAAYl0C,KAClC,MAAM26B,EAAYszC,EAAWpd,EAAW,EAAIvuC,EAAI8F,YAAY8rB,EAAWntB,MAAMF,OACnE,IAAN7mB,GAAW4uE,EAAWA,EAAWziE,OAAS,GAAKwuB,EAAY,EAAIpV,EAAUoI,KACzEwhD,GAAehtD,EACfysD,EAAWA,EAAWziE,QAAUnM,EAAI,EAAI,EAAI,IAAM,EAClDwlB,GAAOrD,EACPitD,KAEJF,EAASlvE,GAAK,CACV2lB,KAAM,EACNH,MACA4pD,MACAvoD,MAAO8T,EACPnR,OAAQ4kD,GAEZQ,EAAWA,EAAWziE,OAAS,IAAMwuB,EAAYpV,IAE9C4pD,CACX,CACA,QAAAF,CAASrjB,EAAakjB,EAAWb,EAAUoB,GACvC,MAAM,IAAE/sD,EAAI,UAAE0zB,EAAYljC,SAAWm2B,QAAQ,QAAE1jB,KAAmBvX,KAC5DkhE,EAAWlhE,KAAKugE,eAAiB,GACjCI,EAAc3gE,KAAK2gE,YAAc,GACjCW,EAAct5B,EAAY4V,EAChC,IAAI2jB,EAAahqD,EACbiqD,EAAkB,EAClBC,EAAmB,EACnB9pD,EAAO,EACP+pD,EAAM,EA4BV,OA3BA1hE,KAAK0gE,YAAYp1D,QAAQ,CAAC46B,EAAYl0C,KAClC,MAAM,UAAE26B,EAAU,WAAEyzC,GAqRhC,SAA2BH,EAAUa,EAAWxsD,EAAK4xB,EAAYm7B,GAC7D,MAAM10C,EAOV,SAA4BuZ,EAAY+5B,EAAUa,EAAWxsD,GACzD,IAAIqtD,EAAiBz7B,EAAWntB,KAIhC,OAHI4oD,GAA4C,iBAAnBA,IACzBA,EAAiBA,EAAexwC,OAAO,CAACtgC,EAAGC,IAAID,EAAEsN,OAASrN,EAAEqN,OAAStN,EAAIC,IAEtEmvE,EAAWa,EAAUt6D,KAAO,EAAI8N,EAAI8F,YAAYunD,GAAgB9oD,KAC3E,CAbsB+oD,CAAmB17B,EAAY+5B,EAAUa,EAAWxsD,GAChE8rD,EAaV,SAA6BiB,EAAan7B,EAAY27B,GAClD,IAAIzB,EAAaiB,EAIjB,MAH+B,iBAApBn7B,EAAWntB,OAClBqnD,EAAa0B,GAA0B57B,EAAY27B,IAEhDzB,CACX,CAnBuB2B,CAAoBV,EAAan7B,EAAY46B,EAAU3sD,YAC1E,MAAO,CACHwY,YACAyzC,aAER,CA5RgD4B,CAAkB/B,EAAUa,EAAWxsD,EAAK4xB,EAAYm7B,GACxFrvE,EAAI,GAAKyvE,EAAmBrB,EAAa,EAAI7oD,EAAU+pD,IACvDC,GAAcC,EAAkBjqD,EAChCopD,EAAY36D,KAAK,CACb6S,MAAO2oD,EACPhmD,OAAQimD,IAEZ9pD,GAAQ6pD,EAAkBjqD,EAC1BmqD,IACAF,EAAkBC,EAAmB,GAEzCP,EAASlvE,GAAK,CACV2lB,OACAH,IAAKiqD,EACLC,MACA7oD,MAAO8T,EACPnR,OAAQ4kD,GAEZoB,EAAkBzxE,KAAKC,IAAIwxE,EAAiB70C,GAC5C80C,GAAoBrB,EAAa7oD,IAErCgqD,GAAcC,EACdb,EAAY36D,KAAK,CACb6S,MAAO2oD,EACPhmD,OAAQimD,IAELF,CACX,CACA,cAAAU,GACI,IAAKjiE,KAAK8E,QAAQ8S,QACd,OAEJ,MAAMgmC,EAAc59C,KAAK+gE,uBACjBR,eAAgBW,EAAWp8D,SAAS,MAAEoH,EAAQ+uB,QAAQ,QAAE1jB,GAAW,IAAE+U,IAAYtsB,KACnFkiE,EAAY71C,GAAcC,EAAKtsB,KAAK2X,KAAM3X,KAAK6Y,OACrD,GAAI7Y,KAAKqiC,eAAgB,CACrB,IAAI++B,EAAM,EACNzpD,EAAOxL,GAAeD,EAAOlM,KAAK2X,KAAOJ,EAASvX,KAAKyX,MAAQzX,KAAK4gE,WAAWQ,IACnF,IAAK,MAAMe,KAAUjB,EACbE,IAAQe,EAAOf,MACfA,EAAMe,EAAOf,IACbzpD,EAAOxL,GAAeD,EAAOlM,KAAK2X,KAAOJ,EAASvX,KAAKyX,MAAQzX,KAAK4gE,WAAWQ,KAEnFe,EAAO3qD,KAAOxX,KAAKwX,IAAMomC,EAAcrmC,EACvC4qD,EAAOxqD,KAAOuqD,EAAUx1C,WAAWw1C,EAAUvvE,EAAEglB,GAAOwqD,EAAOtpD,OAC7DlB,GAAQwqD,EAAOtpD,MAAQtB,CAE/B,KAAO,CACH,IAAImqD,EAAM,EACNlqD,EAAMrL,GAAeD,EAAOlM,KAAKwX,IAAMomC,EAAcrmC,EAASvX,KAAK0X,OAAS1X,KAAK2gE,YAAYe,GAAKlmD,QACtG,IAAK,MAAM2mD,KAAUjB,EACbiB,EAAOT,MAAQA,IACfA,EAAMS,EAAOT,IACblqD,EAAMrL,GAAeD,EAAOlM,KAAKwX,IAAMomC,EAAcrmC,EAASvX,KAAK0X,OAAS1X,KAAK2gE,YAAYe,GAAKlmD,SAEtG2mD,EAAO3qD,IAAMA,EACb2qD,EAAOxqD,MAAQ3X,KAAK2X,KAAOJ,EAC3B4qD,EAAOxqD,KAAOuqD,EAAUx1C,WAAWw1C,EAAUvvE,EAAEwvE,EAAOxqD,MAAOwqD,EAAOtpD,OACpErB,GAAO2qD,EAAO3mD,OAASjE,CAE/B,CACJ,CACA,YAAA8qB,GACI,MAAiC,QAA1BriC,KAAK8E,QAAQynC,UAAgD,WAA1BvsC,KAAK8E,QAAQynC,QAC3D,CACA,IAAA/b,GACI,GAAIxwB,KAAK8E,QAAQ8S,QAAS,CACtB,MAAMtD,EAAMtU,KAAKsU,IACjB8I,GAAS9I,EAAKtU,MACdA,KAAKoiE,QACL/kD,GAAW/I,EACf,CACJ,CACH,KAAA8tD,GACO,MAAQt9D,QAASoZ,EAAK,YAAEyiD,EAAY,WAAEC,EAAW,IAAEtsD,GAAStU,MACtD,MAAEkM,EAAQ+uB,OAAQ8kC,GAAe7hD,EACjCmkD,EAAe/rD,GAAS1V,MACxBshE,EAAY71C,GAAcnO,EAAKoO,IAAKtsB,KAAK2X,KAAM3X,KAAK6Y,OACpDioD,EAAY9/C,GAAO++C,EAAU/rD,OAC7B,QAAEuD,GAAawoD,EACfld,EAAWie,EAAUt6D,KACrB87D,EAAezf,EAAW,EAChC,IAAI0f,EACJviE,KAAKqiD,YACL/tC,EAAIgL,UAAY4iD,EAAU5iD,UAAU,QACpChL,EAAIiL,aAAe,SACnBjL,EAAI6D,UAAY,GAChB7D,EAAIN,KAAO8sD,EAAU5mD,OACrB,MAAM,SAAE+lD,EAAS,UAAED,EAAU,WAAEI,GAAgBN,GAAWC,EAAWld,GAqD/DxgB,EAAeriC,KAAKqiC,eACpBub,EAAc59C,KAAK+gE,sBAErBwB,EADAlgC,EACS,CACL1vC,EAAGwZ,GAAeD,EAAOlM,KAAK2X,KAAOJ,EAASvX,KAAKyX,MAAQmpD,EAAW,IACtEl7D,EAAG1F,KAAKwX,IAAMD,EAAUqmC,EACxB3/B,KAAM,GAGD,CACLtrB,EAAGqN,KAAK2X,KAAOJ,EACf7R,EAAGyG,GAAeD,EAAOlM,KAAKwX,IAAMomC,EAAcrmC,EAASvX,KAAK0X,OAASipD,EAAY,GAAGnlD,QACxFyC,KAAM,GAGd6O,GAAsB9sB,KAAKsU,IAAK4J,EAAKskD,eACrC,MAAMruD,EAAaisD,EAAa7oD,EAChCvX,KAAK0gE,YAAYp1D,QAAQ,CAAC46B,EAAYl0C,KAClCsiB,EAAIqK,YAAcunB,EAAWD,UAC7B3xB,EAAIsK,UAAYsnB,EAAWD,UAC3B,MAAM9rB,EAAY7F,EAAI8F,YAAY8rB,EAAWntB,MAAMF,MAC7CyG,EAAY4iD,EAAU5iD,UAAU4mB,EAAW5mB,YAAc4mB,EAAW5mB,UAAYygD,EAAUzgD,YAC1FzG,EAAQonD,EAAWqC,EAAenoD,EACxC,IAAIxnB,EAAI4vE,EAAO5vE,EACX+S,EAAI68D,EAAO78D,EAiBf,GAhBAw8D,EAAU11C,SAASxsB,KAAK6Y,OACpBwpB,EACIrwC,EAAI,GAAKW,EAAIkmB,EAAQtB,EAAUvX,KAAKyX,QACpC/R,EAAI68D,EAAO78D,GAAKyO,EAChBouD,EAAOtkD,OACPtrB,EAAI4vE,EAAO5vE,EAAIwZ,GAAeD,EAAOlM,KAAK2X,KAAOJ,EAASvX,KAAKyX,MAAQmpD,EAAW2B,EAAOtkD,QAEtFjsB,EAAI,GAAK0T,EAAIyO,EAAanU,KAAK0X,SACtC/kB,EAAI4vE,EAAO5vE,EAAIA,EAAIguE,EAAY4B,EAAOtkD,MAAMpF,MAAQtB,EACpDgrD,EAAOtkD,OACPvY,EAAI68D,EAAO78D,EAAIyG,GAAeD,EAAOlM,KAAKwX,IAAMomC,EAAcrmC,EAASvX,KAAK0X,OAASipD,EAAY4B,EAAOtkD,MAAMzC,SAvFhG,SAAS7oB,EAAG+S,EAAGwgC,GACjC,GAAI/9B,MAAM83D,IAAaA,GAAY,GAAK93D,MAAM63D,IAAcA,EAAY,EACpE,OAEJ1rD,EAAImG,OACJ,MAAMtC,EAAYlV,EAAeijC,EAAW/tB,UAAW,GAQvD,GAPA7D,EAAIsK,UAAY3b,EAAeijC,EAAWtnB,UAAWyjD,GACrD/tD,EAAI2/C,QAAUhxD,EAAeijC,EAAW+tB,QAAS,QACjD3/C,EAAI0tC,eAAiB/+C,EAAeijC,EAAW8b,eAAgB,GAC/D1tC,EAAIm/C,SAAWxwD,EAAeijC,EAAWutB,SAAU,SACnDn/C,EAAI6D,UAAYA,EAChB7D,EAAIqK,YAAc1b,EAAeijC,EAAWvnB,YAAa0jD,GACzD/tD,EAAIytC,YAAY9+C,EAAeijC,EAAWu8B,SAAU,KAChD1C,EAAUG,cAAe,CACzB,MAAMwC,EAAc,CAChBxmD,OAAQ8jD,EAAYjwE,KAAK4yE,MAAQ,EACjC3mD,WAAYkqB,EAAWlqB,WACvBC,SAAUiqB,EAAWjqB,SACrBc,YAAa5E,GAEXuwB,EAAUw5B,EAAUz1C,MAAM95B,EAAGstE,EAAW,GAE9CvkD,GAAgBpH,EAAKouD,EAAah6B,EADlBhjC,EAAI48D,EACgCvC,EAAUI,iBAAmBF,EACrF,KAAO,CACH,MAAM2C,EAAUl9D,EAAI3V,KAAKC,KAAK6yD,EAAWmd,GAAa,EAAG,GACnD6C,EAAWX,EAAUx1C,WAAW/5B,EAAGstE,GACnC7O,EAAetwC,GAAcolB,EAAWkrB,cAC9C98C,EAAIgI,YACAve,OAAO4T,OAAOy/C,GAAchL,KAAMz2D,GAAU,IAANA,GACtCkwB,GAAmBvL,EAAK,CACpB3hB,EAAGkwE,EACHn9D,EAAGk9D,EACH9wE,EAAGmuE,EACHnwE,EAAGkwE,EACH9jD,OAAQk1C,IAGZ98C,EAAIuI,KAAKgmD,EAAUD,EAAS3C,EAAUD,GAE1C1rD,EAAIwI,OACc,IAAd3E,GACA7D,EAAI0I,QAEZ,CACA1I,EAAIuG,SACR,CA6CIioD,CADcZ,EAAUvvE,EAAEA,GACL+S,EAAGwgC,GACxBvzC,ED9yPO,EAACuZ,EAAOyL,EAAMF,EAAO6U,IAE7BpgB,KADOogB,EAAM,OAAS,SACJ7U,EAAkB,WAAVvL,GAAsByL,EAAOF,GAAS,EAAIE,EC4yP/DorD,CAAOzjD,EAAW3sB,EAAIstE,EAAWqC,EAAcjgC,EAAe1vC,EAAIkmB,EAAQ7Y,KAAKyX,MAAOyG,EAAKoO,KA7ClF,SAAS35B,EAAG+S,EAAGwgC,GAC5BjnB,GAAW3K,EAAK4xB,EAAWntB,KAAMpmB,EAAG+S,EAAI06D,EAAa,EAAGU,EAAW,CAC/D3iD,cAAe+nB,EAAWpK,OAC1Bxc,UAAW4iD,EAAU5iD,UAAU4mB,EAAW5mB,YAElD,CAyCIM,CAASsiD,EAAUvvE,EAAEA,GAAI+S,EAAGwgC,GACxB7D,EACAkgC,EAAO5vE,GAAKkmB,EAAQtB,OACjB,GAA+B,iBAApB2uB,EAAWntB,KAAmB,CAC5C,MAAM8oD,EAAiBf,EAAU3sD,WACjCouD,EAAO78D,GAAKo8D,GAA0B57B,EAAY27B,GAAkBtqD,CACxE,MACIgrD,EAAO78D,GAAKyO,IAGpBiZ,GAAqBptB,KAAKsU,IAAK4J,EAAKskD,cACxC,CACH,SAAAngB,GACO,MAAMnkC,EAAOle,KAAK8E,QACZ44C,EAAYx/B,EAAKpF,MACjBkqD,EAAYhiD,GAAO08B,EAAU1pC,MAC7BivD,EAAeliD,GAAU28B,EAAUnmC,SACzC,IAAKmmC,EAAU9lC,QACX,OAEJ,MAAMsqD,EAAY71C,GAAcnO,EAAKoO,IAAKtsB,KAAK2X,KAAM3X,KAAK6Y,OACpDvE,EAAMtU,KAAKsU,IACXi4B,EAAWmR,EAAUnR,SACrB+1B,EAAeU,EAAUx8D,KAAO,EAChC08D,EAA6BD,EAAazrD,IAAM8qD,EACtD,IAAI58D,EACAiS,EAAO3X,KAAK2X,KACZgI,EAAW3f,KAAK6Y,MACpB,GAAI7Y,KAAKqiC,eACL1iB,EAAW5vB,KAAKC,OAAOgQ,KAAK4gE,YAC5Bl7D,EAAI1F,KAAKwX,IAAM0rD,EACfvrD,EAAOxL,GAAe+R,EAAKhS,MAAOyL,EAAM3X,KAAKyX,MAAQkI,OAClD,CACH,MAAMqoB,EAAYhoC,KAAK2gE,YAAYxvC,OAAO,CAACC,EAAK5qB,IAAOzW,KAAKC,IAAIohC,EAAK5qB,EAAKgV,QAAS,GACnF9V,EAAIw9D,EAA6B/2D,GAAe+R,EAAKhS,MAAOlM,KAAKwX,IAAKxX,KAAK0X,OAASswB,EAAY9pB,EAAK+c,OAAO1jB,QAAUvX,KAAK+gE,sBAC/H,CACA,MAAMpuE,EAAIwZ,GAAeogC,EAAU50B,EAAMA,EAAOgI,GAChDrL,EAAIgL,UAAY4iD,EAAU5iD,UAAUrT,GAAmBsgC,IACvDj4B,EAAIiL,aAAe,SACnBjL,EAAIqK,YAAc++B,EAAU98C,MAC5B0T,EAAIsK,UAAY8+B,EAAU98C,MAC1B0T,EAAIN,KAAOgvD,EAAU9oD,OACrB+E,GAAW3K,EAAKopC,EAAU3kC,KAAMpmB,EAAG+S,EAAGs9D,EAC1C,CACH,mBAAAjC,GACO,MAAMrjB,EAAY19C,KAAK8E,QAAQgU,MACzBkqD,EAAYhiD,GAAO08B,EAAU1pC,MAC7BivD,EAAeliD,GAAU28B,EAAUnmC,SACzC,OAAOmmC,EAAU9lC,QAAUorD,EAAU7uD,WAAa8uD,EAAaznD,OAAS,CAC5E,CACH,gBAAA2nD,CAAiBxwE,EAAG+S,GACb,IAAI1T,EAAGoxE,EAAQC,EACf,GAAIj5D,GAAWzX,EAAGqN,KAAK2X,KAAM3X,KAAKyX,QAAUrN,GAAW1E,EAAG1F,KAAKwX,IAAKxX,KAAK0X,QAErE,IADA2rD,EAAKrjE,KAAKugE,eACNvuE,EAAI,EAAGA,EAAIqxE,EAAGllE,SAAUnM,EAExB,GADAoxE,EAASC,EAAGrxE,GACRoY,GAAWzX,EAAGywE,EAAOzrD,KAAMyrD,EAAOzrD,KAAOyrD,EAAOvqD,QAAUzO,GAAW1E,EAAG09D,EAAO5rD,IAAK4rD,EAAO5rD,IAAM4rD,EAAO5nD,QACxG,OAAOxb,KAAK0gE,YAAY1uE,GAIpC,OAAO,IACX,CACH,WAAAsxE,CAAYryE,GACL,MAAMitB,EAAOle,KAAK8E,QAClB,IAyDR,SAAoB7F,EAAMif,GACtB,QAAc,cAATjf,GAAiC,aAATA,IAAyBif,EAAKnJ,UAAWmJ,EAAKqlD,aAGvErlD,EAAKlJ,SAAqB,UAAT/V,GAA6B,YAATA,EAI7C,CAjEaukE,CAAWvyE,EAAEgO,KAAMif,GACpB,OAEJ,MAAMulD,EAAczjE,KAAKmjE,iBAAiBlyE,EAAE0B,EAAG1B,EAAEyU,GACjD,GAAe,cAAXzU,EAAEgO,MAAmC,aAAXhO,EAAEgO,KAAqB,CACjD,MAAMse,EAAWvd,KAAKwgE,aAChBkD,GA3XK5yE,EA2X2B2yE,EA3XjB,QAAb5yE,EA2XoB0sB,IA3XO,OAANzsB,GAAcD,EAAEuT,eAAiBtT,EAAEsT,cAAgBvT,EAAEwT,QAAUvT,EAAEuT,OA4X1FkZ,IAAammD,GACbpgE,EAAS4a,EAAKqlD,QAAS,CACnBtyE,EACAssB,EACAvd,MACDA,MAEPA,KAAKwgE,aAAeiD,EAChBA,IAAgBC,GAChBpgE,EAAS4a,EAAKnJ,QAAS,CACnB9jB,EACAwyE,EACAzjE,MACDA,KAEX,MAAWyjE,GACPngE,EAAS4a,EAAKlJ,QAAS,CACnB/jB,EACAwyE,EACAzjE,MACDA,MAhZI,IAACnP,EAAGC,CAkZnB,EAwBJ,SAASgxE,GAA0B57B,EAAY27B,GAE3C,OAAOA,GADa37B,EAAWntB,KAAOmtB,EAAWntB,KAAK5a,OAAS,EAEnE,CAUA,IAAIwlE,GAAgB,CAChBvhE,GAAI,SACPwhE,SAAUvD,GACP,KAAAz2D,CAAOmI,EAAOqnD,EAAOt0D,GACjB,MAAMihC,EAASh0B,EAAMg0B,OAAS,IAAIs6B,GAAO,CACrC/rD,IAAKvC,EAAMuC,IACXxP,UACAiN,UAEJi+B,GAAQvc,UAAU1hB,EAAOg0B,EAAQjhC,GACjCkrC,GAAQC,OAAOl+B,EAAOg0B,EAC1B,EACA,IAAAxU,CAAMxf,GACFi+B,GAAQI,UAAUr+B,EAAOA,EAAMg0B,eACxBh0B,EAAMg0B,MACjB,EACA,YAAA8T,CAAc9nC,EAAOqnD,EAAOt0D,GACxB,MAAMihC,EAASh0B,EAAMg0B,OACrBiK,GAAQvc,UAAU1hB,EAAOg0B,EAAQjhC,GACjCihC,EAAOjhC,QAAUA,CACrB,EACA,WAAAy3C,CAAaxqC,GACT,MAAMg0B,EAASh0B,EAAMg0B,OACrBA,EAAO86B,cACP96B,EAAOk8B,gBACX,EACA,UAAA4B,CAAY9xD,EAAOvO,GACVA,EAAKmsD,QACN59C,EAAMg0B,OAAOu9B,YAAY9/D,EAAKwmB,MAEtC,EACA1T,SAAU,CACNsB,SAAS,EACT20B,SAAU,MACVrgC,MAAO,SACPwjC,UAAU,EACV7rC,SAAS,EACThD,OAAQ,IACR,OAAAmU,CAAS/jB,EAAGi1C,EAAYH,GACpB,MAAM1hC,EAAQ6hC,EAAW9hC,aACnB0/D,EAAK/9B,EAAOh0B,MACd+xD,EAAGp9B,iBAAiBriC,IACpBy/D,EAAGzsD,KAAKhT,GACR6hC,EAAWpK,QAAS,IAEpBgoC,EAAG5sD,KAAK7S,GACR6hC,EAAWpK,QAAS,EAE5B,EACA/mB,QAAS,KACTwuD,QAAS,KACTtoC,OAAQ,CACJr6B,MAAQ0T,GAAMA,EAAIvC,MAAMjN,QAAQlE,MAChCq/D,SAAU,GACV1oD,QAAS,GACT,cAAAyuB,CAAgBj0B,GACZ,MAAM0B,EAAW1B,EAAMgI,KAAKtG,UACpBwnB,QAAQ,cAAEilC,EAAc,WAAElkD,EAAW,UAAEsD,EAAU,MAAE1e,EAAM,gBAAEmjE,EAAgB,aAAE3S,IAAqBr/C,EAAMg0B,OAAOjhC,QACvH,OAAOiN,EAAM8iB,yBAAyBriC,IAAK6Z,IACvC,MAAM6H,EAAQ7H,EAAK0pB,WAAWhK,SAASm0C,EAAgB,OAAI5/D,GACrDyc,EAAcgE,GAAU7M,EAAM6I,aACpC,MAAO,CACHhE,KAAMtF,EAASpH,EAAKhI,OAAOk4B,MAC3B3d,UAAW1K,EAAMX,gBACjB0yB,UAAWrlC,EACXk7B,QAASzvB,EAAK+K,QACd68C,QAAS//C,EAAMsa,eACfi0C,SAAUvuD,EAAMua,WAChBuzB,eAAgB9tC,EAAMwa,iBACtB+kC,SAAUv/C,EAAMya,gBAChBxW,WAAY4E,EAAYlE,MAAQkE,EAAYvB,QAAU,EACtDmD,YAAazK,EAAMV,YACnBwI,WAAYA,GAAc9H,EAAM8H,WAChCC,SAAU/H,EAAM+H,SAChBqD,UAAWA,GAAapL,EAAMoL,UAC9B8xC,aAAc2S,IAAoB3S,GAAgBl9C,EAAMk9C,cACxDhtD,aAAciI,EAAKhI,QAExBrE,KACP,GAEJ8Y,MAAO,CACHlY,MAAQ0T,GAAMA,EAAIvC,MAAMjN,QAAQlE,MAChCgX,SAAS,EACT20B,SAAU,SACVxzB,KAAM,KAGdjG,YAAa,CACTyD,YAAcZ,IAAQA,EAAKa,WAAW,MACtCykB,OAAQ,CACJ1kB,YAAcZ,IAAQ,CACd,iBACA,SACA,QACFhD,SAASgD,MAK3B,MAAMquD,WAActtB,GACnB,WAAA13C,CAAYs0B,GACL4O,QACAliC,KAAK+R,MAAQuhB,EAAOvhB,MACpB/R,KAAK8E,QAAUwuB,EAAOxuB,QACtB9E,KAAKsU,IAAMgf,EAAOhf,IAClBtU,KAAKikE,cAAW3jE,EAChBN,KAAKwX,SAAMlX,EACXN,KAAK0X,YAASpX,EACdN,KAAK2X,UAAOrX,EACZN,KAAKyX,WAAQnX,EACbN,KAAK6Y,WAAQvY,EACbN,KAAKwb,YAASlb,EACdN,KAAKusC,cAAWjsC,EAChBN,KAAKa,YAASP,EACdN,KAAK0vC,cAAWpvC,CACpB,CACA,MAAAsyB,CAAOjT,EAAUqoB,GACb,MAAM9pB,EAAOle,KAAK8E,QAGlB,GAFA9E,KAAK2X,KAAO,EACZ3X,KAAKwX,IAAM,GACN0G,EAAKtG,QAEN,YADA5X,KAAK6Y,MAAQ7Y,KAAKwb,OAASxb,KAAKyX,MAAQzX,KAAK0X,OAAS,GAG1D1X,KAAK6Y,MAAQ7Y,KAAKyX,MAAQkI,EAC1B3f,KAAKwb,OAASxb,KAAK0X,OAASswB,EAC5B,MAAMoZ,EAAY7uD,EAAQ2rB,EAAKnF,MAAQmF,EAAKnF,KAAK5a,OAAS,EAC1D6B,KAAKikE,SAAWljD,GAAU7C,EAAK3G,SAC/B,MAAM2sD,EAAW9iB,EAAYpgC,GAAO9C,EAAKlK,MAAMG,WAAanU,KAAKikE,SAASzoD,OACtExb,KAAKqiC,eACLriC,KAAKwb,OAAS0oD,EAEdlkE,KAAK6Y,MAAQqrD,CAErB,CACA,YAAA7hC,GACI,MAAMvY,EAAM9pB,KAAK8E,QAAQynC,SACzB,MAAe,QAARziB,GAAyB,WAARA,CAC5B,CACA,SAAAq6C,CAAUtsD,GACN,MAAM,IAAEL,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,QAAE3S,GAAa9E,KAC7CkM,EAAQpH,EAAQoH,MACtB,IACIyT,EAAU2iC,EAAQC,EADlBtmC,EAAW,EAkBf,OAhBIjc,KAAKqiC,gBACLigB,EAASn2C,GAAeD,EAAOyL,EAAMF,GACrC8qC,EAAS/qC,EAAMK,EACf8H,EAAWlI,EAAQE,IAEM,SAArB7S,EAAQynC,UACR+V,EAAS3qC,EAAOE,EAChB0qC,EAASp2C,GAAeD,EAAOwL,EAAQF,GACvCyE,GAAiB,GAANtV,KAEX27C,EAAS7qC,EAAQI,EACjB0qC,EAASp2C,GAAeD,EAAOsL,EAAKE,GACpCuE,EAAgB,GAALtV,IAEfgZ,EAAWjI,EAASF,GAEjB,CACH8qC,SACAC,SACA5iC,WACA1D,WAER,CACA,IAAAuU,GACI,MAAMlc,EAAMtU,KAAKsU,IACX4J,EAAOle,KAAK8E,QAClB,IAAKoZ,EAAKtG,QACN,OAEJ,MAAMwsD,EAAWpjD,GAAO9C,EAAKlK,MAEvB6D,EADausD,EAASjwD,WACA,EAAInU,KAAKikE,SAASzsD,KACxC,OAAE8qC,EAAO,OAAEC,EAAO,SAAE5iC,EAAS,SAAE1D,GAAcjc,KAAKmkE,UAAUtsD,GAClEoH,GAAW3K,EAAK4J,EAAKnF,KAAM,EAAG,EAAGqrD,EAAU,CACvCxjE,MAAOsd,EAAKtd,MACZ+e,WACA1D,WACAqD,UAAWrT,GAAmBiS,EAAKhS,OACnCqT,aAAc,SACdF,YAAa,CACTijC,EACAC,IAGZ,EAYJ,IAAI8hB,GAAe,CACfjiE,GAAI,QACPwhE,SAAUI,GACP,KAAAp6D,CAAOmI,EAAOqnD,EAAOt0D,IAbzB,SAAqBiN,EAAO2rC,GACxB,MAAM5kC,EAAQ,IAAIkrD,GAAM,CACpB1vD,IAAKvC,EAAMuC,IACXxP,QAAS44C,EACT3rC,UAEJi+B,GAAQvc,UAAU1hB,EAAO+G,EAAO4kC,GAChC1N,GAAQC,OAAOl+B,EAAO+G,GACtB/G,EAAMuyD,WAAaxrD,CACvB,CAKQyrD,CAAYxyD,EAAOjN,EACvB,EACA,IAAAysB,CAAMxf,GACF,MAAMuyD,EAAavyD,EAAMuyD,WACzBt0B,GAAQI,UAAUr+B,EAAOuyD,UAClBvyD,EAAMuyD,UACjB,EACA,YAAAzqB,CAAc9nC,EAAOqnD,EAAOt0D,GACxB,MAAMgU,EAAQ/G,EAAMuyD,WACpBt0B,GAAQvc,UAAU1hB,EAAO+G,EAAOhU,GAChCgU,EAAMhU,QAAUA,CACpB,EACAwR,SAAU,CACNpK,MAAO,SACP0L,SAAS,EACT5D,KAAM,CACFnT,OAAQ,QAEZ6uC,UAAU,EACVn4B,QAAS,GACTg1B,SAAU,MACVxzB,KAAM,GACNlY,OAAQ,KAEZwiD,cAAe,CACXziD,MAAO,SAEXkS,YAAa,CACTyD,aAAa,EACbE,YAAY,IAIpB,MAAM,GAAM,IAAI+tD,QAChB,IAAIC,GAAkB,CAClBriE,GAAI,WACJ,KAAAwH,CAAOmI,EAAOqnD,EAAOt0D,GACjB,MAAMgU,EAAQ,IAAIkrD,GAAM,CACpB1vD,IAAKvC,EAAMuC,IACXxP,UACAiN,UAEJi+B,GAAQvc,UAAU1hB,EAAO+G,EAAOhU,GAChCkrC,GAAQC,OAAOl+B,EAAO+G,GACtB,GAAIrN,IAAIsG,EAAO+G,EACnB,EACA,IAAAyY,CAAMxf,GACFi+B,GAAQI,UAAUr+B,EAAO,GAAIV,IAAIU,IACjC,GAAIuS,OAAOvS,EACf,EACA,YAAA8nC,CAAc9nC,EAAOqnD,EAAOt0D,GACxB,MAAMgU,EAAQ,GAAIzH,IAAIU,GACtBi+B,GAAQvc,UAAU1hB,EAAO+G,EAAOhU,GAChCgU,EAAMhU,QAAUA,CACpB,EACAwR,SAAU,CACNpK,MAAO,SACP0L,SAAS,EACT5D,KAAM,CACFnT,OAAQ,UAEZ6uC,UAAU,EACVn4B,QAAS,EACTg1B,SAAU,MACVxzB,KAAM,GACNlY,OAAQ,MAEZwiD,cAAe,CACXziD,MAAO,SAEXkS,YAAa,CACTyD,aAAa,EACbE,YAAY,IAIpB,MAAMiuD,GAAc,CACnB,OAAAC,CAASn5D,GACF,IAAKA,EAAMrN,OACP,OAAO,EAEX,IAAInM,EAAGmN,EACHylE,EAAO,IAAIl5D,IACXhG,EAAI,EACJ+G,EAAQ,EACZ,IAAIza,EAAI,EAAGmN,EAAMqM,EAAMrN,OAAQnM,EAAImN,IAAOnN,EAAE,CACxC,MAAM65B,EAAKrgB,EAAMxZ,GAAGs3B,QACpB,GAAIuC,GAAMA,EAAG+qB,WAAY,CACrB,MAAM9sB,EAAM+B,EAAG8qB,kBACfiuB,EAAKvgD,IAAIyF,EAAIn3B,GACb+S,GAAKokB,EAAIpkB,IACP+G,CACN,CACJ,CACA,OAAc,IAAVA,GAA6B,IAAdm4D,EAAKp+D,MAMjB,CACH7T,EAJa,IACViyE,GACLzzC,OAAO,CAACtgC,EAAGC,IAAID,EAAIC,GAAK8zE,EAAKp+D,KAG3Bd,EAAGA,EAAI+G,EAEf,EACH,OAAAshC,CAASviC,EAAOq5D,GACT,IAAKr5D,EAAMrN,OACP,OAAO,EAEX,IAGInM,EAAGmN,EAAK2lE,EAHRnyE,EAAIkyE,EAAclyE,EAClB+S,EAAIm/D,EAAcn/D,EAClB2nC,EAAcxqC,OAAOkE,kBAEzB,IAAI/U,EAAI,EAAGmN,EAAMqM,EAAMrN,OAAQnM,EAAImN,IAAOnN,EAAE,CACxC,MAAM65B,EAAKrgB,EAAMxZ,GAAGs3B,QACpB,GAAIuC,GAAMA,EAAG+qB,WAAY,CACrB,MACM5lD,EAAIsY,GAAsBu7D,EADjBh5C,EAAGyhB,kBAEdt8C,EAAIq8C,IACJA,EAAcr8C,EACd8zE,EAAiBj5C,EAEzB,CACJ,CACA,GAAIi5C,EAAgB,CAChB,MAAMC,EAAKD,EAAenuB,kBAC1BhkD,EAAIoyE,EAAGpyE,EACP+S,EAAIq/D,EAAGr/D,CACX,CACA,MAAO,CACH/S,IACA+S,IAER,GAEJ,SAASs/D,GAAa/qC,EAAMgrC,GAQxB,OAPIA,IACI1yE,EAAQ0yE,GACR3yE,MAAMiQ,UAAUyD,KAAKtC,MAAMu2B,EAAMgrC,GAEjChrC,EAAKj0B,KAAKi/D,IAGXhrC,CACX,CACC,SAASirC,GAAc7mE,GACpB,OAAoB,iBAARA,GAAoBA,aAAe8mE,SAAW9mE,EAAIuG,QAAQ,OAAS,EACpEvG,EAAIyH,MAAM,MAEdzH,CACX,CACC,SAAS+mE,GAAkBrzD,EAAOtL,GAC/B,MAAM,QAAE6iB,EAAQ,aAAEllB,EAAa,MAAEC,GAAWoC,EACtCsvB,EAAahkB,EAAMsnB,eAAej1B,GAAc2xB,YAChD,MAAEwG,EAAM,MAAEj6B,GAAWyzB,EAAWuG,iBAAiBj4B,GACvD,MAAO,CACH0N,QACAwqB,QACAzW,OAAQiQ,EAAWuF,UAAUj3B,GAC7By4B,IAAK/qB,EAAMgI,KAAKtG,SAASrP,GAAc2V,KAAK1V,GAC5CghE,eAAgB/iE,EAChByK,QAASgpB,EAAWwC,aACpBsE,UAAWx4B,EACXD,eACAklB,UAER,CACC,SAASg8C,GAAeC,EAASzgE,GAC9B,MAAMwP,EAAMixD,EAAQxzD,MAAMuC,KACpB,KAAEkxD,EAAK,OAAEC,EAAO,MAAE3sD,GAAWysD,GAC7B,SAAEtF,EAAS,UAAED,GAAel7D,EAC5B4gE,EAAW1kD,GAAOlc,EAAQ4gE,UAC1B1C,EAAYhiD,GAAOlc,EAAQk+D,WAC3B2C,EAAa3kD,GAAOlc,EAAQ6gE,YAC5BC,EAAiB9sD,EAAM3a,OACvB0nE,EAAkBJ,EAAOtnE,OACzB2nE,EAAoBN,EAAKrnE,OACzBoZ,EAAUwJ,GAAUjc,EAAQyS,SAClC,IAAIiE,EAASjE,EAAQiE,OACjB3C,EAAQ,EACRktD,EAAqBP,EAAKr0C,OAAO,CAAC1kB,EAAOu5D,IAAWv5D,EAAQu5D,EAASC,OAAO9nE,OAAS6nE,EAAS9mD,MAAM/gB,OAAS6nE,EAASE,MAAM/nE,OAAQ,GACxI4nE,GAAsBR,EAAQY,WAAWhoE,OAASonE,EAAQa,UAAUjoE,OAChEynE,IACApqD,GAAUoqD,EAAiB5C,EAAU7uD,YAAcyxD,EAAiB,GAAK9gE,EAAQuhE,aAAevhE,EAAQwhE,mBAExGP,IAEAvqD,GAAUsqD,GADahhE,EAAQyhE,cAAgBx2E,KAAKC,IAAIgwE,EAAW0F,EAASvxD,YAAcuxD,EAASvxD,aACnD4xD,EAAqBD,GAAqBJ,EAASvxD,YAAc4xD,EAAqB,GAAKjhE,EAAQ0hE,aAEnJX,IACArqD,GAAU1W,EAAQ2hE,gBAAkBZ,EAAkBF,EAAWxxD,YAAc0xD,EAAkB,GAAK/gE,EAAQ4hE,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS3oD,GAC1BpF,EAAQ9oB,KAAKC,IAAI6oB,EAAOvE,EAAI8F,YAAY6D,GAAMpF,MAAQ8tD,EAC1D,EAiBA,OAhBAryD,EAAImG,OACJnG,EAAIN,KAAOgvD,EAAU9oD,OACrBvW,EAAK4hE,EAAQzsD,MAAO8tD,GACpBtyD,EAAIN,KAAO0xD,EAASxrD,OACpBvW,EAAK4hE,EAAQY,WAAWrmC,OAAOylC,EAAQa,WAAYQ,GACnDD,EAAe7hE,EAAQyhE,cAAgBtG,EAAW,EAAIn7D,EAAQypC,WAAa,EAC3E5qC,EAAK6hE,EAAOQ,IACRriE,EAAKqiE,EAASC,OAAQW,GACtBjjE,EAAKqiE,EAAS9mD,MAAO0nD,GACrBjjE,EAAKqiE,EAASE,MAAOU,KAEzBD,EAAe,EACfryD,EAAIN,KAAO2xD,EAAWzrD,OACtBvW,EAAK4hE,EAAQE,OAAQmB,GACrBtyD,EAAIuG,UACJhC,GAAStB,EAAQsB,MACV,CACHA,QACA2C,SAER,CAoBA,SAASqrD,GAAgB90D,EAAOjN,EAAS0B,EAAMsgE,GAC3C,MAAM,EAAEn0E,EAAE,MAAEkmB,GAAWrS,GACfqS,MAAOkuD,EAAa/3C,WAAW,KAAErX,EAAK,MAAEF,IAAc1F,EAC9D,IAAIi1D,EAAS,SAWb,MAVe,WAAXF,EACAE,EAASr0E,IAAMglB,EAAOF,GAAS,EAAI,OAAS,QACrC9kB,GAAKkmB,EAAQ,EACpBmuD,EAAS,OACFr0E,GAAKo0E,EAAaluD,EAAQ,IACjCmuD,EAAS,SAnBjB,SAA6BA,EAAQj1D,EAAOjN,EAAS0B,GACjD,MAAM,EAAE7T,EAAE,MAAEkmB,GAAWrS,EACjBygE,EAAQniE,EAAQoiE,UAAYpiE,EAAQqiE,aAC1C,MAAe,SAAXH,GAAqBr0E,EAAIkmB,EAAQouD,EAAQl1D,EAAM8G,OAGpC,UAAXmuD,GAAsBr0E,EAAIkmB,EAAQouD,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQj1D,EAAOjN,EAAS0B,KAC5CwgE,EAAS,UAENA,CACX,CACC,SAASK,GAAmBt1D,EAAOjN,EAAS0B,GACzC,MAAMsgE,EAAStgE,EAAKsgE,QAAUhiE,EAAQgiE,QApC1C,SAAyB/0D,EAAOvL,GAC5B,MAAM,EAAEd,EAAE,OAAE8V,GAAYhV,EACxB,OAAId,EAAI8V,EAAS,EACN,MACA9V,EAAIqM,EAAMyJ,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoD8rD,CAAgBv1D,EAAOvL,GACvE,MAAO,CACHwgE,OAAQxgE,EAAKwgE,QAAUliE,EAAQkiE,QAAUH,GAAgB90D,EAAOjN,EAAS0B,EAAMsgE,GAC/EA,SAER,CAqBC,SAASS,GAAmBziE,EAAS0B,EAAMghE,EAAWz1D,GACnD,MAAM,UAAEm1D,EAAU,aAAEC,EAAa,aAAEtrD,GAAkB/W,GAC/C,OAAEkiE,EAAO,OAAEF,GAAYU,EACvBC,EAAiBP,EAAYC,GAC7B,QAAErnD,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAcjF,GACzE,IAAIlpB,EAzBR,SAAgB6T,EAAMwgE,GAClB,IAAI,EAAEr0E,EAAE,MAAEkmB,GAAWrS,EAMrB,MALe,UAAXwgE,EACAr0E,GAAKkmB,EACa,WAAXmuD,IACPr0E,GAAKkmB,EAAQ,GAEVlmB,CACX,CAiBY+0E,CAAOlhE,EAAMwgE,GACrB,MAAMthE,EAjBV,SAAgBc,EAAMsgE,EAAQW,GAC1B,IAAI,EAAE/hE,EAAE,OAAE8V,GAAYhV,EAQtB,MAPe,QAAXsgE,EACAphE,GAAK+hE,EAEL/hE,GADkB,WAAXohE,EACFtrD,EAASisD,EAETjsD,EAAS,EAEX9V,CACX,CAOciiE,CAAOnhE,EAAMsgE,EAAQW,GAY/B,MAXe,WAAXX,EACe,SAAXE,EACAr0E,GAAK80E,EACa,UAAXT,IACPr0E,GAAK80E,GAES,SAAXT,EACPr0E,GAAK5C,KAAKC,IAAI8vB,EAASC,GAAcmnD,EACnB,UAAXF,IACPr0E,GAAK5C,KAAKC,IAAIiwB,EAAUD,GAAeknD,GAEpC,CACHv0E,EAAGwX,GAAYxX,EAAG,EAAGof,EAAM8G,MAAQrS,EAAKqS,OACxCnT,EAAGyE,GAAYzE,EAAG,EAAGqM,EAAMyJ,OAAShV,EAAKgV,QAEjD,CACA,SAASosD,GAAYrC,EAASr5D,EAAOpH,GACjC,MAAMyS,EAAUwJ,GAAUjc,EAAQyS,SAClC,MAAiB,WAAVrL,EAAqBq5D,EAAQ5yE,EAAI4yE,EAAQ1sD,MAAQ,EAAc,UAAV3M,EAAoBq5D,EAAQ5yE,EAAI4yE,EAAQ1sD,MAAQtB,EAAQE,MAAQ8tD,EAAQ5yE,EAAI4kB,EAAQI,IACpJ,CACC,SAASkwD,GAAwBvkE,GAC9B,OAAO0hE,GAAa,GAAIE,GAAc5hE,GAC1C,CAQA,SAASwkE,GAAkBh4C,EAAWnc,GAClC,MAAM8B,EAAW9B,GAAWA,EAAQ5G,SAAW4G,EAAQ5G,QAAQw4D,SAAW5xD,EAAQ5G,QAAQw4D,QAAQz1C,UAClG,OAAOra,EAAWqa,EAAUra,SAASA,GAAYqa,CACrD,CACA,MAAMi4C,GAAmB,CACrBC,YAAa9lE,EACb,KAAA4W,CAAOmvD,GACH,GAAIA,EAAa9pE,OAAS,EAAG,CACzB,MAAMsI,EAAOwhE,EAAa,GACpBhtC,EAASx0B,EAAKsL,MAAMgI,KAAKkhB,OACzBitC,EAAajtC,EAASA,EAAO98B,OAAS,EAC5C,GAAI6B,MAAQA,KAAK8E,SAAiC,YAAtB9E,KAAK8E,QAAQ6P,KACrC,OAAOlO,EAAKsG,QAAQwvB,OAAS,GAC1B,GAAI91B,EAAK81B,MACZ,OAAO91B,EAAK81B,MACT,GAAI2rC,EAAa,GAAKzhE,EAAKo2B,UAAYqrC,EAC1C,OAAOjtC,EAAOx0B,EAAKo2B,UAE3B,CACA,MAAO,EACX,EACAsrC,WAAYjmE,EACZikE,WAAYjkE,EACZkmE,YAAalmE,EACb,KAAAq6B,CAAO8rC,GACH,GAAIroE,MAAQA,KAAK8E,SAAiC,YAAtB9E,KAAK8E,QAAQ6P,KACrC,OAAO0zD,EAAY9rC,MAAQ,KAAO8rC,EAAYhD,gBAAkBgD,EAAYhD,eAEhF,IAAI9oC,EAAQ8rC,EAAYt7D,QAAQwvB,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAMj6B,EAAQ+lE,EAAYhD,eAI1B,OAHKhjE,EAAcC,KACfi6B,GAASj6B,GAENi6B,CACX,EACA,UAAA+rC,CAAYD,GACR,MACMvjE,EADOujE,EAAYt2D,MAAMsnB,eAAegvC,EAAYjkE,cACrC2xB,WAAWhK,SAASs8C,EAAYxrC,WACrD,MAAO,CACHrpB,YAAa1O,EAAQ0O,YACrBD,gBAAiBzO,EAAQyO,gBACzBwJ,YAAajY,EAAQiY,YACrB0R,WAAY3pB,EAAQ2pB,WACpBC,iBAAkB5pB,EAAQ4pB,iBAC1B0iC,aAAc,EAEtB,EACA,cAAAmX,GACI,OAAOvoE,KAAK8E,QAAQ0jE,SACxB,EACA,eAAAC,CAAiBJ,GACb,MACMvjE,EADOujE,EAAYt2D,MAAMsnB,eAAegvC,EAAYjkE,cACrC2xB,WAAWhK,SAASs8C,EAAYxrC,WACrD,MAAO,CACH7gB,WAAYlX,EAAQkX,WACpBC,SAAUnX,EAAQmX,SAE1B,EACAysD,WAAYxmE,EACZkkE,UAAWlkE,EACXymE,aAAczmE,EACdujE,OAAQvjE,EACR0mE,YAAa1mE,GAEhB,SAAS2mE,GAA2B/4C,EAAWna,EAAMrB,EAAKswC,GACvD,MAAM/6B,EAASiG,EAAUna,GAAMlT,KAAK6R,EAAKswC,GACzC,YAAsB,IAAX/6B,EACAk+C,GAAiBpyD,GAAMlT,KAAK6R,EAAKswC,GAErC/6B,CACX,CACA,MAAMi/C,WAAgBpyB,GACrBxf,mBAAqBwtC,GAClB,WAAA1lE,CAAYs0B,GACR4O,QACAliC,KAAK+oE,QAAU,EACf/oE,KAAKywB,QAAU,GACfzwB,KAAKgpE,oBAAiB1oE,EACtBN,KAAKipE,WAAQ3oE,EACbN,KAAKkpE,uBAAoB5oE,EACzBN,KAAKmpE,cAAgB,GACrBnpE,KAAKi0B,iBAAc3zB,EACnBN,KAAK63B,cAAWv3B,EAChBN,KAAK+R,MAAQuhB,EAAOvhB,MACpB/R,KAAK8E,QAAUwuB,EAAOxuB,QACtB9E,KAAKopE,gBAAa9oE,EAClBN,KAAK8Y,WAAQxY,EACbN,KAAKmmE,gBAAa7lE,EAClBN,KAAKwlE,UAAOllE,EACZN,KAAKomE,eAAY9lE,EACjBN,KAAKylE,YAASnlE,EACdN,KAAKgnE,YAAS1mE,EACdN,KAAK8mE,YAASxmE,EACdN,KAAKrN,OAAI2N,EACTN,KAAK0F,OAAIpF,EACTN,KAAKwb,YAASlb,EACdN,KAAK6Y,WAAQvY,EACbN,KAAKqpE,YAAS/oE,EACdN,KAAKspE,YAAShpE,EACdN,KAAKupE,iBAAcjpE,EACnBN,KAAKwpE,sBAAmBlpE,EACxBN,KAAKypE,qBAAkBnpE,CAC3B,CACA,UAAA23B,CAAWnzB,GACP9E,KAAK8E,QAAUA,EACf9E,KAAKkpE,uBAAoB5oE,EACzBN,KAAK63B,cAAWv3B,CACpB,CACH,kBAAAi9B,GACO,MAAMxG,EAAS/2B,KAAKkpE,kBACpB,GAAInyC,EACA,OAAOA,EAEX,MAAMhlB,EAAQ/R,KAAK+R,MACbjN,EAAU9E,KAAK8E,QAAQif,WAAW/jB,KAAKqb,cACvC6C,EAAOpZ,EAAQ02C,SAAWzpC,EAAMjN,QAAQwO,WAAaxO,EAAQqS,WAC7DA,EAAa,IAAIkc,GAAWrzB,KAAK+R,MAAOmM,GAI9C,OAHIA,EAAKiE,aACLniB,KAAKkpE,kBAAoBnrE,OAAOu/B,OAAOnmB,IAEpCA,CACX,CACH,UAAAkE,GACO,OAAOrb,KAAK63B,WAAa73B,KAAK63B,SApI3BpW,GAoI2DzhB,KAAK+R,MAAMsJ,aApIhD,CACzBkqD,QAmIuFvlE,KAlIvFioE,aAkI6FjoE,KAAKmpE,cAjIlGlqE,KAAM,YAkIV,CACA,QAAAyqE,CAAS/1D,EAAS7O,GACd,MAAM,UAAEgrB,GAAehrB,EACjBkjE,EAAca,GAA2B/4C,EAAW,cAAe9vB,KAAM2T,GACzEmF,EAAQ+vD,GAA2B/4C,EAAW,QAAS9vB,KAAM2T,GAC7Dw0D,EAAaU,GAA2B/4C,EAAW,aAAc9vB,KAAM2T,GAC7E,IAAIuL,EAAQ,GAIZ,OAHAA,EAAQ8lD,GAAa9lD,EAAOgmD,GAAc8C,IAC1C9oD,EAAQ8lD,GAAa9lD,EAAOgmD,GAAcpsD,IAC1CoG,EAAQ8lD,GAAa9lD,EAAOgmD,GAAciD,IACnCjpD,CACX,CACA,aAAAyqD,CAAc1B,EAAcnjE,GACxB,OAAO+iE,GAAwBgB,GAA2B/jE,EAAQgrB,UAAW,aAAc9vB,KAAMioE,GACrG,CACA,OAAA2B,CAAQ3B,EAAcnjE,GAClB,MAAM,UAAEgrB,GAAehrB,EACjB+kE,EAAY,GAalB,OAZAlmE,EAAKskE,EAAet0D,IAChB,MAAMqyD,EAAW,CACbC,OAAQ,GACR/mD,MAAO,GACPgnD,MAAO,IAEL4D,EAAShC,GAAkBh4C,EAAWnc,GAC5CqxD,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAe9pE,KAAM2T,KACpGqxD,GAAagB,EAAS9mD,MAAO2pD,GAA2BiB,EAAQ,QAAS9pE,KAAM2T,IAC/EqxD,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAc9pE,KAAM2T,KAClGk2D,EAAU7jE,KAAKggE,KAEZ6D,CACX,CACA,YAAAE,CAAa9B,EAAcnjE,GACvB,OAAO+iE,GAAwBgB,GAA2B/jE,EAAQgrB,UAAW,YAAa9vB,KAAMioE,GACpG,CACA,SAAA+B,CAAU/B,EAAcnjE,GACpB,MAAM,UAAEgrB,GAAehrB,EACjB6jE,EAAeE,GAA2B/4C,EAAW,eAAgB9vB,KAAMioE,GAC3ExC,EAASoD,GAA2B/4C,EAAW,SAAU9vB,KAAMioE,GAC/DW,EAAcC,GAA2B/4C,EAAW,cAAe9vB,KAAMioE,GAC/E,IAAI/oD,EAAQ,GAIZ,OAHAA,EAAQ8lD,GAAa9lD,EAAOgmD,GAAcyD,IAC1CzpD,EAAQ8lD,GAAa9lD,EAAOgmD,GAAcO,IAC1CvmD,EAAQ8lD,GAAa9lD,EAAOgmD,GAAc0D,IACnC1pD,CACX,CACH,YAAA+qD,CAAanlE,GACN,MAAMkS,EAAShX,KAAKywB,QACd1W,EAAO/Z,KAAK+R,MAAMgI,KAClBwvD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIz3E,EAAGmN,EADH8oE,EAAe,GAEnB,IAAIj2E,EAAI,EAAGmN,EAAM6X,EAAO7Y,OAAQnM,EAAImN,IAAOnN,EACvCi2E,EAAajiE,KAAKo/D,GAAkBplE,KAAK+R,MAAOiF,EAAOhlB,KAkB3D,OAhBI8S,EAAQ4f,SACRujD,EAAeA,EAAavjD,OAAO,CAAC4E,EAASjlB,EAAOgE,IAAQvD,EAAQ4f,OAAO4E,EAASjlB,EAAOgE,EAAO0R,KAElGjV,EAAQolE,WACRjC,EAAeA,EAAaloC,KAAK,CAAClvC,EAAGC,IAAIgU,EAAQolE,SAASr5E,EAAGC,EAAGipB,KAEpEpW,EAAKskE,EAAet0D,IAChB,MAAMm2D,EAAShC,GAAkBhjE,EAAQgrB,UAAWnc,GACpD41D,EAAYvjE,KAAK6iE,GAA2BiB,EAAQ,aAAc9pE,KAAM2T,IACxE61D,EAAiBxjE,KAAK6iE,GAA2BiB,EAAQ,kBAAmB9pE,KAAM2T,IAClF81D,EAAgBzjE,KAAK6iE,GAA2BiB,EAAQ,iBAAkB9pE,KAAM2T,MAEpF3T,KAAKupE,YAAcA,EACnBvpE,KAAKwpE,iBAAmBA,EACxBxpE,KAAKypE,gBAAkBA,EACvBzpE,KAAKopE,WAAanB,EACXA,CACX,CACA,MAAAr1C,CAAO1kB,EAASyhD,GACZ,MAAM7qD,EAAU9E,KAAK8E,QAAQif,WAAW/jB,KAAKqb,cACvCrE,EAAShX,KAAKywB,QACpB,IAAI1Z,EACAkxD,EAAe,GACnB,GAAKjxD,EAAO7Y,OAML,CACH,MAAMouC,EAAWm4B,GAAY5/D,EAAQynC,UAAU9pC,KAAKzC,KAAMgX,EAAQhX,KAAKgpE,gBACvEf,EAAejoE,KAAKiqE,aAAanlE,GACjC9E,KAAK8Y,MAAQ9Y,KAAK0pE,SAASzB,EAAcnjE,GACzC9E,KAAKmmE,WAAanmE,KAAK2pE,cAAc1B,EAAcnjE,GACnD9E,KAAKwlE,KAAOxlE,KAAK4pE,QAAQ3B,EAAcnjE,GACvC9E,KAAKomE,UAAYpmE,KAAK+pE,aAAa9B,EAAcnjE,GACjD9E,KAAKylE,OAASzlE,KAAKgqE,UAAU/B,EAAcnjE,GAC3C,MAAM0B,EAAOxG,KAAKipE,MAAQ3D,GAAetlE,KAAM8E,GACzCqlE,EAAkBpsE,OAAOC,OAAO,CAAC,EAAGuuC,EAAU/lC,GAC9CghE,EAAYH,GAAmBrnE,KAAK+R,MAAOjN,EAASqlE,GACpDC,EAAkB7C,GAAmBziE,EAASqlE,EAAiB3C,EAAWxnE,KAAK+R,OACrF/R,KAAKgnE,OAASQ,EAAUR,OACxBhnE,KAAK8mE,OAASU,EAAUV,OACxB/vD,EAAa,CACTgyD,QAAS,EACTp2E,EAAGy3E,EAAgBz3E,EACnB+S,EAAG0kE,EAAgB1kE,EACnBmT,MAAOrS,EAAKqS,MACZ2C,OAAQhV,EAAKgV,OACb6tD,OAAQ98B,EAAS55C,EACjB22E,OAAQ/8B,EAAS7mC,EAEzB,MA5ByB,IAAjB1F,KAAK+oE,UACLhyD,EAAa,CACTgyD,QAAS,IA2BrB/oE,KAAKmpE,cAAgBlB,EACrBjoE,KAAK63B,cAAWv3B,EACZyW,GACA/W,KAAKu9B,qBAAqB3K,OAAO5yB,KAAM+W,GAEvC7I,GAAWpJ,EAAQulE,UACnBvlE,EAAQulE,SAAS5nE,KAAKzC,KAAM,CACxB+R,MAAO/R,KAAK+R,MACZwzD,QAASvlE,KACT2vD,UAGZ,CACA,SAAA2a,CAAUC,EAAcj2D,EAAK9N,EAAM1B,GAC/B,MAAM0lE,EAAgBxqE,KAAKyqE,iBAAiBF,EAAc/jE,EAAM1B,GAChEwP,EAAIqI,OAAO6tD,EAAclqB,GAAIkqB,EAAcjqB,IAC3CjsC,EAAIqI,OAAO6tD,EAAchqB,GAAIgqB,EAAc/pB,IAC3CnsC,EAAIqI,OAAO6tD,EAAcE,GAAIF,EAAcG,GAC/C,CACA,gBAAAF,CAAiBF,EAAc/jE,EAAM1B,GACjC,MAAM,OAAEkiE,EAAO,OAAEF,GAAY9mE,MACvB,UAAEknE,EAAU,aAAErrD,GAAkB/W,GAChC,QAAEgb,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAcjF,IACjElpB,EAAGi4E,EAAMllE,EAAGmlE,GAASN,GACvB,MAAE1xD,EAAM,OAAE2C,GAAYhV,EAC5B,IAAI85C,EAAIE,EAAIkqB,EAAInqB,EAAIE,EAAIkqB,EAoCxB,MAnCe,WAAX7D,GACArmB,EAAKoqB,EAAMrvD,EAAS,EACL,SAAXwrD,GACA1mB,EAAKsqB,EACLpqB,EAAKF,EAAK4mB,EACV3mB,EAAKE,EAAKymB,EACVyD,EAAKlqB,EAAKymB,IAEV5mB,EAAKsqB,EAAM/xD,EACX2nC,EAAKF,EAAK4mB,EACV3mB,EAAKE,EAAKymB,EACVyD,EAAKlqB,EAAKymB,GAEdwD,EAAKpqB,IAGDE,EADW,SAAXwmB,EACK4D,EAAM76E,KAAKC,IAAI8vB,EAASC,GAAcmnD,EACzB,UAAXF,EACF4D,EAAM/xD,EAAQ9oB,KAAKC,IAAIiwB,EAAUD,GAAeknD,EAEhDlnE,KAAKqpE,OAEC,QAAXvC,GACAvmB,EAAKsqB,EACLpqB,EAAKF,EAAK2mB,EACV5mB,EAAKE,EAAK0mB,EACVwD,EAAKlqB,EAAK0mB,IAEV3mB,EAAKsqB,EAAMrvD,EACXilC,EAAKF,EAAK2mB,EACV5mB,EAAKE,EAAK0mB,EACVwD,EAAKlqB,EAAK0mB,GAEdyD,EAAKpqB,GAEF,CACHD,KACAE,KACAkqB,KACAnqB,KACAE,KACAkqB,KAER,CACA,SAAAtoB,CAAUr7B,EAAI1S,EAAKxP,GACf,MAAMgU,EAAQ9Y,KAAK8Y,MACb3a,EAAS2a,EAAM3a,OACrB,IAAI6kE,EAAWqD,EAAcr0E,EAC7B,GAAImM,EAAQ,CACR,MAAM+jE,EAAY71C,GAAcvnB,EAAQwnB,IAAKtsB,KAAKrN,EAAGqN,KAAK6Y,OAQ1D,IAPAmO,EAAGr0B,EAAIi1E,GAAY5nE,KAAM8E,EAAQizC,WAAYjzC,GAC7CwP,EAAIgL,UAAY4iD,EAAU5iD,UAAUxa,EAAQizC,YAC5CzjC,EAAIiL,aAAe,SACnByjD,EAAYhiD,GAAOlc,EAAQk+D,WAC3BqD,EAAevhE,EAAQuhE,aACvB/xD,EAAIsK,UAAY9Z,EAAQgmE,WACxBx2D,EAAIN,KAAOgvD,EAAU9oD,OACjBloB,EAAI,EAAGA,EAAImM,IAAUnM,EACrBsiB,EAAIsL,SAAS9G,EAAM9mB,GAAIkwE,EAAUvvE,EAAEq0B,EAAGr0B,GAAIq0B,EAAGthB,EAAIs9D,EAAU7uD,WAAa,GACxE6S,EAAGthB,GAAKs9D,EAAU7uD,WAAakyD,EAC3Br0E,EAAI,IAAMmM,IACV6oB,EAAGthB,GAAKZ,EAAQwhE,kBAAoBD,EAGhD,CACJ,CACH,aAAA0E,CAAcz2D,EAAK0S,EAAIh1B,EAAGkwE,EAAWp9D,GAC9B,MAAMwjE,EAAatoE,KAAKupE,YAAYv3E,GAC9By2E,EAAkBzoE,KAAKwpE,iBAAiBx3E,IACxC,UAAEguE,EAAU,SAAEC,GAAcn7D,EAC5B4gE,EAAW1kD,GAAOlc,EAAQ4gE,UAC1BsF,EAASpD,GAAY5nE,KAAM,OAAQ8E,GACnCmmE,EAAY/I,EAAUvvE,EAAEq4E,GACxBE,EAAUlL,EAAY0F,EAASvxD,YAAcuxD,EAASvxD,WAAa6rD,GAAa,EAAI,EACpFmL,EAASnkD,EAAGthB,EAAIwlE,EACtB,GAAIpmE,EAAQo7D,cAAe,CACvB,MAAMwC,EAAc,CAChBxmD,OAAQnsB,KAAKE,IAAIgwE,EAAUD,GAAa,EACxChkD,WAAYysD,EAAgBzsD,WAC5BC,SAAUwsD,EAAgBxsD,SAC1Bc,YAAa,GAEX2rB,EAAUw5B,EAAUx1C,WAAWu+C,EAAWhL,GAAYA,EAAW,EACjEt3B,EAAUwiC,EAASnL,EAAY,EACrC1rD,EAAIqK,YAAc7Z,EAAQsmE,mBAC1B92D,EAAIsK,UAAY9Z,EAAQsmE,mBACxB3vD,GAAUnH,EAAKouD,EAAah6B,EAASC,GACrCr0B,EAAIqK,YAAc2pD,EAAW90D,YAC7Bc,EAAIsK,UAAY0pD,EAAW/0D,gBAC3BkI,GAAUnH,EAAKouD,EAAah6B,EAASC,EACzC,KAAO,CACHr0B,EAAI6D,UAAYxV,EAAS2lE,EAAWvrD,aAAehtB,KAAKC,OAAO+N,OAAO4T,OAAO22D,EAAWvrD,cAAgBurD,EAAWvrD,aAAe,EAClIzI,EAAIqK,YAAc2pD,EAAW90D,YAC7Bc,EAAIytC,YAAYumB,EAAW75C,YAAc,IACzCna,EAAI0tC,eAAiBsmB,EAAW55C,kBAAoB,EACpD,MAAM28C,EAASnJ,EAAUx1C,WAAWu+C,EAAWhL,GACzCqL,EAASpJ,EAAUx1C,WAAWw1C,EAAUz1C,MAAMw+C,EAAW,GAAIhL,EAAW,GACxE7O,EAAetwC,GAAcwnD,EAAWlX,cAC1CrzD,OAAO4T,OAAOy/C,GAAchL,KAAMz2D,GAAU,IAANA,IACtC2kB,EAAIgI,YACJhI,EAAIsK,UAAY9Z,EAAQsmE,mBACxBvrD,GAAmBvL,EAAK,CACpB3hB,EAAG04E,EACH3lE,EAAGylE,EACHr5E,EAAGmuE,EACHnwE,EAAGkwE,EACH9jD,OAAQk1C,IAEZ98C,EAAIwI,OACJxI,EAAI0I,SACJ1I,EAAIsK,UAAY0pD,EAAW/0D,gBAC3Be,EAAIgI,YACJuD,GAAmBvL,EAAK,CACpB3hB,EAAG24E,EACH5lE,EAAGylE,EAAS,EACZr5E,EAAGmuE,EAAW,EACdnwE,EAAGkwE,EAAY,EACf9jD,OAAQk1C,IAEZ98C,EAAIwI,SAEJxI,EAAIsK,UAAY9Z,EAAQsmE,mBACxB92D,EAAI0K,SAASqsD,EAAQF,EAAQlL,EAAUD,GACvC1rD,EAAIi3D,WAAWF,EAAQF,EAAQlL,EAAUD,GACzC1rD,EAAIsK,UAAY0pD,EAAW/0D,gBAC3Be,EAAI0K,SAASssD,EAAQH,EAAS,EAAGlL,EAAW,EAAGD,EAAY,GAEnE,CACA1rD,EAAIsK,UAAY5e,KAAKypE,gBAAgBz3E,EACzC,CACA,QAAAw5E,CAASxkD,EAAI1S,EAAKxP,GACd,MAAM,KAAE0gE,GAAUxlE,MACZ,YAAEwmE,EAAY,UAAEiF,EAAU,cAAElF,EAAc,UAAEvG,EAAU,SAAEC,EAAS,WAAE1xB,GAAgBzpC,EACnF4gE,EAAW1kD,GAAOlc,EAAQ4gE,UAChC,IAAIgG,EAAiBhG,EAASvxD,WAC1Bw3D,EAAe,EACnB,MAAMzJ,EAAY71C,GAAcvnB,EAAQwnB,IAAKtsB,KAAKrN,EAAGqN,KAAK6Y,OACpD+yD,EAAiB,SAAS3tD,GAC5B3J,EAAIsL,SAAS3B,EAAMikD,EAAUvvE,EAAEq0B,EAAGr0B,EAAIg5E,GAAe3kD,EAAGthB,EAAIgmE,EAAiB,GAC7E1kD,EAAGthB,GAAKgmE,EAAiBlF,CAC7B,EACMqF,EAA0B3J,EAAU5iD,UAAUmsD,GACpD,IAAIzF,EAAU8F,EAAW5sD,EAAOltB,EAAGuN,EAAG0E,EAAMyW,EAQ5C,IAPApG,EAAIgL,UAAYmsD,EAChBn3D,EAAIiL,aAAe,SACnBjL,EAAIN,KAAO0xD,EAASxrD,OACpB8M,EAAGr0B,EAAIi1E,GAAY5nE,KAAM6rE,EAAyB/mE,GAClDwP,EAAIsK,UAAY9Z,EAAQ0jE,UACxB7kE,EAAK3D,KAAKmmE,WAAYyF,GACtBD,EAAepF,GAA6C,UAA5BsF,EAAoD,WAAdJ,EAAyBxL,EAAW,EAAI1xB,EAAa0xB,EAAW,EAAI1xB,EAAa,EACnJv8C,EAAI,EAAGiS,EAAOuhE,EAAKrnE,OAAQnM,EAAIiS,IAAQjS,EAAE,CAUzC,IATAg0E,EAAWR,EAAKxzE,GAChB85E,EAAY9rE,KAAKypE,gBAAgBz3E,GACjCsiB,EAAIsK,UAAYktD,EAChBnoE,EAAKqiE,EAASC,OAAQ2F,GACtB1sD,EAAQ8mD,EAAS9mD,MACbqnD,GAAiBrnD,EAAM/gB,SACvB6B,KAAK+qE,cAAcz2D,EAAK0S,EAAIh1B,EAAGkwE,EAAWp9D,GAC1C4mE,EAAiB37E,KAAKC,IAAI01E,EAASvxD,WAAY6rD,IAE/CzgE,EAAI,EAAGmb,EAAOwE,EAAM/gB,OAAQoB,EAAImb,IAAQnb,EACxCqsE,EAAe1sD,EAAM3f,IACrBmsE,EAAiBhG,EAASvxD,WAE9BxQ,EAAKqiE,EAASE,MAAO0F,EACzB,CACAD,EAAe,EACfD,EAAiBhG,EAASvxD,WAC1BxQ,EAAK3D,KAAKomE,UAAWwF,GACrB5kD,EAAGthB,GAAK8gE,CACZ,CACA,UAAAuF,CAAW/kD,EAAI1S,EAAKxP,GAChB,MAAM2gE,EAASzlE,KAAKylE,OACdtnE,EAASsnE,EAAOtnE,OACtB,IAAIwnE,EAAY3zE,EAChB,GAAImM,EAAQ,CACR,MAAM+jE,EAAY71C,GAAcvnB,EAAQwnB,IAAKtsB,KAAKrN,EAAGqN,KAAK6Y,OAQ1D,IAPAmO,EAAGr0B,EAAIi1E,GAAY5nE,KAAM8E,EAAQknE,YAAalnE,GAC9CkiB,EAAGthB,GAAKZ,EAAQ2hE,gBAChBnyD,EAAIgL,UAAY4iD,EAAU5iD,UAAUxa,EAAQknE,aAC5C13D,EAAIiL,aAAe,SACnBomD,EAAa3kD,GAAOlc,EAAQ6gE,YAC5BrxD,EAAIsK,UAAY9Z,EAAQmnE,YACxB33D,EAAIN,KAAO2xD,EAAWzrD,OAClBloB,EAAI,EAAGA,EAAImM,IAAUnM,EACrBsiB,EAAIsL,SAAS6lD,EAAOzzE,GAAIkwE,EAAUvvE,EAAEq0B,EAAGr0B,GAAIq0B,EAAGthB,EAAIigE,EAAWxxD,WAAa,GAC1E6S,EAAGthB,GAAKigE,EAAWxxD,WAAarP,EAAQ4hE,aAEhD,CACJ,CACA,cAAA9kB,CAAe56B,EAAI1S,EAAK43D,EAAapnE,GACjC,MAAM,OAAEkiE,EAAO,OAAEF,GAAY9mE,MACvB,EAAErN,EAAE,EAAE+S,GAAOshB,GACb,MAAEnO,EAAM,OAAE2C,GAAY0wD,GACtB,QAAEpsD,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAchc,EAAQ+W,cACjFvH,EAAIsK,UAAY9Z,EAAQyO,gBACxBe,EAAIqK,YAAc7Z,EAAQ0O,YAC1Bc,EAAI6D,UAAYrT,EAAQiY,YACxBzI,EAAIgI,YACJhI,EAAIoI,OAAO/pB,EAAImtB,EAASpa,GACT,QAAXohE,GACA9mE,KAAKsqE,UAAUtjD,EAAI1S,EAAK43D,EAAapnE,GAEzCwP,EAAIqI,OAAOhqB,EAAIkmB,EAAQoH,EAAUva,GACjC4O,EAAI63D,iBAAiBx5E,EAAIkmB,EAAOnT,EAAG/S,EAAIkmB,EAAOnT,EAAIua,GACnC,WAAX6mD,GAAkC,UAAXE,GACvBhnE,KAAKsqE,UAAUtjD,EAAI1S,EAAK43D,EAAapnE,GAEzCwP,EAAIqI,OAAOhqB,EAAIkmB,EAAOnT,EAAI8V,EAASwE,GACnC1L,EAAI63D,iBAAiBx5E,EAAIkmB,EAAOnT,EAAI8V,EAAQ7oB,EAAIkmB,EAAQmH,EAAata,EAAI8V,GAC1D,WAAXsrD,GACA9mE,KAAKsqE,UAAUtjD,EAAI1S,EAAK43D,EAAapnE,GAEzCwP,EAAIqI,OAAOhqB,EAAIotB,EAAYra,EAAI8V,GAC/BlH,EAAI63D,iBAAiBx5E,EAAG+S,EAAI8V,EAAQ7oB,EAAG+S,EAAI8V,EAASuE,GACrC,WAAX+mD,GAAkC,SAAXE,GACvBhnE,KAAKsqE,UAAUtjD,EAAI1S,EAAK43D,EAAapnE,GAEzCwP,EAAIqI,OAAOhqB,EAAG+S,EAAIoa,GAClBxL,EAAI63D,iBAAiBx5E,EAAG+S,EAAG/S,EAAImtB,EAASpa,GACxC4O,EAAImI,YACJnI,EAAIwI,OACAhY,EAAQiY,YAAc,GACtBzI,EAAI0I,QAEZ,CACH,sBAAAovD,CAAuBtnE,GAChB,MAAMiN,EAAQ/R,KAAK+R,MACb6d,EAAQ5vB,KAAKi0B,YACbo4C,EAAQz8C,GAASA,EAAMj9B,EACvB25E,EAAQ18C,GAASA,EAAMlqB,EAC7B,GAAI2mE,GAASC,EAAO,CAChB,MAAM//B,EAAWm4B,GAAY5/D,EAAQynC,UAAU9pC,KAAKzC,KAAMA,KAAKywB,QAASzwB,KAAKgpE,gBAC7E,IAAKz8B,EACD,OAEJ,MAAM/lC,EAAOxG,KAAKipE,MAAQ3D,GAAetlE,KAAM8E,GACzCqlE,EAAkBpsE,OAAOC,OAAO,CAAC,EAAGuuC,EAAUvsC,KAAKipE,OACnDzB,EAAYH,GAAmBt1D,EAAOjN,EAASqlE,GAC/C58D,EAAQg6D,GAAmBziE,EAASqlE,EAAiB3C,EAAWz1D,GAClEs6D,EAAM35C,MAAQnlB,EAAM5a,GAAK25E,EAAM55C,MAAQnlB,EAAM7H,IAC7C1F,KAAKgnE,OAASQ,EAAUR,OACxBhnE,KAAK8mE,OAASU,EAAUV,OACxB9mE,KAAK6Y,MAAQrS,EAAKqS,MAClB7Y,KAAKwb,OAAShV,EAAKgV,OACnBxb,KAAKqpE,OAAS98B,EAAS55C,EACvBqN,KAAKspE,OAAS/8B,EAAS7mC,EACvB1F,KAAKu9B,qBAAqB3K,OAAO5yB,KAAMuN,GAE/C,CACJ,CACH,WAAAg/D,GACO,QAASvsE,KAAK+oE,OAClB,CACA,IAAAv4C,CAAKlc,GACD,MAAMxP,EAAU9E,KAAK8E,QAAQif,WAAW/jB,KAAKqb,cAC7C,IAAI0tD,EAAU/oE,KAAK+oE,QACnB,IAAKA,EACD,OAEJ/oE,KAAKosE,uBAAuBtnE,GAC5B,MAAMonE,EAAc,CAChBrzD,MAAO7Y,KAAK6Y,MACZ2C,OAAQxb,KAAKwb,QAEXwL,EAAK,CACPr0B,EAAGqN,KAAKrN,EACR+S,EAAG1F,KAAK0F,GAEZqjE,EAAUh5E,KAAKyX,IAAIuhE,GAAW,KAAO,EAAIA,EACzC,MAAMxxD,EAAUwJ,GAAUjc,EAAQyS,SAC5Bi1D,EAAoBxsE,KAAK8Y,MAAM3a,QAAU6B,KAAKmmE,WAAWhoE,QAAU6B,KAAKwlE,KAAKrnE,QAAU6B,KAAKomE,UAAUjoE,QAAU6B,KAAKylE,OAAOtnE,OAC9H2G,EAAQ02C,SAAWgxB,IACnBl4D,EAAImG,OACJnG,EAAIm4D,YAAc1D,EAClB/oE,KAAK4hD,eAAe56B,EAAI1S,EAAK43D,EAAapnE,GAC1CgoB,GAAsBxY,EAAKxP,EAAQ09D,eACnCx7C,EAAGthB,GAAK6R,EAAQC,IAChBxX,KAAKqiD,UAAUr7B,EAAI1S,EAAKxP,GACxB9E,KAAKwrE,SAASxkD,EAAI1S,EAAKxP,GACvB9E,KAAK+rE,WAAW/kD,EAAI1S,EAAKxP,GACzBsoB,GAAqB9Y,EAAKxP,EAAQ09D,eAClCluD,EAAIuG,UAEZ,CACH,iBAAAy0C,GACO,OAAOtvD,KAAKywB,SAAW,EAC3B,CACH,iBAAA8+B,CAAkBC,EAAgBqV,GAC3B,MAAMpV,EAAazvD,KAAKywB,QAClBzZ,EAASw4C,EAAeh9D,IAAI,EAAG4R,eAAeC,YAChD,MAAMgI,EAAOrM,KAAK+R,MAAMsnB,eAAej1B,GACvC,IAAKiI,EACD,MAAM,IAAI8X,MAAM,kCAAoC/f,GAExD,MAAO,CACHA,eACAklB,QAASjd,EAAK0N,KAAK1V,GACnBA,WAGF6J,GAAWpK,EAAe2rD,EAAYz4C,GACtC01D,EAAkB1sE,KAAK2sE,iBAAiB31D,EAAQ6tD,IAClD32D,GAAWw+D,KACX1sE,KAAKywB,QAAUzZ,EACfhX,KAAKgpE,eAAiBnE,EACtB7kE,KAAK4sE,qBAAsB,EAC3B5sE,KAAK4yB,QAAO,GAEpB,CACH,WAAA0wC,CAAYryE,EAAG0+D,EAAQI,GAAc,GAC9B,GAAIJ,GAAU3vD,KAAK4sE,oBACf,OAAO,EAEX5sE,KAAK4sE,qBAAsB,EAC3B,MAAM9nE,EAAU9E,KAAK8E,QACf2qD,EAAazvD,KAAKywB,SAAW,GAC7BzZ,EAAShX,KAAKkwD,mBAAmBj/D,EAAGw+D,EAAYE,EAAQI,GACxD2c,EAAkB1sE,KAAK2sE,iBAAiB31D,EAAQ/lB,GAChDid,EAAUyhD,IAAW7rD,EAAekT,EAAQy4C,IAAeid,EAWjE,OAVIx+D,IACAlO,KAAKywB,QAAUzZ,GACXlS,EAAQ02C,SAAW12C,EAAQulE,YAC3BrqE,KAAKgpE,eAAiB,CAClBr2E,EAAG1B,EAAE0B,EACL+S,EAAGzU,EAAEyU,GAET1F,KAAK4yB,QAAO,EAAM+8B,KAGnBzhD,CACX,CACH,kBAAAgiD,CAAmBj/D,EAAGw+D,EAAYE,EAAQI,GACnC,MAAMjrD,EAAU9E,KAAK8E,QACrB,GAAe,aAAX7T,EAAEgO,KACF,MAAO,GAEX,IAAK8wD,EACD,OAAON,EAAW/qC,OAAQ1yB,GAAIgO,KAAK+R,MAAMgI,KAAKtG,SAASzhB,EAAEoS,oBAA6F9D,IAA5EN,KAAK+R,MAAMsnB,eAAernC,EAAEoS,cAAc2xB,WAAWuF,UAAUtpC,EAAEqS,QAE/I,MAAM2S,EAAShX,KAAK+R,MAAM08C,0BAA0Bx9D,EAAG6T,EAAQ6P,KAAM7P,EAAS6qD,GAI9E,OAHI7qD,EAAQjB,SACRmT,EAAOnT,UAEJmT,CACX,CACH,gBAAA21D,CAAiB31D,EAAQ/lB,GAClB,MAAM,OAAEo4E,EAAO,OAAEC,EAAO,QAAExkE,GAAa9E,KACjCusC,EAAWm4B,GAAY5/D,EAAQynC,UAAU9pC,KAAKzC,KAAMgX,EAAQ/lB,GAClE,OAAoB,IAAbs7C,IAAuB88B,IAAW98B,EAAS55C,GAAK22E,IAAW/8B,EAAS7mC,EAC/E,EAEJ,IAAImnE,GAAiB,CACjBzqE,GAAI,UACJwhE,SAAUkF,GACVpE,eACA,SAAAoI,CAAW/6D,EAAOqnD,EAAOt0D,GACjBA,IACAiN,EAAMwzD,QAAU,IAAIuD,GAAQ,CACxB/2D,QACAjN,YAGZ,EACA,YAAA+0C,CAAc9nC,EAAOqnD,EAAOt0D,GACpBiN,EAAMwzD,SACNxzD,EAAMwzD,QAAQttC,WAAWnzB,EAEjC,EACA,KAAA00B,CAAOznB,EAAOqnD,EAAOt0D,GACbiN,EAAMwzD,SACNxzD,EAAMwzD,QAAQttC,WAAWnzB,EAEjC,EACA,SAAAioE,CAAWh7D,GACP,MAAMwzD,EAAUxzD,EAAMwzD,QACtB,GAAIA,GAAWA,EAAQgH,cAAe,CAClC,MAAM/oE,EAAO,CACT+hE,WAEJ,IAGO,IAHHxzD,EAAM6qC,cAAc,oBAAqB,IACtCp5C,EACHkiD,YAAY,IAEZ,OAEJ6f,EAAQ/0C,KAAKze,EAAMuC,KACnBvC,EAAM6qC,cAAc,mBAAoBp5C,EAC5C,CACJ,EACA,UAAAqgE,CAAY9xD,EAAOvO,GACf,GAAIuO,EAAMwzD,QAAS,CACf,MAAM54B,EAAmBnpC,EAAKmsD,OAC1B59C,EAAMwzD,QAAQjC,YAAY9/D,EAAKwmB,MAAO2iB,EAAkBnpC,EAAKusD,eAC7DvsD,EAAK0K,SAAU,EAEvB,CACJ,EACAoI,SAAU,CACNklC,SAAS,EACT6uB,SAAU,KACV99B,SAAU,UACVh5B,gBAAiB,kBACjBu3D,WAAY,OACZ9H,UAAW,CACPniE,OAAQ,QAEZwlE,aAAc,EACdC,kBAAmB,EACnBvuB,WAAY,OACZywB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAC,EACX+F,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACR9kE,OAAQ,QAEZmrE,YAAa,OACbz0D,QAAS,EACT4vD,aAAc,EACdD,UAAW,EACXrrD,aAAc,EACdmkD,UAAW,CAAC1rD,EAAK4J,IAAOA,EAAKwnD,SAASl/D,KACtCy5D,SAAU,CAAC3rD,EAAK4J,IAAOA,EAAKwnD,SAASl/D,KACrC4kE,mBAAoB,OACpB7E,eAAe,EACfh4B,WAAY,EACZ/6B,YAAa,gBACbuJ,YAAa,EACbzJ,UAAW,CACPsD,SAAU,IACVC,OAAQ,gBAEZM,WAAY,CACRzG,QAAS,CACLzR,KAAM,SACN8X,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRgyD,QAAS,CACLlyD,OAAQ,SACRD,SAAU,MAGlBkZ,UAAWi4C,IAEf1kB,cAAe,CACXqiB,SAAU,OACVC,WAAY,OACZ3C,UAAW,QAEflwD,YAAa,CACTyD,YAAcZ,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjEc,YAAY,EACZqZ,UAAW,CACPvZ,aAAa,EACbE,YAAY,GAEhBnD,UAAW,CACPoD,WAAW,GAEfS,WAAY,CACRT,UAAW,cAGnB+xC,uBAAwB,CACpB,gBAIJvzC,GAAuBnX,OAAOu/B,OAAO,CACzCiO,UAAW,KACXyhC,OAAQ9T,GACR+T,WAAYnT,GACZoT,OAAQ7oE,GACRg8D,OAAQsD,GACRwJ,SAAU1I,GACVT,MAAOK,GACPyE,QAAS+D,KAwBT,SAASO,GAAkB9qE,GACvB,MAAM24B,EAASj7B,KAAKk7B,YACpB,OAAI54B,GAAS,GAAKA,EAAQ24B,EAAO98B,OACtB88B,EAAO34B,GAEXA,CACX,CACA,MAAM+qE,WAAsBp1B,GACxB/gB,UAAY,WACfA,gBAAkB,CACXplB,MAAO,CACHxO,SAAU8pE,KAGlB,WAAApuE,CAAYizB,GACRiQ,MAAMjQ,GACLjyB,KAAKstE,iBAAchtE,EACpBN,KAAKutE,YAAc,EACnBvtE,KAAKwtE,aAAe,EACxB,CACA,IAAA9hC,CAAKib,GACD,MAAM8mB,EAAQztE,KAAKwtE,aACnB,GAAIC,EAAMtvE,OAAQ,CACd,MAAM88B,EAASj7B,KAAKk7B,YACpB,IAAK,MAAM,MAAE72B,EAAM,MAAEk4B,KAAYkxC,EACzBxyC,EAAO52B,KAAWk4B,GAClBtB,EAAO5vB,OAAOhH,EAAO,GAG7BrE,KAAKwtE,aAAe,EACxB,CACAtrC,MAAMwJ,KAAKib,EACf,CACA,KAAA5gC,CAAM+W,EAAKz4B,GACP,GAAIhC,EAAcy6B,GACd,OAAO,KAEX,MAAM7B,EAASj7B,KAAKk7B,YAEpB,MAxCW,EAAC72B,EAAOrU,IAAgB,OAAVqU,EAAiB,KAAO8F,GAAYpa,KAAKL,MAAM2U,GAAQ,EAAGrU,GAwC5E2nD,CADPtzC,EAAQvB,SAASuB,IAAU42B,EAAO52B,KAAWy4B,EAAMz4B,EA/C3D,SAAwB42B,EAAQ6B,EAAKz4B,EAAOqpE,GACxC,MAAM/xB,EAAQ1gB,EAAOr2B,QAAQk4B,GAC7B,OAAe,IAAX6e,EAdY,EAAC1gB,EAAQ6B,EAAKz4B,EAAOqpE,KAClB,iBAAR5wC,GACPz4B,EAAQ42B,EAAOj1B,KAAK82B,GAAO,EAC3B4wC,EAAYvQ,QAAQ,CAChB94D,QACAk4B,MAAOO,KAEJ30B,MAAM20B,KACbz4B,EAAQ,MAELA,GAKIspE,CAAY1yC,EAAQ6B,EAAKz4B,EAAOqpE,GAGpC/xB,IADM1gB,EAAO2yC,YAAY9wC,GACRz4B,EAAQs3C,CACpC,CAwCmEkyB,CAAe5yC,EAAQ6B,EAAK75B,EAAeoB,EAAOy4B,GAAM98B,KAAKwtE,cAC/FvyC,EAAO98B,OAAS,EAC7C,CACA,mBAAAi8C,GACI,MAAM,WAAEntC,EAAW,WAAEC,GAAgBlN,KAAKmN,gBAC1C,IAAI,IAAEld,EAAI,IAAED,GAASgQ,KAAK27B,WAAU,GACR,UAAxB37B,KAAK8E,QAAQiT,SACR9K,IACDhd,EAAM,GAELid,IACDld,EAAMgQ,KAAKk7B,YAAY/8B,OAAS,IAGxC6B,KAAK/P,IAAMA,EACX+P,KAAKhQ,IAAMA,CACf,CACA,UAAA0qD,GACI,MAAMzqD,EAAM+P,KAAK/P,IACXD,EAAMgQ,KAAKhQ,IACX6nB,EAAS7X,KAAK8E,QAAQ+S,OACtB/F,EAAQ,GACd,IAAImpB,EAASj7B,KAAKk7B,YAClBD,EAAiB,IAARhrC,GAAaD,IAAQirC,EAAO98B,OAAS,EAAI88B,EAASA,EAAOv4B,MAAMzS,EAAKD,EAAM,GACnFgQ,KAAKutE,YAAcx9E,KAAKC,IAAIirC,EAAO98B,QAAU0Z,EAAS,EAAI,GAAI,GAC9D7X,KAAKstE,YAActtE,KAAK/P,KAAO4nB,EAAS,GAAM,GAC9C,IAAI,IAAIvV,EAAQrS,EAAKqS,GAAStS,EAAKsS,IAC/BwP,EAAM9L,KAAK,CACP1D,UAGR,OAAOwP,CACX,CACA,gBAAA0qB,CAAiBl6B,GACb,OAAO8qE,GAAkB3qE,KAAKzC,KAAMsC,EACxC,CACH,SAAAmxB,GACOyO,MAAMzO,YACDzzB,KAAKqiC,iBACNriC,KAAKosC,gBAAkBpsC,KAAKosC,eAEpC,CACA,gBAAAh/B,CAAiB9K,GAIb,MAHqB,iBAAVA,IACPA,EAAQtC,KAAK+lB,MAAMzjB,IAEN,OAAVA,EAAiBo5B,IAAM17B,KAAKskC,oBAAoBhiC,EAAQtC,KAAKstE,aAAettE,KAAKutE,YAC5F,CACA,eAAAntC,CAAgB/7B,GACZ,MAAMyN,EAAQ9R,KAAK8R,MACnB,OAAIzN,EAAQ,GAAKA,EAAQyN,EAAM3T,OAAS,EAC7B,KAEJ6B,KAAKoN,iBAAiB0E,EAAMzN,GAAO/B,MAC9C,CACA,gBAAAkiC,CAAiBxpB,GACb,OAAOjrB,KAAKL,MAAMsQ,KAAKstE,YAActtE,KAAKq/C,mBAAmBrkC,GAAShb,KAAKutE,YAC/E,CACA,YAAAnrC,GACI,OAAOpiC,KAAK0X,MAChB,EAuGJ,SAASo2D,GAAkBxrE,EAAOyrE,GAAY,WAAE5sC,EAAW,YAAEnoB,IACzD,MAAMmD,EAAM5T,GAAUyQ,GAChBrb,GAASwjC,EAAapxC,KAAKse,IAAI8N,GAAOpsB,KAAKuf,IAAI6M,KAAS,KACxDhe,EAAS,IAAO4vE,GAAc,GAAKzrE,GAAOnE,OAChD,OAAOpO,KAAKE,IAAI89E,EAAapwE,EAAOQ,EACxC,CACA,MAAM6vE,WAAwB/1B,GAC1B,WAAAj5C,CAAYizB,GACRiQ,MAAMjQ,GACLjyB,KAAK4J,WAAQtJ,EACbN,KAAK6J,SAAMvJ,EACXN,KAAKstE,iBAAchtE,EACnBN,KAAKiuE,eAAY3tE,EAClBN,KAAKutE,YAAc,CACvB,CACA,KAAAxnD,CAAM+W,EAAKz4B,GACP,OAAIhC,EAAcy6B,KAGE,iBAARA,GAAoBA,aAAej6B,UAAYC,UAAUg6B,GAF1D,MAKHA,CACZ,CACA,sBAAAoxC,GACI,MAAM,YAAEp2D,GAAiB9X,KAAK8E,SACxB,WAAEmI,EAAW,WAAEC,GAAgBlN,KAAKmN,gBAC1C,IAAI,IAAEld,EAAI,IAAED,GAASgQ,KACrB,MAAMmuE,EAAUx+E,GAAIM,EAAMgd,EAAahd,EAAMN,EACvCy+E,EAAUz+E,GAAIK,EAAMkd,EAAald,EAAML,EAC7C,GAAImoB,EAAa,CACb,MAAMu2D,EAAUhnE,GAAKpX,GACfq+E,EAAUjnE,GAAKrX,GACjBq+E,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAIl+E,IAAQD,EAAK,CACb,IAAI6nB,EAAiB,IAAR7nB,EAAY,EAAID,KAAKyX,IAAU,IAANxX,GACtCo+E,EAAOp+E,EAAM6nB,GACRC,GACDq2D,EAAOl+E,EAAM4nB,EAErB,CACA7X,KAAK/P,IAAMA,EACX+P,KAAKhQ,IAAMA,CACf,CACA,YAAAu+E,GACI,MAAMz0B,EAAW95C,KAAK8E,QAAQgN,MAC9B,IACI08D,GADA,cAAEn3B,EAAc,SAAEo3B,GAAc30B,EAepC,OAbI20B,GACAD,EAAWz+E,KAAKknD,KAAKj3C,KAAKhQ,IAAMy+E,GAAY1+E,KAAK8X,MAAM7H,KAAK/P,IAAMw+E,GAAY,EAC1ED,EAAW,MACXttD,QAAQC,KAAK,UAAUnhB,KAAKoC,sBAAsBqsE,mCAA0CD,8BAC5FA,EAAW,OAGfA,EAAWxuE,KAAK0uE,mBAChBr3B,EAAgBA,GAAiB,IAEjCA,IACAm3B,EAAWz+E,KAAKE,IAAIonD,EAAem3B,IAEhCA,CACX,CACH,gBAAAE,GACO,OAAO7rE,OAAOkE,iBAClB,CACA,UAAA2zC,GACI,MAAMx8B,EAAOle,KAAK8E,QACZg1C,EAAW57B,EAAKpM,MACtB,IAAI08D,EAAWxuE,KAAKuuE,eACpBC,EAAWz+E,KAAKC,IAAI,EAAGw+E,GACvB,MAcM18D,EA9Ld,SAAyB68D,EAAmBC,GACxC,MAAM98D,EAAQ,IAER,OAAEiG,EAAO,KAAE6oC,EAAK,IAAE3wD,EAAI,IAAED,EAAI,UAAE6+E,EAAU,MAAEpiE,EAAM,SAAE+hE,EAAS,UAAEM,EAAU,cAAEC,GAAmBJ,EAC5FK,EAAOpuB,GAAQ,EACfquB,EAAYT,EAAW,GACrBv+E,IAAKi/E,EAAOl/E,IAAKm/E,GAAUP,EAC7B3hE,GAAc5K,EAAcpS,GAC5Bid,GAAc7K,EAAcrS,GAC5Bo/E,GAAgB/sE,EAAcoK,GAC9BshE,GAAcoB,EAAOD,IAASJ,EAAY,GAChD,IACIj9C,EAAQw9C,EAASC,EAASC,EAD1B1pC,EAAUp+B,IAAS0nE,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAInpC,EAXgB,QAWU54B,IAAeC,EACzC,MAAO,CACH,CACI5K,MAAO4sE,GAEX,CACI5sE,MAAO6sE,IAInBI,EAAYx/E,KAAKknD,KAAKk4B,EAAOtpC,GAAW91C,KAAK8X,MAAMqnE,EAAOrpC,GACtD0pC,EAAYN,IACZppC,EAAUp+B,GAAQ8nE,EAAY1pC,EAAUopC,EAAYD,GAAQA,GAE3D3sE,EAAcwsE,KACfh9C,EAAS9hC,KAAKyN,IAAI,GAAIqxE,GACtBhpC,EAAU91C,KAAKknD,KAAKpR,EAAUhU,GAAUA,GAE7B,UAAX9Z,GACAs3D,EAAUt/E,KAAK8X,MAAMqnE,EAAOrpC,GAAWA,EACvCypC,EAAUv/E,KAAKknD,KAAKk4B,EAAOtpC,GAAWA,IAEtCwpC,EAAUH,EACVI,EAAUH,GAEVliE,GAAcC,GAAc0zC,GDtmTpC,SAAqBjuD,EAAG4U,GACpB,MAAMioE,EAAUz/E,KAAKL,MAAMiD,GAC3B,OAAO68E,EAAUjoE,GAAW5U,GAAK68E,EAAUjoE,GAAW5U,CAC1D,CCmmT4C88E,EAAaz/E,EAAMC,GAAO2wD,EAAM/a,EAAU,MAC9E0pC,EAAYx/E,KAAKL,MAAMK,KAAKE,KAAKD,EAAMC,GAAO41C,EAAS2oC,IACvD3oC,GAAW71C,EAAMC,GAAOs/E,EACxBF,EAAUp/E,EACVq/E,EAAUt/E,GACHo/E,GACPC,EAAUpiE,EAAahd,EAAMo/E,EAC7BC,EAAUpiE,EAAald,EAAMs/E,EAC7BC,EAAY9iE,EAAQ,EACpBo5B,GAAWypC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWxpC,EAE9B0pC,EADAjoE,GAAaioE,EAAWx/E,KAAKL,MAAM6/E,GAAY1pC,EAAU,KAC7C91C,KAAKL,MAAM6/E,GAEXx/E,KAAKknD,KAAKs4B,IAG9B,MAAMG,EAAgB3/E,KAAKC,IAAI2Y,GAAek9B,GAAUl9B,GAAe0mE,IACvEx9C,EAAS9hC,KAAKyN,IAAI,GAAI6E,EAAcwsE,GAAaa,EAAgBb,GACjEQ,EAAUt/E,KAAKL,MAAM2/E,EAAUx9C,GAAUA,EACzCy9C,EAAUv/E,KAAKL,MAAM4/E,EAAUz9C,GAAUA,EACzC,IAAItyB,EAAI,EAgBR,IAfI0N,IACI8hE,GAAiBM,IAAYp/E,GAC7B6hB,EAAM9L,KAAK,CACP1D,MAAOrS,IAEPo/E,EAAUp/E,GACVsP,IAEA+H,GAAavX,KAAKL,OAAO2/E,EAAU9vE,EAAIsmC,GAAWhU,GAAUA,EAAQ5hC,EAAK69E,GAAkB79E,EAAK89E,EAAYY,KAC5GpvE,KAEG8vE,EAAUp/E,GACjBsP,KAGFA,EAAIgwE,IAAahwE,EAAE,CACrB,MAAMsS,EAAY9hB,KAAKL,OAAO2/E,EAAU9vE,EAAIsmC,GAAWhU,GAAUA,EACjE,GAAI3kB,GAAc2E,EAAY7hB,EAC1B,MAEJ8hB,EAAM9L,KAAK,CACP1D,MAAOuP,GAEf,CAcA,OAbI3E,GAAc6hE,GAAiBO,IAAYt/E,EACvC8hB,EAAM3T,QAAUmJ,GAAawK,EAAMA,EAAM3T,OAAS,GAAGmE,MAAOtS,EAAK89E,GAAkB99E,EAAK+9E,EAAYY,IACpG78D,EAAMA,EAAM3T,OAAS,GAAGmE,MAAQtS,EAEhC8hB,EAAM9L,KAAK,CACP1D,MAAOtS,IAGPkd,GAAcoiE,IAAYt/E,GAClC8hB,EAAM9L,KAAK,CACP1D,MAAOgtE,IAGRx9D,CACX,CA2FsB69D,CAdkB,CAC5BnB,WACAz2D,OAAQmG,EAAKnG,OACb9nB,IAAKiuB,EAAKjuB,IACVD,IAAKkuB,EAAKluB,IACV6+E,UAAW/0B,EAAS+0B,UACpBjuB,KAAM9G,EAAS20B,SACfhiE,MAAOqtC,EAASrtC,MAChBqiE,UAAW9uE,KAAK4iD,aAChBzhB,WAAYnhC,KAAKqiC,eACjBrpB,YAAa8gC,EAAS9gC,aAAe,EACrC+1D,eAA0C,IAA3Bj1B,EAASi1B,eAEV/uE,KAAKw4C,QAAUx4C,MAajC,MAXoB,UAAhBke,EAAKnG,QACL3P,GAAmB0J,EAAO9R,KAAM,SAEhCke,EAAKra,SACLiO,EAAMjO,UACN7D,KAAK4J,MAAQ5J,KAAKhQ,IAClBgQ,KAAK6J,IAAM7J,KAAK/P,MAEhB+P,KAAK4J,MAAQ5J,KAAK/P,IAClB+P,KAAK6J,IAAM7J,KAAKhQ,KAEb8hB,CACX,CACH,SAAA2hB,GACO,MAAM3hB,EAAQ9R,KAAK8R,MACnB,IAAIlI,EAAQ5J,KAAK/P,IACb4Z,EAAM7J,KAAKhQ,IAEf,GADAkyC,MAAMzO,YACFzzB,KAAK8E,QAAQ+S,QAAU/F,EAAM3T,OAAQ,CACrC,MAAM0Z,GAAUhO,EAAMD,GAAS7Z,KAAKC,IAAI8hB,EAAM3T,OAAS,EAAG,GAAK,EAC/DyL,GAASiO,EACThO,GAAOgO,CACX,CACA7X,KAAKstE,YAAc1jE,EACnB5J,KAAKiuE,UAAYpkE,EACjB7J,KAAKutE,YAAc1jE,EAAMD,CAC7B,CACA,gBAAA4yB,CAAiBl6B,GACb,OAAOwO,GAAaxO,EAAOtC,KAAK+R,MAAMjN,QAAQkM,OAAQhR,KAAK8E,QAAQgN,MAAML,OAC7E,EAGJ,MAAMm+D,WAAoB5B,GACtB92C,UAAY,SACfA,gBAAkB,CACXplB,MAAO,CACHxO,SAAUsP,GAAMlB,WAAWE,UAGnC,mBAAAwoC,GACI,MAAM,IAAEnqD,EAAI,IAAED,GAASgQ,KAAK27B,WAAU,GACtC37B,KAAK/P,IAAM2S,EAAe3S,GAAOA,EAAM,EACvC+P,KAAKhQ,IAAM4S,EAAe5S,GAAOA,EAAM,EACvCgQ,KAAKkuE,wBACT,CACH,gBAAAQ,GACO,MAAMvtC,EAAanhC,KAAKqiC,eAClBlkC,EAASgjC,EAAanhC,KAAK6Y,MAAQ7Y,KAAKwb,OACxCxC,EAAczQ,GAAUvI,KAAK8E,QAAQgN,MAAMkH,aAC3Crb,GAASwjC,EAAapxC,KAAKse,IAAI2K,GAAejpB,KAAKuf,IAAI0J,KAAiB,KACxE4lC,EAAW5+C,KAAKi/C,wBAAwB,GAC9C,OAAOlvD,KAAKknD,KAAK94C,EAASpO,KAAKE,IAAI,GAAI2uD,EAASzqC,WAAaxW,GACjE,CACA,gBAAAyP,CAAiB9K,GACb,OAAiB,OAAVA,EAAiBo5B,IAAM17B,KAAKskC,oBAAoBhiC,EAAQtC,KAAKstE,aAAettE,KAAKutE,YAC5F,CACA,gBAAA/oC,CAAiBxpB,GACb,OAAOhb,KAAKstE,YAActtE,KAAKq/C,mBAAmBrkC,GAAShb,KAAKutE,WACpE,EAGJ,MAAMsC,GAAclgF,GAAII,KAAK8X,MAAMT,GAAMzX,IACnCmgF,GAAiB,CAACngF,EAAG4O,IAAIxO,KAAKyN,IAAI,GAAIqyE,GAAWlgF,GAAK4O,GAC5D,SAASwxE,GAAQC,GAEb,OAAkB,IADHA,EAAUjgF,KAAKyN,IAAI,GAAIqyE,GAAWG,GAErD,CACA,SAASC,GAAMhgF,EAAKD,EAAKkgF,GACrB,MAAMC,EAAYpgF,KAAKyN,IAAI,GAAI0yE,GACzBtmE,EAAQ7Z,KAAK8X,MAAM5X,EAAMkgF,GAE/B,OADYpgF,KAAKknD,KAAKjnD,EAAMmgF,GACfvmE,CACjB,CAkDA,MAAMwmE,WAAyBn4B,GAC3B/gB,UAAY,cACfA,gBAAkB,CACXplB,MAAO,CACHxO,SAAUsP,GAAMlB,WAAWc,YAC3BiH,MAAO,CACH+hC,SAAS,KAIrB,WAAAx8C,CAAYizB,GACRiQ,MAAMjQ,GACLjyB,KAAK4J,WAAQtJ,EACbN,KAAK6J,SAAMvJ,EACXN,KAAKstE,iBAAchtE,EACpBN,KAAKutE,YAAc,CACvB,CACA,KAAAxnD,CAAM+W,EAAKz4B,GACP,MAAM/B,EAAQ0rE,GAAgBzrE,UAAUwjB,MAAMriB,MAAM1D,KAAM,CACtD88B,EACAz4B,IAEJ,GAAc,IAAV/B,EAIJ,OAAOM,EAAeN,IAAUA,EAAQ,EAAIA,EAAQ,KAHhDtC,KAAKqwE,OAAQ,CAIrB,CACA,mBAAAj2B,GACI,MAAM,IAAEnqD,EAAI,IAAED,GAASgQ,KAAK27B,WAAU,GACtC37B,KAAK/P,IAAM2S,EAAe3S,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KACpD+P,KAAKhQ,IAAM4S,EAAe5S,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAChDgQ,KAAK8E,QAAQgT,cACb9X,KAAKqwE,OAAQ,GAEbrwE,KAAKqwE,OAASrwE,KAAK/P,MAAQ+P,KAAKi5C,gBAAkBr2C,EAAe5C,KAAK+4C,YACtE/4C,KAAK/P,IAAMA,IAAQ6/E,GAAe9vE,KAAK/P,IAAK,GAAK6/E,GAAe9vE,KAAK/P,KAAM,GAAK6/E,GAAe9vE,KAAK/P,IAAK,IAE7G+P,KAAKkuE,wBACT,CACA,sBAAAA,GACI,MAAM,WAAEjhE,EAAW,WAAEC,GAAgBlN,KAAKmN,gBAC1C,IAAIld,EAAM+P,KAAK/P,IACXD,EAAMgQ,KAAKhQ,IACf,MAAMm+E,EAAUx+E,GAAIM,EAAMgd,EAAahd,EAAMN,EACvCy+E,EAAUz+E,GAAIK,EAAMkd,EAAald,EAAML,EACzCM,IAAQD,IACJC,GAAO,GACPk+E,EAAO,GACPC,EAAO,MAEPD,EAAO2B,GAAe7/E,GAAM,IAC5Bm+E,EAAO0B,GAAe9/E,EAAK,MAG/BC,GAAO,GACPk+E,EAAO2B,GAAe9/E,GAAM,IAE5BA,GAAO,GACPo+E,EAAO0B,GAAe7/E,EAAK,IAE/B+P,KAAK/P,IAAMA,EACX+P,KAAKhQ,IAAMA,CACf,CACA,UAAA0qD,GACI,MAAMx8B,EAAOle,KAAK8E,QAKZgN,EA5Gb,SAAuB68D,GAAmB,IAAE1+E,EAAI,IAAED,IAC/CC,EAAM8S,EAAgB4rE,EAAkB1+E,IAAKA,GAC7C,MAAM6hB,EAAQ,GACRw+D,EAAST,GAAW5/E,GAC1B,IAAIsgF,EAfR,SAAkBtgF,EAAKD,GAEnB,IAAIkgF,EAAWL,GADD7/E,EAAMC,GAEpB,KAAMggF,GAAMhgF,EAAKD,EAAKkgF,GAAY,IAC9BA,IAEJ,KAAMD,GAAMhgF,EAAKD,EAAKkgF,GAAY,IAC9BA,IAEJ,OAAOngF,KAAKE,IAAIigF,EAAUL,GAAW5/E,GACzC,CAKcugF,CAASvgF,EAAKD,GACpB6+E,EAAY0B,EAAM,EAAIxgF,KAAKyN,IAAI,GAAIzN,KAAKyX,IAAI+oE,IAAQ,EACxD,MAAM9B,EAAW1+E,KAAKyN,IAAI,GAAI+yE,GACxBt2C,EAAOq2C,EAASC,EAAMxgF,KAAKyN,IAAI,GAAI8yE,GAAU,EAC7C1mE,EAAQ7Z,KAAKL,OAAOO,EAAMgqC,GAAQ40C,GAAaA,EAC/Ch3D,EAAS9nB,KAAK8X,OAAO5X,EAAMgqC,GAAQw0C,EAAW,IAAMA,EAAW,GACrE,IAAI/7D,EAAc3iB,KAAK8X,OAAO+B,EAAQiO,GAAU9nB,KAAKyN,IAAI,GAAI+yE,IACzDjuE,EAAQS,EAAgB4rE,EAAkB1+E,IAAKF,KAAKL,OAAOuqC,EAAOpiB,EAASnF,EAAc3iB,KAAKyN,IAAI,GAAI+yE,IAAQ1B,GAAaA,GAC/H,KAAMvsE,EAAQtS,GACV8hB,EAAM9L,KAAK,CACP1D,QACAmX,MAAOs2D,GAAQztE,GACfoQ,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACf69D,IACA79D,EAAc,EACdm8D,EAAY0B,GAAO,EAAI,EAAI1B,GAE/BvsE,EAAQvS,KAAKL,OAAOuqC,EAAOpiB,EAASnF,EAAc3iB,KAAKyN,IAAI,GAAI+yE,IAAQ1B,GAAaA,EAExF,MAAM4B,EAAW1tE,EAAgB4rE,EAAkB3+E,IAAKsS,GAMxD,OALAwP,EAAM9L,KAAK,CACP1D,MAAOmuE,EACPh3D,MAAOs2D,GAAQU,GACf/9D,gBAEGZ,CACX,CAuEsB4+D,CAJY,CACtBzgF,IAAK+P,KAAK+4C,SACV/oD,IAAKgQ,KAAK84C,UAEiC94C,MAY/C,MAXoB,UAAhBke,EAAKnG,QACL3P,GAAmB0J,EAAO9R,KAAM,SAEhCke,EAAKra,SACLiO,EAAMjO,UACN7D,KAAK4J,MAAQ5J,KAAKhQ,IAClBgQ,KAAK6J,IAAM7J,KAAK/P,MAEhB+P,KAAK4J,MAAQ5J,KAAK/P,IAClB+P,KAAK6J,IAAM7J,KAAKhQ,KAEb8hB,CACX,CACH,gBAAA0qB,CAAiBl6B,GACV,YAAiBhC,IAAVgC,EAAsB,IAAMwO,GAAaxO,EAAOtC,KAAK+R,MAAMjN,QAAQkM,OAAQhR,KAAK8E,QAAQgN,MAAML,OACzG,CACH,SAAAgiB,GACO,MAAM7pB,EAAQ5J,KAAK/P,IACnBiyC,MAAMzO,YACNzzB,KAAKstE,YAAclmE,GAAMwC,GACzB5J,KAAKutE,YAAcnmE,GAAMpH,KAAKhQ,KAAOoX,GAAMwC,EAC/C,CACA,gBAAAwD,CAAiB9K,GAIb,YAHchC,IAAVgC,GAAiC,IAAVA,IACvBA,EAAQtC,KAAK/P,KAEH,OAAVqS,GAAkB6F,MAAM7F,GACjBo5B,IAEJ17B,KAAKskC,mBAAmBhiC,IAAUtC,KAAK/P,IAAM,GAAKmX,GAAM9E,GAAStC,KAAKstE,aAAettE,KAAKutE,YACrG,CACA,gBAAA/oC,CAAiBxpB,GACb,MAAMokC,EAAUp/C,KAAKq/C,mBAAmBrkC,GACxC,OAAOjrB,KAAKyN,IAAI,GAAIwC,KAAKstE,YAAcluB,EAAUp/C,KAAKutE,YAC1D,EAGJ,SAASoD,GAAsBzyD,GAC3B,MAAM47B,EAAW57B,EAAKpM,MACtB,GAAIgoC,EAASliC,SAAWsG,EAAKtG,QAAS,CAClC,MAAML,EAAUwJ,GAAU+4B,EAASjgC,iBACnC,OAAO5W,EAAe62C,EAAS9lC,MAAQ8lC,EAAS9lC,KAAKxN,KAAM8P,GAAStC,KAAKxN,MAAQ+Q,EAAQiE,MAC7F,CACA,OAAO,CACX,CACA,SAASo1D,GAAiBt8D,EAAKN,EAAMuoB,GAIjC,OAHAA,EAAQhqC,EAAQgqC,GAASA,EAAQ,CAC7BA,GAEG,CACHzqC,EAAGuoB,GAAa/F,EAAKN,EAAKkG,OAAQqiB,GAClCzsC,EAAGysC,EAAMp+B,OAAS6V,EAAKG,WAE/B,CACA,SAAS08D,GAAgB1nE,EAAO2gB,EAAKtjB,EAAMvW,EAAKD,GAC5C,OAAImZ,IAAUlZ,GAAOkZ,IAAUnZ,EACpB,CACH4Z,MAAOkgB,EAAMtjB,EAAO,EACpBqD,IAAKigB,EAAMtjB,EAAO,GAEf2C,EAAQlZ,GAAOkZ,EAAQnZ,EACvB,CACH4Z,MAAOkgB,EAAMtjB,EACbqD,IAAKigB,GAGN,CACHlgB,MAAOkgB,EACPjgB,IAAKigB,EAAMtjB,EAEnB,CA8BA,SAASsqE,GAAaC,EAAQxvC,EAAMp4B,EAAO6nE,EAASC,GAChD,MAAM5iE,EAAMte,KAAKyX,IAAIzX,KAAKse,IAAIlF,IACxBmG,EAAMvf,KAAKyX,IAAIzX,KAAKuf,IAAInG,IAC9B,IAAIxW,EAAI,EACJ+S,EAAI,EACJsrE,EAAQpnE,MAAQ23B,EAAK1xC,GACrB8C,GAAK4uC,EAAK1xC,EAAImhF,EAAQpnE,OAASyE,EAC/B0iE,EAAOlhF,EAAIE,KAAKE,IAAI8gF,EAAOlhF,EAAG0xC,EAAK1xC,EAAI8C,IAChCq+E,EAAQnnE,IAAM03B,EAAKrvC,IAC1BS,GAAKq+E,EAAQnnE,IAAM03B,EAAKrvC,GAAKmc,EAC7B0iE,EAAO7+E,EAAInC,KAAKC,IAAI+gF,EAAO7+E,EAAGqvC,EAAKrvC,EAAIS,IAEvCs+E,EAAQrnE,MAAQ23B,EAAKngC,GACrBsE,GAAK67B,EAAKngC,EAAI6vE,EAAQrnE,OAAS0F,EAC/ByhE,EAAO3vE,EAAIrR,KAAKE,IAAI8gF,EAAO3vE,EAAGmgC,EAAKngC,EAAIsE,IAChCurE,EAAQpnE,IAAM03B,EAAKzwC,IAC1B4U,GAAKurE,EAAQpnE,IAAM03B,EAAKzwC,GAAKwe,EAC7ByhE,EAAOjgF,EAAIf,KAAKC,IAAI+gF,EAAOjgF,EAAGywC,EAAKzwC,EAAI4U,GAE/C,CACA,SAASwrE,GAAqB97D,EAAO/Q,EAAO8sE,GACxC,MAAMC,EAAgBh8D,EAAMi8D,aACtB,MAAEC,EAAM,gBAAEC,EAAgB,QAAEh6D,EAAQ,KAAE/Q,GAAU2qE,EAChDK,EAAqBp8D,EAAMq8D,iBAAiBptE,EAAO+sE,EAAgBE,EAAQ/5D,EAASg6D,GACpFpoE,EAAQpZ,KAAKL,MAAM+Y,GAAUiB,GAAgB8nE,EAAmBroE,MAAQlC,MACxEvB,EA0EV,SAAmBA,EAAG5V,EAAGqZ,GAMrB,OALc,KAAVA,GAA0B,MAAVA,EAChBzD,GAAK5V,EAAI,GACFqZ,EAAQ,KAAOA,EAAQ,MAC9BzD,GAAK5V,GAEF4V,CACX,CAjFcgsE,CAAUF,EAAmB9rE,EAAGc,EAAK1W,EAAGqZ,GAC5CmW,EAyDV,SAA8BnW,GAC1B,OAAc,IAAVA,GAAyB,MAAVA,EACR,SACAA,EAAQ,IACR,OAEJ,OACX,CAhEsBwoE,CAAqBxoE,GACjCwO,GAgEgBhlB,EAhEQ6+E,EAAmB7+E,EAgExBb,EAhE2B0U,EAAK1U,EAiE3C,WADcoa,EAhEgCoT,GAkExD3sB,GAAKb,EACY,WAAVoa,IACPvZ,GAAKb,EAAI,GAENa,GANX,IAA0BA,EAAGb,EAAGoa,EA/D5B,MAAO,CACHkL,SAAS,EACTzkB,EAAG6+E,EAAmB7+E,EACtB+S,IACA4Z,YACA3H,OACAH,IAAK9R,EACL+R,MAAOE,EAAOnR,EAAK1U,EACnB4lB,OAAQhS,EAAIc,EAAK1W,EAEzB,CACA,SAAS8hF,GAAgBnrE,EAAMyW,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAM,KAAEvF,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAYjR,EAczC,QAbqBwW,GAAe,CAChCtqB,EAAGglB,EACHjS,EAAG8R,GACJ0F,IAASD,GAAe,CACvBtqB,EAAGglB,EACHjS,EAAGgS,GACJwF,IAASD,GAAe,CACvBtqB,EAAG8kB,EACH/R,EAAG8R,GACJ0F,IAASD,GAAe,CACvBtqB,EAAG8kB,EACH/R,EAAGgS,GACJwF,GAEP,CAiDA,SAAS20D,GAAkBv9D,EAAK4J,EAAMzX,GAClC,MAAM,KAAEkR,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAYjR,GACnC,cAAEmT,GAAmBsE,EAC3B,IAAK7b,EAAcuX,GAAgB,CAC/B,MAAMw3C,EAAetwC,GAAc5C,EAAKkzC,cAClC75C,EAAUwJ,GAAU7C,EAAKrE,iBAC/BvF,EAAIsK,UAAYhF,EAChB,MAAMk4D,EAAen6D,EAAOJ,EAAQI,KAC9Bo6D,EAAcv6D,EAAMD,EAAQC,IAC5Bw6D,EAAgBv6D,EAAQE,EAAOJ,EAAQsB,MACvCo5D,EAAiBv6D,EAASF,EAAMD,EAAQiE,OAC1Czd,OAAO4T,OAAOy/C,GAAchL,KAAMz2D,GAAU,IAANA,IACtC2kB,EAAIgI,YACJuD,GAAmBvL,EAAK,CACpB3hB,EAAGm/E,EACHpsE,EAAGqsE,EACHjgF,EAAGkgF,EACHliF,EAAGmiF,EACH/1D,OAAQk1C,IAEZ98C,EAAIwI,QAEJxI,EAAI0K,SAAS8yD,EAAcC,EAAaC,EAAeC,EAE/D,CACJ,CAmBA,SAASC,GAAe98D,EAAO8G,EAAQ6tB,EAAUm+B,GAC7C,MAAM,IAAE5zD,GAASc,EACjB,GAAI20B,EACAz1B,EAAIkI,IAAIpH,EAAMk1B,QAASl1B,EAAMm1B,QAASruB,EAAQ,EAAGtV,QAC9C,CACH,IAAIqkC,EAAgB71B,EAAMq8D,iBAAiB,EAAGv1D,GAC9C5H,EAAIoI,OAAOuuB,EAAct4C,EAAGs4C,EAAcvlC,GAC1C,IAAI,IAAI1T,EAAI,EAAGA,EAAIk2E,EAAYl2E,IAC3Bi5C,EAAgB71B,EAAMq8D,iBAAiBz/E,EAAGkqB,GAC1C5H,EAAIqI,OAAOsuB,EAAct4C,EAAGs4C,EAAcvlC,EAElD,CACJ,CA0BA,MAAMysE,WAA0BnE,GAC5B92C,UAAY,eACfA,gBAAkB,CACXtf,SAAS,EACTw6D,SAAS,EACT7lC,SAAU,YACVzC,WAAY,CACRlyB,SAAS,EACTO,UAAW,EACXsW,WAAY,GACZC,iBAAkB,GAEtBxW,KAAM,CACF6xB,UAAU,GAEd5C,WAAY,EACZr1B,MAAO,CACH6H,mBAAmB,EACnBrW,SAAUsP,GAAMlB,WAAWE,SAE/Bo4B,YAAa,CACTpwB,mBAAetZ,EACfuZ,gBAAiB,EACjBjC,SAAS,EACT5D,KAAM,CACFxN,KAAM,IAEVlD,SAAUi5B,GACCA,EAEXhlB,QAAS,EACT86D,mBAAmB,IAG3Bn7C,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjB4S,WAAY,CACRpzB,UAAW,SAGnB,WAAA1X,CAAYizB,GACRiQ,MAAMjQ,GACLjyB,KAAKsqC,aAAUhqC,EACfN,KAAKuqC,aAAUjqC,EACfN,KAAKqxE,iBAAc/wE,EACnBN,KAAKsyE,aAAe,GACrBtyE,KAAKuyE,iBAAmB,EAC5B,CACA,aAAAt4B,GACI,MAAM1iC,EAAUvX,KAAKikE,SAAWljD,GAAU4vD,GAAsB3wE,KAAK8E,SAAW,GAC1EhT,EAAIkO,KAAK6Y,MAAQ7Y,KAAK2f,SAAWpI,EAAQsB,MACzC/oB,EAAIkQ,KAAKwb,OAASxb,KAAKgoC,UAAYzwB,EAAQiE,OACjDxb,KAAKsqC,QAAUv6C,KAAK8X,MAAM7H,KAAK2X,KAAO7lB,EAAI,EAAIylB,EAAQI,MACtD3X,KAAKuqC,QAAUx6C,KAAK8X,MAAM7H,KAAKwX,IAAM1nB,EAAI,EAAIynB,EAAQC,KACrDxX,KAAKqxE,YAActhF,KAAK8X,MAAM9X,KAAKE,IAAI6B,EAAGhC,GAAK,EACnD,CACA,mBAAAsqD,GACI,MAAM,IAAEnqD,EAAI,IAAED,GAASgQ,KAAK27B,WAAU,GACtC37B,KAAK/P,IAAM2S,EAAe3S,KAASkY,MAAMlY,GAAOA,EAAM,EACtD+P,KAAKhQ,IAAM4S,EAAe5S,KAASmY,MAAMnY,GAAOA,EAAM,EACtDgQ,KAAKkuE,wBACT,CACH,gBAAAQ,GACO,OAAO3+E,KAAKknD,KAAKj3C,KAAKqxE,YAAcV,GAAsB3wE,KAAK8E,SACnE,CACA,kBAAAg4C,CAAmBhrC,GACfk8D,GAAgBzrE,UAAUu6C,mBAAmBr6C,KAAKzC,KAAM8R,GACxD9R,KAAKsyE,aAAetyE,KAAKk7B,YAAY1oC,IAAI,CAAC8P,EAAO+B,KAC7C,MAAMk4B,EAAQj5B,EAAStD,KAAK8E,QAAQklC,YAAY1mC,SAAU,CACtDhB,EACA+B,GACDrE,MACH,OAAOu8B,GAAmB,IAAVA,EAAcA,EAAQ,KACvC7X,OAAO,CAAC/0B,EAAGqC,IAAIgO,KAAK+R,MAAMoyB,kBAAkBnyC,GACnD,CACA,GAAAqqD,GACI,MAAMn+B,EAAOle,KAAK8E,QACdoZ,EAAKtG,SAAWsG,EAAK8rB,YAAYpyB,QA3S5C,SAA4BxC,GACzB,MAAMmsB,EAAO,CACT1xC,EAAGulB,EAAMuC,KAAOvC,EAAM6uD,SAAStsD,KAC/BzlB,EAAGkjB,EAAMqC,MAAQrC,EAAM6uD,SAASxsD,MAChCrW,EAAGgU,EAAMoC,IAAMpC,EAAM6uD,SAASzsD,IAC9B1mB,EAAGskB,EAAMsC,OAAStC,EAAM6uD,SAASvsD,QAE/Bq5D,EAAShzE,OAAOC,OAAO,CAAC,EAAGujC,GAC3B4b,EAAa,GACb5lC,EAAU,GACVi7D,EAAap9D,EAAMk9D,aAAan0E,OAChCs0E,EAAiBr9D,EAAMtQ,QAAQklC,YAC/BunC,EAAkBkB,EAAeJ,kBAAoB1rE,GAAK6rE,EAAa,EAC7E,IAAI,IAAIxgF,EAAI,EAAGA,EAAIwgF,EAAYxgF,IAAI,CAC/B,MAAMksB,EAAOu0D,EAAe1uD,WAAW3O,EAAMs9D,qBAAqB1gF,IAClEulB,EAAQvlB,GAAKksB,EAAK3G,QAClB,MAAM0zB,EAAgB71B,EAAMq8D,iBAAiBz/E,EAAGojB,EAAMi8D,YAAc95D,EAAQvlB,GAAIu/E,GAC1EoB,EAAS3xD,GAAO9C,EAAKlK,MACrBkwD,EAAW0M,GAAiBx7D,EAAMd,IAAKq+D,EAAQv9D,EAAMk9D,aAAatgF,IACxEmrD,EAAWnrD,GAAKkyE,EAChB,MAAMpmB,EAAep0C,GAAgB0L,EAAMq1B,cAAcz4C,GAAKu/E,GACxDpoE,EAAQpZ,KAAKL,MAAM+Y,GAAUq1C,IAGnCgzB,GAAaC,EAAQxvC,EAAMuc,EAFX+yB,GAAgB1nE,EAAO8hC,EAAct4C,EAAGuxE,EAASpyE,EAAG,EAAG,KACvD++E,GAAgB1nE,EAAO8hC,EAAcvlC,EAAGw+D,EAASp0E,EAAG,GAAI,KAE5E,CACAslB,EAAMw9D,eAAerxC,EAAK1xC,EAAIkhF,EAAOlhF,EAAGkhF,EAAO7+E,EAAIqvC,EAAKrvC,EAAGqvC,EAAKngC,EAAI2vE,EAAO3vE,EAAG2vE,EAAOjgF,EAAIywC,EAAKzwC,GAC9FskB,EAAMm9D,iBA6DV,SAA8Bn9D,EAAO+nC,EAAY5lC,GAC7C,MAAM/L,EAAQ,GACRgnE,EAAap9D,EAAMk9D,aAAan0E,OAChC+f,EAAO9I,EAAMtQ,SACb,kBAAEutE,EAAkB,QAAEz6D,GAAasG,EAAK8rB,YACxCmnC,EAAW,CACbG,MAAOX,GAAsBzyD,GAAQ,EACrCqzD,gBAAiBc,EAAoB1rE,GAAK6rE,EAAa,GAE3D,IAAIt1D,EACJ,IAAI,IAAIlrB,EAAI,EAAGA,EAAIwgF,EAAYxgF,IAAI,CAC/Bm/E,EAAS55D,QAAUA,EAAQvlB,GAC3Bm/E,EAAS3qE,KAAO22C,EAAWnrD,GAC3B,MAAMyU,EAAOyqE,GAAqB97D,EAAOpjB,EAAGm/E,GAC5C3lE,EAAMxF,KAAKS,GACK,SAAZmR,IACAnR,EAAK2Q,QAAUw6D,GAAgBnrE,EAAMyW,GACjCzW,EAAK2Q,UACL8F,EAAOzW,GAGnB,CACA,OAAO+E,CACX,CApF6BqnE,CAAqBz9D,EAAO+nC,EAAY5lC,EACrE,CAgRYu7D,CAAmB9yE,MAEnBA,KAAK4yE,eAAe,EAAG,EAAG,EAAG,EAErC,CACA,cAAAA,CAAeG,EAAcC,EAAeC,EAAaC,GACrDlzE,KAAKsqC,SAAWv6C,KAAK8X,OAAOkrE,EAAeC,GAAiB,GAC5DhzE,KAAKuqC,SAAWx6C,KAAK8X,OAAOorE,EAAcC,GAAkB,GAC5DlzE,KAAKqxE,aAAethF,KAAKE,IAAI+P,KAAKqxE,YAAc,EAAGthF,KAAKC,IAAI+iF,EAAcC,EAAeC,EAAaC,GAC1G,CACA,aAAAzoC,CAAcpmC,GAGV,OAAOqF,GAAgBrF,GAFCuC,IAAO5G,KAAKsyE,aAAan0E,QAAU,IAEVoK,GAD9BvI,KAAK8E,QAAQqiC,YAAc,GAElD,CACA,6BAAA0D,CAA8BvoC,GAC1B,GAAID,EAAcC,GACd,OAAOo5B,IAEX,MAAMy3C,EAAgBnzE,KAAKqxE,aAAerxE,KAAKhQ,IAAMgQ,KAAK/P,KAC1D,OAAI+P,KAAK8E,QAAQjB,SACL7D,KAAKhQ,IAAMsS,GAAS6wE,GAExB7wE,EAAQtC,KAAK/P,KAAOkjF,CAChC,CACA,6BAAAC,CAA8B/pE,GAC1B,GAAIhH,EAAcgH,GACd,OAAOqyB,IAEX,MAAM23C,EAAiBhqE,GAAYrJ,KAAKqxE,aAAerxE,KAAKhQ,IAAMgQ,KAAK/P,MACvE,OAAO+P,KAAK8E,QAAQjB,QAAU7D,KAAKhQ,IAAMqjF,EAAiBrzE,KAAK/P,IAAMojF,CACzE,CACA,oBAAAX,CAAqBruE,GACjB,MAAM2lC,EAAchqC,KAAKsyE,cAAgB,GACzC,GAAIjuE,GAAS,GAAKA,EAAQ2lC,EAAY7rC,OAAQ,CAC1C,MAAMm1E,EAAatpC,EAAY3lC,GAC/B,OA7HZ,SAAiC+gB,EAAQ/gB,EAAOk4B,GAC5C,OAAO9a,GAAc2D,EAAQ,CACzBmX,QACAl4B,QACApF,KAAM,cAEd,CAuHmBs0E,CAAwBvzE,KAAKqb,aAAchX,EAAOivE,EAC7D,CACJ,CACA,gBAAA7B,CAAiBptE,EAAOmvE,EAAoBjC,EAAkB,GAC1D,MAAMpoE,EAAQnJ,KAAKyqC,cAAcpmC,GAAS4C,GAAUsqE,EACpD,MAAO,CACH5+E,EAAG5C,KAAKuf,IAAInG,GAASqqE,EAAqBxzE,KAAKsqC,QAC/C5kC,EAAG3V,KAAKse,IAAIlF,GAASqqE,EAAqBxzE,KAAKuqC,QAC/CphC,QAER,CACA,wBAAA+hC,CAAyB7mC,EAAO/B,GAC5B,OAAOtC,KAAKyxE,iBAAiBptE,EAAOrE,KAAK6qC,8BAA8BvoC,GAC3E,CACA,eAAAmxE,CAAgBpvE,GACZ,OAAOrE,KAAKkrC,yBAAyB7mC,GAAS,EAAGrE,KAAKs/C,eAC1D,CACA,qBAAAo0B,CAAsBrvE,GAClB,MAAM,KAAEsT,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY1X,KAAKuyE,iBAAiBluE,GAC/D,MAAO,CACHsT,OACAH,MACAC,QACAC,SAER,CACH,cAAAkqC,GACO,MAAM,gBAAEruC,EAAkB2E,MAAM,SAAE6xB,IAAiB/pC,KAAK8E,QACxD,GAAIyO,EAAiB,CACjB,MAAMe,EAAMtU,KAAKsU,IACjBA,EAAImG,OACJnG,EAAIgI,YACJ41D,GAAelyE,KAAMA,KAAK6qC,8BAA8B7qC,KAAKiuE,WAAYlkC,EAAU/pC,KAAKsyE,aAAan0E,QACrGmW,EAAImI,YACJnI,EAAIsK,UAAYrL,EAChBe,EAAIwI,OACJxI,EAAIuG,SACR,CACJ,CACH,QAAAgnC,GACO,MAAMvtC,EAAMtU,KAAKsU,IACX4J,EAAOle,KAAK8E,SACZ,WAAEglC,EAAW,KAAE5xB,EAAK,OAAEQ,GAAYwF,EAClCgqD,EAAaloE,KAAKsyE,aAAan0E,OACrC,IAAInM,EAAG6lB,EAAQ00B,EAef,GAdIruB,EAAK8rB,YAAYpyB,SA3N7B,SAAyBxC,EAAO8yD,GAC5B,MAAM,IAAE5zD,EAAMxP,SAAS,YAAEklC,IAAoB50B,EAC7C,IAAI,IAAIpjB,EAAIk2E,EAAa,EAAGl2E,GAAK,EAAGA,IAAI,CACpC,MAAMyU,EAAO2O,EAAMm9D,iBAAiBvgF,GACpC,IAAKyU,EAAK2Q,QACN,SAEJ,MAAMypC,EAAc7W,EAAYjmB,WAAW3O,EAAMs9D,qBAAqB1gF,IACtE6/E,GAAkBv9D,EAAKusC,EAAap6C,GACpC,MAAMksE,EAAS3xD,GAAO6/B,EAAY7sC,OAC5B,EAAErhB,EAAE,EAAE+S,EAAE,UAAE4Z,GAAe7Y,EAC/BwY,GAAW3K,EAAKc,EAAMk9D,aAAatgF,GAAIW,EAAG+S,EAAIitE,EAAOx+D,WAAa,EAAGw+D,EAAQ,CACzE/xE,MAAOigD,EAAYjgD,MACnB0e,UAAWA,EACXC,aAAc,UAEtB,CACJ,CA2MYo0D,CAAgB3zE,KAAMkoE,GAEtBhwD,EAAKN,SACL5X,KAAK8R,MAAMxG,QAAQ,CAACqlB,EAAMtsB,KACtB,GAAc,IAAVA,GAAyB,IAAVA,GAAerE,KAAK/P,IAAM,EAAG,CAC5C4nB,EAAS7X,KAAK6qC,8BAA8Bla,EAAKruB,OACjD,MAAMqR,EAAU3T,KAAKqb,WAAWhX,GAC1Bw8C,EAAc3oC,EAAK6L,WAAWpQ,GAC9BmtC,EAAoBpoC,EAAOqL,WAAWpQ,IArMhE,SAAwByB,EAAOw+D,EAAc13D,EAAQgsD,EAAYtoB,GAC7D,MAAMtrC,EAAMc,EAAMd,IACZy1B,EAAW6pC,EAAa7pC,UACxB,MAAEnpC,EAAM,UAAEuX,GAAey7D,GAC1B7pC,IAAam+B,IAAetnE,IAAUuX,GAAa+D,EAAS,IAGjE5H,EAAImG,OACJnG,EAAIqK,YAAc/d,EAClB0T,EAAI6D,UAAYA,EAChB7D,EAAIytC,YAAYnC,EAAWjnC,MAAQ,IACnCrE,EAAI0tC,eAAiBpC,EAAWhnC,WAChCtE,EAAIgI,YACJ41D,GAAe98D,EAAO8G,EAAQ6tB,EAAUm+B,GACxC5zD,EAAImI,YACJnI,EAAI0I,SACJ1I,EAAIuG,UACR,CAqLoBg5D,CAAe7zE,KAAM6gD,EAAahpC,EAAQqwD,EAAYpnB,EAC1D,IAGJhX,EAAWlyB,QAAS,CAEpB,IADAtD,EAAImG,OACAzoB,EAAIk2E,EAAa,EAAGl2E,GAAK,EAAGA,IAAI,CAChC,MAAM6uD,EAAc/W,EAAW/lB,WAAW/jB,KAAK0yE,qBAAqB1gF,KAC9D,MAAE4O,EAAM,UAAEuX,GAAe0oC,EAC1B1oC,GAAcvX,IAGnB0T,EAAI6D,UAAYA,EAChB7D,EAAIqK,YAAc/d,EAClB0T,EAAIytC,YAAYlB,EAAYpyB,YAC5Bna,EAAI0tC,eAAiBnB,EAAYnyB,iBACjC7W,EAAS7X,KAAK6qC,8BAA8B3sB,EAAKra,QAAU7D,KAAK/P,IAAM+P,KAAKhQ,KAC3Eu8C,EAAWvsC,KAAKyxE,iBAAiBz/E,EAAG6lB,GACpCvD,EAAIgI,YACJhI,EAAIoI,OAAO1c,KAAKsqC,QAAStqC,KAAKuqC,SAC9Bj2B,EAAIqI,OAAO4vB,EAAS55C,EAAG45C,EAAS7mC,GAChC4O,EAAI0I,SACR,CACA1I,EAAIuG,SACR,CACJ,CACH,UAAAonC,GAAc,CACd,UAAAE,GACO,MAAM7tC,EAAMtU,KAAKsU,IACX4J,EAAOle,KAAK8E,QACZg1C,EAAW57B,EAAKpM,MACtB,IAAKgoC,EAASliC,QACV,OAEJ,MAAMuvB,EAAannC,KAAKyqC,cAAc,GACtC,IAAI5yB,EAAQgB,EACZvE,EAAImG,OACJnG,EAAI8H,UAAUpc,KAAKsqC,QAAStqC,KAAKuqC,SACjCj2B,EAAItS,OAAOmlC,GACX7yB,EAAIgL,UAAY,SAChBhL,EAAIiL,aAAe,SACnBvf,KAAK8R,MAAMxG,QAAQ,CAACqlB,EAAMtsB,KACtB,GAAc,IAAVA,GAAerE,KAAK/P,KAAO,IAAMiuB,EAAKra,QACtC,OAEJ,MAAMg9C,EAAc/G,EAAS/1B,WAAW/jB,KAAKqb,WAAWhX,IAClDu6C,EAAW59B,GAAO6/B,EAAY7sC,MAEpC,GADA6D,EAAS7X,KAAK6qC,8BAA8B7qC,KAAK8R,MAAMzN,GAAO/B,OAC1Du+C,EAAYlnC,kBAAmB,CAC/BrF,EAAIN,KAAO4qC,EAAS1kC,OACpBrB,EAAQvE,EAAI8F,YAAYuW,EAAK4L,OAAO1jB,MACpCvE,EAAIsK,UAAYiiC,EAAYjnC,cAC5B,MAAMrC,EAAUwJ,GAAU8/B,EAAYhnC,iBACtCvF,EAAI0K,UAAUnG,EAAQ,EAAItB,EAAQI,MAAOE,EAAS+mC,EAASp4C,KAAO,EAAI+Q,EAAQC,IAAKqB,EAAQtB,EAAQsB,MAAO+lC,EAASp4C,KAAO+Q,EAAQiE,OACtI,CACAyD,GAAW3K,EAAKqc,EAAK4L,MAAO,GAAI1kB,EAAQ+mC,EAAU,CAC9Ch+C,MAAOigD,EAAYjgD,MACnBwe,YAAayhC,EAAYznC,gBACzB+F,YAAa0hC,EAAY1nC,oBAGjC7E,EAAIuG,SACR,CACH,SAAAwnC,GAAa,EAGd,MAAMyxB,GAAY,CACdC,YAAa,CACTC,QAAQ,EACRxtE,KAAM,EACNypE,MAAO,KAEXgE,OAAQ,CACJD,QAAQ,EACRxtE,KAAM,IACNypE,MAAO,IAEXiE,OAAQ,CACJF,QAAQ,EACRxtE,KAAM,IACNypE,MAAO,IAEXkE,KAAM,CACFH,QAAQ,EACRxtE,KAAM,KACNypE,MAAO,IAEXmE,IAAK,CACDJ,QAAQ,EACRxtE,KAAM,MACNypE,MAAO,IAEXoE,KAAM,CACFL,QAAQ,EACRxtE,KAAM,OACNypE,MAAO,GAEXqE,MAAO,CACHN,QAAQ,EACRxtE,KAAM,OACNypE,MAAO,IAEXsE,QAAS,CACLP,QAAQ,EACRxtE,KAAM,OACNypE,MAAO,GAEXuE,KAAM,CACFR,QAAQ,EACRxtE,KAAM,SAGPiuE,GAAyB12E,OAAOsB,KAAKy0E,IAC3C,SAASY,GAAO7jF,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAASi1B,GAAM3Q,EAAOlX,GACnB,GAAImE,EAAcnE,GACd,OAAO,KAEX,MAAMy2E,EAAUv/D,EAAMw/D,UAChB,OAAEC,EAAO,MAAEnlF,EAAM,WAAEolF,GAAgB1/D,EAAM2/D,WAC/C,IAAIzyE,EAAQpE,EAOZ,MANsB,mBAAX22E,IACPvyE,EAAQuyE,EAAOvyE,IAEdM,EAAeN,KAChBA,EAA0B,iBAAXuyE,EAAsBF,EAAQ5uD,MAAMzjB,EAAOuyE,GAAUF,EAAQ5uD,MAAMzjB,IAExE,OAAVA,EACO,MAEP5S,IACA4S,EAAkB,SAAV5S,IAAqBqY,GAAS+sE,KAA8B,IAAfA,EAAuEH,EAAQ9oC,QAAQvpC,EAAO5S,GAAvEilF,EAAQ9oC,QAAQvpC,EAAO,UAAWwyE,KAE1GxyE,EACZ,CACC,SAAS0yE,GAA0BC,EAAShlF,EAAKD,EAAKklF,GACnD,MAAMjxE,EAAOwwE,GAAMt2E,OACnB,IAAI,IAAInM,EAAIyiF,GAAM7vE,QAAQqwE,GAAUjjF,EAAIiS,EAAO,IAAKjS,EAAE,CAClD,MAAMmjF,EAAWrB,GAAUW,GAAMziF,IAC3B6/B,EAASsjD,EAASlF,MAAQkF,EAASlF,MAAQptE,OAAOuyE,iBACxD,GAAID,EAASnB,QAAUjkF,KAAKknD,MAAMjnD,EAAMC,IAAQ4hC,EAASsjD,EAAS3uE,QAAU0uE,EACxE,OAAOT,GAAMziF,EAErB,CACA,OAAOyiF,GAAMxwE,EAAO,EACxB,CAiBC,SAASoxE,GAAQvjE,EAAOwjE,EAAMC,GAC3B,GAAKA,GAEE,GAAIA,EAAWp3E,OAAQ,CAC1B,MAAM,GAAEuM,EAAG,GAAED,GAAQJ,GAAQkrE,EAAYD,GAEzCxjE,EADkByjE,EAAW7qE,IAAO4qE,EAAOC,EAAW7qE,GAAM6qE,EAAW9qE,KACpD,CACvB,OALIqH,EAAMwjE,IAAQ,CAMtB,CAcC,SAASE,GAAoBpgE,EAAOzD,EAAQ8jE,GACzC,MAAM3jE,EAAQ,GACPtf,EAAM,CAAC,EACRyR,EAAO0N,EAAOxT,OACpB,IAAInM,EAAGsQ,EACP,IAAItQ,EAAI,EAAGA,EAAIiS,IAAQjS,EACnBsQ,EAAQqP,EAAO3f,GACfQ,EAAI8P,GAAStQ,EACb8f,EAAM9L,KAAK,CACP1D,QACAmX,OAAO,IAGf,OAAgB,IAATxV,GAAewxE,EA1BzB,SAAuBrgE,EAAOtD,EAAOtf,EAAKijF,GACvC,MAAMd,EAAUv/D,EAAMw/D,SAChBj5B,GAASg5B,EAAQ9oC,QAAQ/5B,EAAM,GAAGxP,MAAOmzE,GACzC7qE,EAAOkH,EAAMA,EAAM3T,OAAS,GAAGmE,MACrC,IAAImX,EAAOpV,EACX,IAAIoV,EAAQkiC,EAAOliC,GAAS7O,EAAM6O,GAASk7D,EAAQtwD,IAAI5K,EAAO,EAAGg8D,GAC7DpxE,EAAQ7R,EAAIinB,GACRpV,GAAS,IACTyN,EAAMzN,GAAOoV,OAAQ,GAG7B,OAAO3H,CACX,CAc8C4jE,CAActgE,EAAOtD,EAAOtf,EAAKijF,GAAzC3jE,CACtC,CACA,MAAM6jE,WAAkB19B,GACpB/gB,UAAY,OACfA,gBAAkB,CAClBnf,OAAQ,OACDg0B,SAAU,CAAC,EACXupC,KAAM,CACFT,QAAQ,EACR7F,MAAM,EACNt/E,OAAO,EACPolF,YAAY,EACZG,QAAS,cACTW,eAAgB,CAAC,GAErB9jE,MAAO,CACdxN,OAAQ,OACGhB,UAAU,EACVmW,MAAO,CACH+hC,SAAS,KAIxB,WAAAx8C,CAAYyhB,GACLyhB,MAAMzhB,GACLzgB,KAAK2/B,OAAS,CACX5lB,KAAM,GACNkhB,OAAQ,GACR5G,IAAK,IAERr0B,KAAK61E,MAAQ,MACb71E,KAAK81E,gBAAax1E,EACnBN,KAAK+1E,SAAW,CAAC,EACjB/1E,KAAKg2E,aAAc,EACnBh2E,KAAK+0E,gBAAaz0E,CACtB,CACA,IAAAorC,CAAKygB,EAAWjuC,EAAO,CAAC,GACpB,MAAMo3D,EAAOnpB,EAAUmpB,OAASnpB,EAAUmpB,KAAO,CAAC,GAC3CX,EAAU30E,KAAK40E,SAAW,IAAI7oC,GAASC,MAAMmgB,EAAUpgB,SAASlc,MACvE8kD,EAAQjpC,KAAKxtB,GACb7Y,EAAQiwE,EAAKM,eAAgBjB,EAAQhpC,WACrC3rC,KAAK+0E,WAAa,CACdF,OAAQS,EAAKT,OACbnlF,MAAO4lF,EAAK5lF,MACZolF,WAAYQ,EAAKR,YAErB5yC,MAAMwJ,KAAKygB,GACXnsD,KAAKg2E,YAAc93D,EAAK+3D,UAC5B,CACH,KAAAlwD,CAAM+W,EAAKz4B,GACJ,YAAY/D,IAARw8B,EACO,KAEJ/W,GAAM/lB,KAAM88B,EACvB,CACA,YAAAsU,GACIlP,MAAMkP,eACNpxC,KAAK2/B,OAAS,CACV5lB,KAAM,GACNkhB,OAAQ,GACR5G,IAAK,GAEb,CACA,mBAAA+lB,GACI,MAAMt1C,EAAU9E,KAAK8E,QACf6vE,EAAU30E,KAAK40E,SACf5F,EAAOlqE,EAAQwwE,KAAKtG,MAAQ,MAClC,IAAI,IAAE/+E,EAAI,IAAED,EAAI,WAAEid,EAAW,WAAEC,GAAgBlN,KAAKmN,gBAC3D,SAAS+oE,EAAan+D,GACN9K,GAAe9E,MAAM4P,EAAO9nB,OAC7BA,EAAMF,KAAKE,IAAIA,EAAK8nB,EAAO9nB,MAE1Bid,GAAe/E,MAAM4P,EAAO/nB,OAC7BA,EAAMD,KAAKC,IAAIA,EAAK+nB,EAAO/nB,KAEnC,CACKid,GAAeC,IAChBgpE,EAAal2E,KAAKm2E,mBACK,UAAnBrxE,EAAQiT,QAA+C,WAAzBjT,EAAQgN,MAAMxN,QAC5C4xE,EAAal2E,KAAK27B,WAAU,KAGpC1rC,EAAM2S,EAAe3S,KAASkY,MAAMlY,GAAOA,GAAO0kF,EAAQ9oC,QAAQzb,KAAKC,MAAO2+C,GAC9Eh/E,EAAM4S,EAAe5S,KAASmY,MAAMnY,GAAOA,GAAO2kF,EAAQ7oC,MAAM1b,KAAKC,MAAO2+C,GAAQ,EACpFhvE,KAAK/P,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/BgQ,KAAKhQ,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EACjC,CACH,eAAAmmF,GACO,MAAM1xD,EAAMzkB,KAAKo2E,qBACjB,IAAInmF,EAAM4S,OAAOkE,kBACb/W,EAAM6S,OAAOm5B,kBAKjB,OAJIvX,EAAItmB,SACJlO,EAAMw0B,EAAI,GACVz0B,EAAMy0B,EAAIA,EAAItmB,OAAS,IAEpB,CACHlO,MACAD,MAER,CACH,UAAA0qD,GACO,MAAM51C,EAAU9E,KAAK8E,QACfuxE,EAAWvxE,EAAQwwE,KACnBx7B,EAAWh1C,EAAQgN,MACnByjE,EAAiC,WAApBz7B,EAASx1C,OAAsBtE,KAAKo2E,qBAAuBp2E,KAAKs2E,YAC5D,UAAnBxxE,EAAQiT,QAAsBw9D,EAAWp3E,SACzC6B,KAAK/P,IAAM+P,KAAK+4C,UAAYw8B,EAAW,GACvCv1E,KAAKhQ,IAAMgQ,KAAK84C,UAAYy8B,EAAWA,EAAWp3E,OAAS,IAE/D,MAAMlO,EAAM+P,KAAK/P,IAEX6hB,EDhjVV,SAAwBH,EAAQ1hB,EAAKD,GACrC,IAAI4Z,EAAQ,EACRC,EAAM8H,EAAOxT,OACjB,KAAMyL,EAAQC,GAAO8H,EAAO/H,GAAS3Z,GACjC2Z,IAEJ,KAAMC,EAAMD,GAAS+H,EAAO9H,EAAM,GAAK7Z,GACnC6Z,IAEJ,OAAOD,EAAQ,GAAKC,EAAM8H,EAAOxT,OAASwT,EAAOjP,MAAMkH,EAAOC,GAAO8H,CACzE,CCsiVsB4kE,CAAehB,EAAYtlF,EAD7B+P,KAAKhQ,KAQjB,OANAgQ,KAAK61E,MAAQQ,EAASrH,OAASl1B,EAASzgC,SAAW27D,GAA0BqB,EAASpB,QAASj1E,KAAK/P,IAAK+P,KAAKhQ,IAAKgQ,KAAKw2E,kBAAkBvmF,IAnKjJ,SAAoCmlB,EAAO4nC,EAAUi4B,EAAShlF,EAAKD,GAChE,IAAI,IAAIgC,EAAIyiF,GAAMt2E,OAAS,EAAGnM,GAAKyiF,GAAM7vE,QAAQqwE,GAAUjjF,IAAI,CAC3D,MAAMg9E,EAAOyF,GAAMziF,GACnB,GAAI8hF,GAAU9E,GAAMgF,QAAU5+D,EAAMw/D,SAAShpC,KAAK57C,EAAKC,EAAK++E,IAAShyB,EAAW,EAC5E,OAAOgyB,CAEf,CACA,OAAOyF,GAAMQ,EAAUR,GAAM7vE,QAAQqwE,GAAW,EACpD,CA2J0JwB,CAA2Bz2E,KAAM8R,EAAM3T,OAAQk4E,EAASpB,QAASj1E,KAAK/P,IAAK+P,KAAKhQ,MAClOgQ,KAAK81E,WAAch8B,EAASrgC,MAAM+hC,SAA0B,SAAfx7C,KAAK61E,MA3JzD,SAA4B7G,GACzB,IAAI,IAAIh9E,EAAIyiF,GAAM7vE,QAAQoqE,GAAQ,EAAG/qE,EAAOwwE,GAAMt2E,OAAQnM,EAAIiS,IAAQjS,EAClE,GAAI8hF,GAAUW,GAAMziF,IAAIgiF,OACpB,OAAOS,GAAMziF,EAGzB,CAqJyF0kF,CAAmB12E,KAAK61E,YAApCv1E,EACrEN,KAAK22E,YAAYpB,GACbzwE,EAAQjB,SACRiO,EAAMjO,UAEH2xE,GAAoBx1E,KAAM8R,EAAO9R,KAAK81E,WACjD,CACA,aAAA35B,GACQn8C,KAAK8E,QAAQ8xE,qBACb52E,KAAK22E,YAAY32E,KAAK8R,MAAMtf,IAAKm+B,IAAQA,EAAKruB,OAEtD,CACH,WAAAq0E,CAAYpB,EAAa,IAClB,IAEI55B,EAAO/wC,EAFPhB,EAAQ,EACRC,EAAM,EAEN7J,KAAK8E,QAAQ+S,QAAU09D,EAAWp3E,SAClCw9C,EAAQ37C,KAAK62E,mBAAmBtB,EAAW,IAEvC3rE,EADsB,IAAtB2rE,EAAWp3E,OACH,EAAIw9C,GAEH37C,KAAK62E,mBAAmBtB,EAAW,IAAM55B,GAAS,EAE/D/wC,EAAO5K,KAAK62E,mBAAmBtB,EAAWA,EAAWp3E,OAAS,IAE1D0L,EADsB,IAAtB0rE,EAAWp3E,OACLyM,GAECA,EAAO5K,KAAK62E,mBAAmBtB,EAAWA,EAAWp3E,OAAS,KAAO,GAGpF,MAAMwiD,EAAQ40B,EAAWp3E,OAAS,EAAI,GAAM,IAC5CyL,EAAQO,GAAYP,EAAO,EAAG+2C,GAC9B92C,EAAMM,GAAYN,EAAK,EAAG82C,GAC1B3gD,KAAK+1E,SAAW,CACZnsE,QACAC,MACAgoB,OAAQ,GAAKjoB,EAAQ,EAAIC,GAEjC,CACH,SAAAysE,GACO,MAAM3B,EAAU30E,KAAK40E,SACf3kF,EAAM+P,KAAK/P,IACXD,EAAMgQ,KAAKhQ,IACX8U,EAAU9E,KAAK8E,QACfuxE,EAAWvxE,EAAQwwE,KACnB97D,EAAQ68D,EAASrH,MAAQgG,GAA0BqB,EAASpB,QAAShlF,EAAKD,EAAKgQ,KAAKw2E,kBAAkBvmF,IACtGw+E,EAAWxrE,EAAe6B,EAAQgN,MAAM28D,SAAU,GAClDqI,EAAoB,SAAVt9D,GAAmB68D,EAASvB,WACtCiC,EAAahvE,GAAS+uE,KAAwB,IAAZA,EAClChlE,EAAQ,CAAC,EACf,IACIwjE,EAAM7oE,EADNkvC,EAAQ1rD,EAMZ,GAJI8mF,IACAp7B,GAASg5B,EAAQ9oC,QAAQ8P,EAAO,UAAWm7B,IAE/Cn7B,GAASg5B,EAAQ9oC,QAAQ8P,EAAOo7B,EAAa,MAAQv9D,GACjDm7D,EAAQ/oC,KAAK57C,EAAKC,EAAKupB,GAAS,IAASi1D,EACzC,MAAM,IAAItqD,MAAMl0B,EAAM,QAAUD,EAAM,uCAAyCy+E,EAAW,IAAMj1D,GAEpG,MAAM+7D,EAAsC,SAAzBzwE,EAAQgN,MAAMxN,QAAqBtE,KAAKg3E,oBAC3D,IAAI1B,EAAO35B,EAAOlvC,EAAQ,EAAG6oE,EAAOtlF,EAAKslF,GAAQX,EAAQtwD,IAAIixD,EAAM7G,EAAUj1D,GAAQ/M,IACjF4oE,GAAQvjE,EAAOwjE,EAAMC,GAKzB,OAHID,IAAStlF,GAA0B,UAAnB8U,EAAQiT,QAAgC,IAAVtL,GAC9C4oE,GAAQvjE,EAAOwjE,EAAMC,GAElBx3E,OAAOsB,KAAKyS,GAAOiuB,KAAK20C,IAAQliF,IAAKG,IAAKA,EACrD,CACH,gBAAA6pC,CAAiBl6B,GACV,MAAMqyE,EAAU30E,KAAK40E,SACfyB,EAAWr2E,KAAK8E,QAAQwwE,KAC9B,OAAIe,EAASY,cACFtC,EAAQljE,OAAOnP,EAAO+zE,EAASY,eAEnCtC,EAAQljE,OAAOnP,EAAO+zE,EAAST,eAAesB,SACzD,CACH,MAAAzlE,CAAOnP,EAAOmP,GACP,MACMk6B,EADU3rC,KAAK8E,QACGwwE,KAAKM,eACvB5G,EAAOhvE,KAAK61E,MACZsB,EAAM1lE,GAAUk6B,EAAQqjC,GAC9B,OAAOhvE,KAAK40E,SAASnjE,OAAOnP,EAAO60E,EACvC,CACH,mBAAAC,CAAoB9B,EAAMjxE,EAAOyN,EAAOL,GACjC,MAAM3M,EAAU9E,KAAK8E,QACfsM,EAAYtM,EAAQgN,MAAMxO,SAChC,GAAI8N,EACA,OAAO9N,EAAS8N,EAAW,CACvBkkE,EACAjxE,EACAyN,GACD9R,MAEP,MAAM2rC,EAAU7mC,EAAQwwE,KAAKM,eACvB5G,EAAOhvE,KAAK61E,MACZJ,EAAYz1E,KAAK81E,WACjBuB,EAAcrI,GAAQrjC,EAAQqjC,GAC9BsI,EAAc7B,GAAa9pC,EAAQ8pC,GACnC9kD,EAAO7e,EAAMzN,GACboV,EAAQg8D,GAAa6B,GAAe3mD,GAAQA,EAAKlX,MACvD,OAAOzZ,KAAK40E,SAASnjE,OAAO6jE,EAAM7jE,IAAWgI,EAAQ69D,EAAcD,GACvE,CACH,kBAAAv6B,CAAmBhrC,GACZ,IAAI9f,EAAGiS,EAAM0sB,EACb,IAAI3+B,EAAI,EAAGiS,EAAO6N,EAAM3T,OAAQnM,EAAIiS,IAAQjS,EACxC2+B,EAAO7e,EAAM9f,GACb2+B,EAAK4L,MAAQv8B,KAAKo3E,oBAAoBzmD,EAAKruB,MAAOtQ,EAAG8f,EAE7D,CACH,kBAAA+kE,CAAmBv0E,GACZ,OAAiB,OAAVA,EAAiBo5B,KAAOp5B,EAAQtC,KAAK/P,MAAQ+P,KAAKhQ,IAAMgQ,KAAK/P,IACxE,CACH,gBAAAmd,CAAiB9K,GACV,MAAMi1E,EAAUv3E,KAAK+1E,SACfjsD,EAAM9pB,KAAK62E,mBAAmBv0E,GACpC,OAAOtC,KAAKskC,oBAAoBizC,EAAQ3tE,MAAQkgB,GAAOytD,EAAQ1lD,OACnE,CACH,gBAAA2S,CAAiBxpB,GACV,MAAMu8D,EAAUv3E,KAAK+1E,SACfjsD,EAAM9pB,KAAKq/C,mBAAmBrkC,GAASu8D,EAAQ1lD,OAAS0lD,EAAQ1tE,IACtE,OAAO7J,KAAK/P,IAAM65B,GAAO9pB,KAAKhQ,IAAMgQ,KAAK/P,IAC7C,CACH,aAAAunF,CAAcj7C,GACP,MAAMk7C,EAAYz3E,KAAK8E,QAAQgN,MACzB4lE,EAAiB13E,KAAKsU,IAAI8F,YAAYmiB,GAAO1jB,MAC7C1P,EAAQZ,GAAUvI,KAAKqiC,eAAiBo1C,EAAUx+D,YAAcw+D,EAAUz+D,aAC1E2+D,EAAc5nF,KAAKuf,IAAInG,GACvByuE,EAAc7nF,KAAKse,IAAIlF,GACvB0uE,EAAe73E,KAAKi/C,wBAAwB,GAAGz4C,KACrD,MAAO,CACH1U,EAAG4lF,EAAiBC,EAAcE,EAAeD,EACjD9nF,EAAG4nF,EAAiBE,EAAcC,EAAeF,EAEzD,CACH,iBAAAnB,CAAkBsB,GACX,MAAMzB,EAAWr2E,KAAK8E,QAAQwwE,KACxBM,EAAiBS,EAAST,eAC1BnkE,EAASmkE,EAAeS,EAASrH,OAAS4G,EAAe7B,YACzDgE,EAAe/3E,KAAKo3E,oBAAoBU,EAAa,EAAGtC,GAAoBx1E,KAAM,CACpF83E,GACD93E,KAAK81E,YAAarkE,GACfjL,EAAOxG,KAAKw3E,cAAcO,GAC1B7C,EAAWnlF,KAAK8X,MAAM7H,KAAKqiC,eAAiBriC,KAAK6Y,MAAQrS,EAAK1U,EAAIkO,KAAKwb,OAAShV,EAAK1W,GAAK,EAChG,OAAOolF,EAAW,EAAIA,EAAW,CACrC,CACH,iBAAA8B,GACO,IACIhlF,EAAGiS,EADHsxE,EAAav1E,KAAK2/B,OAAO5lB,MAAQ,GAErC,GAAIw7D,EAAWp3E,OACX,OAAOo3E,EAEX,MAAMh8B,EAAQv5C,KAAK61B,0BACnB,GAAI71B,KAAKg2E,aAAez8B,EAAMp7C,OAC1B,OAAO6B,KAAK2/B,OAAO5lB,KAAOw/B,EAAM,GAAGxjB,WAAWqG,mBAAmBp8B,MAErE,IAAIhO,EAAI,EAAGiS,EAAOs1C,EAAMp7C,OAAQnM,EAAIiS,IAAQjS,EACxCujF,EAAaA,EAAWz1C,OAAOyZ,EAAMvnD,GAAG+jC,WAAWqG,mBAAmBp8B,OAE1E,OAAOA,KAAK2/B,OAAO5lB,KAAO/Z,KAAKwtB,UAAU+nD,EAC7C,CACH,kBAAAa,GACO,MAAMb,EAAav1E,KAAK2/B,OAAO1E,QAAU,GACzC,IAAIjpC,EAAGiS,EACP,GAAIsxE,EAAWp3E,OACX,OAAOo3E,EAEX,MAAMt6C,EAASj7B,KAAKk7B,YACpB,IAAIlpC,EAAI,EAAGiS,EAAOg3B,EAAO98B,OAAQnM,EAAIiS,IAAQjS,EACzCujF,EAAWvvE,KAAK+f,GAAM/lB,KAAMi7B,EAAOjpC,KAEvC,OAAOgO,KAAK2/B,OAAO1E,OAASj7B,KAAKg2E,YAAcT,EAAav1E,KAAKwtB,UAAU+nD,EAC/E,CACH,SAAA/nD,CAAU7b,GACH,OAAOpG,GAAaoG,EAAOouB,KAAK20C,IACpC,EAGJ,SAAS,GAAYpqE,EAAO7I,EAAKoC,GAC7B,IAEIm0E,EAAYC,EAAYC,EAAYC,EAFpCztE,EAAK,EACLD,EAAKH,EAAMnM,OAAS,EAEpB0F,GACIpC,GAAO6I,EAAMI,GAAIof,KAAOroB,GAAO6I,EAAMG,GAAIqf,OACtCpf,KAAKD,MAAQE,GAAaL,EAAO,MAAO7I,MAE5CqoB,IAAKkuD,EAAa1C,KAAM4C,GAAgB5tE,EAAMI,MAC9Cof,IAAKmuD,EAAa3C,KAAM6C,GAAgB7tE,EAAMG,MAE7ChJ,GAAO6I,EAAMI,GAAI4qE,MAAQ7zE,GAAO6I,EAAMG,GAAI6qE,QACvC5qE,KAAKD,MAAQE,GAAaL,EAAO,OAAQ7I,MAE7C6zE,KAAM0C,EAAaluD,IAAKouD,GAAgB5tE,EAAMI,MAC9C4qE,KAAM2C,EAAanuD,IAAKquD,GAAgB7tE,EAAMG,KAErD,MAAM2tE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAez2E,EAAMu2E,GAAcI,EAAOF,CACvF,CACA,MAAMG,WAAwB1C,GAC1Bz+C,UAAY,aACfA,gBAAkBy+C,GAAUr/D,SAC5B,WAAAtX,CAAYyhB,GACLyhB,MAAMzhB,GACLzgB,KAAKs4E,OAAS,GACdt4E,KAAKu4E,aAAUj4E,EACfN,KAAKw4E,iBAAcl4E,CACxB,CACH,WAAAq2E,GACO,MAAMpB,EAAav1E,KAAKy4E,yBAClBnuE,EAAQtK,KAAKs4E,OAASt4E,KAAK04E,iBAAiBnD,GAClDv1E,KAAKu4E,QAAU,GAAYjuE,EAAOtK,KAAK/P,KACvC+P,KAAKw4E,YAAc,GAAYluE,EAAOtK,KAAKhQ,KAAOgQ,KAAKu4E,QACvDr2C,MAAMy0C,YAAYpB,EACtB,CACH,gBAAAmD,CAAiBnD,GACV,MAAM,IAAEtlF,EAAI,IAAED,GAASgQ,KACjBwL,EAAQ,GACRlB,EAAQ,GACd,IAAItY,EAAGiS,EAAMokB,EAAM4X,EAAMzZ,EACzB,IAAIx0B,EAAI,EAAGiS,EAAOsxE,EAAWp3E,OAAQnM,EAAIiS,IAAQjS,EAC7CiuC,EAAOs1C,EAAWvjF,GACdiuC,GAAQhwC,GAAOgwC,GAAQjwC,GACvBwb,EAAMxF,KAAKi6B,GAGnB,GAAIz0B,EAAMrN,OAAS,EACf,MAAO,CACH,CACIm3E,KAAMrlF,EACN65B,IAAK,GAET,CACIwrD,KAAMtlF,EACN85B,IAAK,IAIjB,IAAI93B,EAAI,EAAGiS,EAAOuH,EAAMrN,OAAQnM,EAAIiS,IAAQjS,EACxCw0B,EAAOhb,EAAMxZ,EAAI,GACjBq2B,EAAO7c,EAAMxZ,EAAI,GACjBiuC,EAAOz0B,EAAMxZ,GACTjC,KAAKL,OAAO82B,EAAO6B,GAAQ,KAAO4X,GAClC31B,EAAMtE,KAAK,CACPsvE,KAAMr1C,EACNnW,IAAK93B,GAAKiS,EAAO,KAI7B,OAAOqG,CACX,CACH,SAAAgsE,GACO,MAAMrmF,EAAM+P,KAAK/P,IACXD,EAAMgQ,KAAKhQ,IACjB,IAAIulF,EAAarzC,MAAM80C,oBAOvB,OANKzB,EAAW5iE,SAAS1iB,IAASslF,EAAWp3E,QACzCo3E,EAAWlqE,OAAO,EAAG,EAAGpb,GAEvBslF,EAAW5iE,SAAS3iB,IAA8B,IAAtBulF,EAAWp3E,QACxCo3E,EAAWvvE,KAAKhW,GAEbulF,EAAWx1C,KAAK,CAAClvC,EAAGC,IAAID,EAAIC,EACvC,CACH,sBAAA2nF,GACO,IAAIlD,EAAav1E,KAAK2/B,OAAOtL,KAAO,GACpC,GAAIkhD,EAAWp3E,OACX,OAAOo3E,EAEX,MAAMx7D,EAAO/Z,KAAKg3E,oBACZz6C,EAAQv8B,KAAKo2E,qBAOnB,OALIb,EADAx7D,EAAK5b,QAAUo+B,EAAMp+B,OACR6B,KAAKwtB,UAAUzT,EAAK+lB,OAAOvD,IAE3BxiB,EAAK5b,OAAS4b,EAAOwiB,EAEtCg5C,EAAav1E,KAAK2/B,OAAOtL,IAAMkhD,EACxBA,CACX,CACH,kBAAAsB,CAAmBv0E,GACZ,OAAQ,GAAYtC,KAAKs4E,OAAQh2E,GAAStC,KAAKu4E,SAAWv4E,KAAKw4E,WACnE,CACH,gBAAAh0C,CAAiBxpB,GACV,MAAMu8D,EAAUv3E,KAAK+1E,SACf32B,EAAUp/C,KAAKq/C,mBAAmBrkC,GAASu8D,EAAQ1lD,OAAS0lD,EAAQ1tE,IAC1E,OAAO,GAAY7J,KAAKs4E,OAAQl5B,EAAUp/C,KAAKw4E,YAAcx4E,KAAKu4E,SAAS,EAC/E,EAGJ,IAAIljE,GAAsBtX,OAAOu/B,OAAO,CACxCiO,UAAW,KACX8hC,cAAeA,GACfuC,YAAaA,GACbQ,iBAAkBA,GAClB+B,kBAAmBA,GACnBwD,UAAWA,GACX0C,gBAAiBA,KAGjB,MAAMM,GAAgB,CAClBrtC,GACA,GACAp2B,GACAG,IC/zWJ80C,GAAMlH,YAAY01B,IAGlB,W","sources":["webpack://ktistec/./node_modules/@kurkle/color/dist/color.esm.js","webpack://ktistec/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://ktistec/./node_modules/chart.js/dist/chart.js","webpack://ktistec/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","length","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","ArcElement","selfJoin","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","measureLabelSize","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}