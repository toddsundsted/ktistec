{"version":3,"file":"868.bundle.js","mappings":"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","sources":["webpack://ktistec/./node_modules/@kurkle/color/dist/color.esm.js","webpack://ktistec/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://ktistec/./node_modules/chart.js/dist/chart.js","webpack://ktistec/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","length","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}