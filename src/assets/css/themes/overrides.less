/**
  * Semantic UI Overrides
  *
  * This file overrides just enough of Semantic UI's default styles to
  * get light/dark mode theming working.
  *
  */

body {
    background-color: var(--bg-primary) !important;
    color: var(--text-primary) !important;
}

/* Anchors */
a {
    color: var(--anchor-color);
    &:hover {
        color: hsl(from var(--anchor-color) h s calc(l - 10));
    }
}

/* Buttons */
.ui.primary.button, .ui.primary.buttons .button, .ui.button {
    background-color: var(--semantic-primary);
    &:hover {
        background-color: hsl(from var(--semantic-primary) h s calc(l - 10));
    }
}
.ui.button {
    color: var(--text-primary);
}

/* Cards and segments */

.ui.segments, .ui.card {
    background-color: var(--color-transparent) !important;
    border: 1px solid var(--border-color) !important;
    box-shadow: 0 1px 2px 0 var(--border-color) !important;
    color: var(--text-primary) !important;
}
.ui.segment {
    background-color: var(--color-transparent) !important;
}

.ui.card .content .header {
    color: var(--text-primary) !important;
}

/* Inputs and forms */

.ui.form textarea,
.ui.form .ui.selection.dropdown,
.ui.form input[type=text],
.ui.form input[type=password],
trix-editor {
    background-color: var(--bg-input) !important;
    color: var(--text-primary) !important;
    border-color: var(--border-color) !important;
}

.ui.form .field.error {
    textarea,
    .ui.selection.dropdown,
    input[type="text"],
    input[type=password] {
        background-color: var(--error-bg-color) !important;
        color: var(--error-text-color) !important;
        border-color: var(--error-border-color) !important;
    }
}

.ui.form .field label,
.ui.form .inline.fields label,
.ui.slider.checkbox label {
    color: var(--text-primary) !important;
}
.ui.slider.checkbox input:checked ~ label,
.ui.slider.checkbox input:checked:focus ~ label {
    color: var(--text-primary) !important;
}
.ui.toggle.checkbox input:checked ~ label,
.ui.toggle.checkbox input:checked:focus ~ label {
    color: var(--semantic-primary) !important;
    &::before {
        background-color: var(--anchor-color) !important;
    }
}

/* Trix Toolbar */
trix-toolbar {
    .trix-toolbar-container {
        button.trix-active {
            background-color: var(--semantic-primary) !important;
        }
        button:hover {
            background-color: hsl(from var(--semantic-primary) h s 50%) !important;
        }
    }
    .trix-dialog {
        background-color: var(--bg-transparent) !important;
        color: var(--text-primary) !important;
    }
    .trix-input, .trix-button {
        background-color: var(--bg-transparent) !important;
        color: var(--text-primary) !important;
        border-color: var(--border-color) !important
    }
}

/* Labels */

.ui.labels .label {
    background-color: var(--bg-label) !important;
    color: var(--text-secondary) !important;

    &:hover {
        filter: brightness(90%) !important;
    }
}

/* Menus */

.ui.secondary.menu {
    background-color: var(--bg-primary) !important;
    color: var(--text-primary) !important;
    .item {
        color: var(--text-primary) !important;
        &:hover {
            background-color: var(--bg-hover) !important;
            color: var(--text-primary) !important;
        }
    }
}

.ui.icon.menu {
    background-color: var(--bg-icon-menu) !important;
    color: var(--text-primary) !important;
    .item {
        color: var(--text-primary) !important;
    }
}

/* Tables */

.ui.table {
    color: var(--text-primary) !important;
    background-color: var(--color-transparent) !important;
    border: 1px solid var(--border-color) !important;
    tr td {
        border-top: 1px solid var(--border-color) !important;
    }
    &.basic {
        border: none !important;
        tr td {
            border-top: 1px solid var(--border-color) !important;
        }
    }
    &.structured.celled {
        tr td {
            border-right: 1px solid var(--border-color) !important;
        }
    }
}

/* Headers and descriptions */

.ui.header, .ui.dividing.header {
    color: var(--text-primary) !important;
}

/* Messages */

.ui.warning.message {
    background-color: #fffaf3 !important;
    color: #573a08 !important;
}

/* Feed elements */

.ui.feed .event .label .icon {
    color: var(--text-secondary) !important;
}

.ui.feed .event .content .date {
    color: var(--text-muted) !important;
}

.ui.feed .event .content .summary {
    color: var(--text-primary) !important;
}

.ui.feed .event .content .extra.text {
    color: var(--text-primary) !important;
}

.ui.feed .event .content .meta {
    color: var(--text-secondary);
}

// fixes a specificity issue with exactly these elements
.ui.feed .event .content .meta a:hover .icon {
    color: inherit;
}

/* Dropdowns */

.ui.menu .ui.dropdown .menu {
    background-color: var(--bg-primary) !important;
    border-color: var(--border-color) !important;
}

.ui.menu .ui.dropdown .menu .item {
    background-color: var(--bg-primary) !important;
    color: var(--text-primary) !important;
}

.ui.menu .ui.dropdown .menu .item:hover {
    background-color: var(--bg-hover) !important;
    color: var(--text-primary) !important;
}
