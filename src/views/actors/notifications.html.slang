- content_for "title" do
  | Notifications
- if notifications.empty?
  .ui.basic.very.padded.center.aligned.segment
    .ui.icon.header
      i.exclamation.icon
      | There is nothing here, yet.
    .ui.text
      | This page lists notifications about mentions, replies, follows, etc. that you've received.
- else
  h1 Notifications
  section.ui.feed data-controller="icon-load-error"
    - notifications.each do |notification|
      article.event
        - case notification
        - in Relationship::Content::Notification::Announce
          crystal:
            activity = notification.activity
            activities = activity.object.activities(inclusion: activity.type)
          .label
            - if (icon = activity.actor.icon)
              img data-actor-id=activity.actor.id src=icon
            - else
              i.user.icon
          .content
            .summary
              a> href=remote_actor_path(activity.actor) = activity.actor.display_name
              - if activities.size > 1
                | and #{pluralize(activities.size - 1, "other")} shared
              - else
                | shared
              a< href=remote_object_path(activity.object) your post
              | .
            - if (content = Ktistec::Util.render_as_text(activity.object.content).presence)
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification::Like
          crystal:
            activity = notification.activity
            activities = activity.object.activities(inclusion: activity.type)
          .label
            - if (icon = activity.actor.icon)
              img data-actor-id=activity.actor.id src=icon
            - else
              i.user.icon
          .content
            .summary
              a> href=remote_actor_path(activity.actor) = activity.actor.display_name
              - if activities.size > 1
                | and #{pluralize(activities.size - 1, "other")} liked
              - else
                | liked
              a< href=remote_object_path(activity.object) your post
              | .
            - if (content = Ktistec::Util.render_as_text(activity.object.content).presence)
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification::Reply
          crystal:
            object = notification.object
            content = Ktistec::Util.render_as_text(object.content).presence
            attributed_to = object.attributed_to
            in_reply_to = object.in_reply_to
          .label
            - if (icon = attributed_to.icon)
              img data-actor-id=attributed_to.id src=icon
            - else
              i.user.icon
          .content
            .summary
              a> href=remote_actor_path(attributed_to) = attributed_to.display_name
              a> href=remote_object_path(object) replied to
              a< href=remote_object_path(in_reply_to) your post
              | .
            - if content
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification::Hashtag
          crystal:
            object = notification.object
            content = Ktistec::Util.render_as_text(object.content).presence
            attributed_to = object.attributed_to
          .label
            - if (icon = attributed_to.icon)
              img data-actor-id=attributed_to.id src=icon
            - else
              i.user.icon
          .content
            .summary
              crystal:
                ht1 = object.hashtags.map(&.name.downcase)
                ht2 = Relationship::Content::Follow::Hashtag.where(actor: actor).map(&.name.downcase)
                ht3 = (ht1 & ht2)
              a> href=remote_actor_path(attributed_to) = attributed_to.display_name
              | tagged
              a<> href=remote_object_path(object) a post
              | with
              - ht3.each do |hashtag|
                a< href=hashtag_path(hashtag) ##{hashtag}
              | .
            - if content
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification::Mention
          crystal:
            object = notification.object
            content = Ktistec::Util.render_as_text(object.content).presence
            attributed_to = object.attributed_to
          .label
            - if (icon = attributed_to.icon)
              img data-actor-id=attributed_to.id src=icon
            - else
              i.user.icon
          .content
            .summary
              crystal:
                mn1 = object.mentions.map(&.name.downcase)
                mn2 = Relationship::Content::Follow::Mention.where(actor: actor).map(&.name.downcase)
                mn3 = (mn1 & mn2)
              - if mn1.includes?(actor.account_uri)
                a> href=remote_actor_path(attributed_to) = attributed_to.display_name
                a> href=remote_object_path(object) mentioned
                | you.
              - else
                a> href=remote_actor_path(attributed_to) = attributed_to.display_name
                | tagged
                a<> href=remote_object_path(object) a post
                | with
                - mn3.each do |mention|
                  a< href=mention_path(mention) @#{mention.split("@").first}
                | .
            - if content
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification::Follow
          - activity = notification.activity
          .label
            - if (icon = activity.actor.icon)
              img data-actor-id=activity.actor.id src=icon
            - else
              i.user.icon
          .content
            .summary
              a> href=remote_actor_path(activity.actor) = activity.actor.display_name
              | followed you.
            - unless (response = activity.accepted_or_rejected?)
              .extra.text
                form.ui.form method="POST" action=outbox_path(account)
                  input type="hidden" name="authenticity_token" value=env.session.string?("csrf")
                  input type="hidden" name="object" value=activity.iri
                  input.ui.mini.primary.button type="submit" name="type" value="Accept"
                  input.ui.mini.button type="submit" name="type" value="Reject"
            - if response.is_a?(ActivityPub::Activity::Accept)
              .extra.meta
                | Accepted #{ response.short_date }.
            - elsif response.is_a?(ActivityPub::Activity::Reject)
              .extra.meta
                | Rejected #{ response.short_date }.
        - in Relationship::Content::Notification::Thread
          crystal:
            object = notification.object
            content = Ktistec::Util.render_as_text(object.content).presence
            attributed_to = object.attributed_to
          .label
            - if (icon = attributed_to.icon)
              img data-actor-id=attributed_to.id src=icon
            - else
              i.user.icon
          .content
            .summary
              a> href=remote_actor_path(attributed_to) = attributed_to.display_name
              a> href=remote_object_path(object) replied to a thread
              | you follow.
            - if content
              .extra.meta.truncated
                == content
        - in Relationship::Content::Notification
          / This can't happen!
  == paginate(env, notifications)
